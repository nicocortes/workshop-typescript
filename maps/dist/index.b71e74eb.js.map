{"mappings":"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AAQ;oBAAE,SAAS;oBAAE,MAAM;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,OAAO;oBAAE,SAAS;oBAAE,OAAO;oBAAE,MAAM;oBAAE,MAAM;oBAAE,UAAU;oBAAE,MAAM;oBAAE,SAAS;oBAAE,OAAO;oBAAE,OAAO;oBAAE,UAAU;oBAAE,OAAO;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,UAAU;oBAAE,SAAS;oBAAE,MAAM;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,WAAW;oBAAE,OAAO;oBAAE,OAAO;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,MAAM;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,UAAU;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,OAAO;oBAAE,MAAM;oBAAE,OAAO;oBAAE,KAAK;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,WAAW;oBAAE,OAAO;oBAAE,OAAO;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,MAAM;oBAAE,OAAO;oBAAE,SAAS;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,UAAU;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,SAAS;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,SAAS;oBAAE,MAAM;oBAAE,SAAS;oBAAE,OAAO;oBAAE,SAAS;oBAAE,MAAM;oBAAE,MAAM;oBAAE,OAAO;oBAAE,MAAM;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,WAAW;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,MAAM;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,MAAM;oBAAE,WAAW;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,SAAS;oBAAE,MAAM;oBAAE,OAAO;oBAAE,OAAO;oBAAE,MAAM;oBAAE,SAAS;oBAAE,KAAK;oBAAE,SAAS;oBAAE,SAAS;oBAAE,OAAO;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,UAAU;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,OAAO;oBAAE,OAAO;oBAAE,MAAM;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,OAAO;oBAAE,OAAO;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,KAAK;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,UAAU;oBAAE,KAAK;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,KAAK;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,KAAK;oBAAE,MAAM;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,OAAO;oBAAE,SAAS;oBAAE,UAAU;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,UAAU;oBAAE,OAAO;oBAAE,OAAO;oBAAE,MAAM;oBAAE,OAAO;oBAAE,KAAK;oBAAE,OAAO;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,MAAM;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,KAAK;oBAAE,SAAS;oBAAE,OAAO;oBAAE,OAAO;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,SAAS;oBAAE,SAAS;oBAAE,UAAU;oBAAE,SAAS;oBAAE,KAAK;oBAAE,OAAO;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,OAAO;oBAAE,MAA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AM;oBAAE,WAAW;oBAAE,SAAS;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,KAAK;oBAAE,SAAS;oBAAE,MAAM;oBAAE,MAAM;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,WAAW;oBAAE,MAAM;oBAAE,MAAM;oBAAE,WAAW;oBAAE,OAAO;oBAAE,OAAO;oBAAE,MAAM;oBAAE,KAAK;oBAAE,OAAO;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,MAAM;oBAAE,KAAK;oBAAE,MAAM;oBAAE,SAAS;oBAAE,OAAO;oBAAE,UAAU;oBAAE,OAAO;oBAAE,OAAO;oBAAE,OAAO;oBAAE,MAAM;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,OAAO;oBAAE,SAAS;oBAAE,OAAO;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,WAAW;oBAAE,SAAS;oBAAE,MAAM;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,UAAU;oBAAE,OAAO;oBAAE,SAAS;oBAAE,OAAO;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,WAAW;oBAAE,OAAO;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,SAAS;oBAAE,SAAS;oBAAE,SAAS;oBAAE,KAAK;oBAAE,SAAS;oBAAE,OAAO;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,MAAM;oBAAE,SAAS;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,KAAK;oBAAE,OAAO;oBAAE,SAAS;oBAAE,SAAS;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,MAAM;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,MAAM;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,UAAU;oBAAE,UAAU;oBAAE,MAAM;oBAAE,UAAU;oBAAE,MAAM;oBAAE,OAAO;oBAAE,WAAW;oBAAE,UAAU;oBAAE,QAAQ;oBAAE,UAAU;oBAAE,OAAO;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,UAAU;oBAAE,OAAO;oBAAE,OAAO;oBAAE,KAAK;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,SAAS;oBAAE,WAAW;oBAAE,MAAM;oBAAE,MAAM;oBAAE,MAAM;oBAAE,OAAO;oBAAE,UAAU;oBAAE,OAAO;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,KAAK;oBAAE,QAAQ;oBAAE,UAAU;oBAAE,WAAW;oBAAE,OAAO;oBAAE,OAAO;oBAAE,KAAK;oBAAE,SAAS;oBAAE,OAAO;oBAAE,SAAS;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,OAAO;oBAAE,SAAS;oBAAE,WAAW;oBAAE,MAAM;oBAAE,UAAU;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,UAAU;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,MAAM;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,UAAU;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,MAAM;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,YAAY;oBAAE,MAAM;oBAAE,SAAS;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,QAAQ;oBAAE,OAAO;oBAAE,MAAM;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,OAAO;oBAAE,OAAO;oBAAE,QAAQ;oBAAE,SAAS;oBAAE,QAAQ;oBAAE,SAAS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AAU;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,SAAS;gBAAE,OAAO;gBAAE,MAAM;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,MAAM;gBAAE,UAAU;gBAAE,OAAO;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,OAAO;gBAAE,MAAM;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,UAAU;gBAAE,OAAO;gBAAE,MAAM;gBAAE,OAAO;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,OAAO;gBAAE,OAAO;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,WAAW;gBAAE,MAAM;gBAAE,OAAO;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,SAAS;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,MAAM;gBAAE,OAAO;gBAAE,SAAS;gBAAE,MAAM;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,UAAU;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,KAAK;gBAAE,SAAS;gBAAE,OAAO;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,YAAY;gBAAE,SAAS;gBAAE,MAAM;gBAAE,SAAS;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,KAAK;gBAAE,OAAO;gBAAE,WAAW;gBAAE,WAAW;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,WAAW;gBAAE,MAAM;gBAAE,SAAS;gBAAE,MAAM;gBAAE,SAAS;gBAAE,UAAU;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,YAAY;gBAAE,UAAU;gBAAE,YAAY;gBAAE,UAAU;gBAAE,OAAO;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,WAAW;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,KAAK;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,MAAM;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,KAAK;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,OAAO;gBAAE,SAAS;gBAAE,SAAS;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,UAAU;gBAAE,SAAS;gBAAE,KAAK;gBAAE,OAAO;gBAAE,SAAS;gBAAE,MAAM;gBAAE,MAAM;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,UAAU;gBAAE,MAAM;gBAAE,UAAU;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,UAAU;gBAAE,OAAO;gBAAE,OAAO;gBAAE,OAAO;gBAAE,WAAW;gBAAE,UAAU;gBAAE,MAAM;gBAAE,SAAS;gBAAE,UAAU;gBAAE,OAAO;gBAAE,OAAO;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,OAAO;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,OAAO;gBAAE,SAAS;gBAAE,OAAO;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,WAAW;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,OAAO;gBAAE,SAAS;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,WAAW;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,MAAM;gBAAE,MAAM;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,OAAO;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,YAAY;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,WAAW;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,MAAM;gBAAE,OAAO;gBAAE,OAAO;gBAAE,OAAO;gBAAE,SAAS;gBAAE,MAAM;gBAAE,OAAO;gBAAE,SAAS;gBAAE,MAAM;gBAAE,UAAU;gBAAE,UAAU;gBAAE,SAAS;gBAAE,SAAS;gBAAE,UAAU;gBAAE,OAAO;gBAAE,OAAO;gBAAE,OAAO;gBAAE,YAAY;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,SAAS;gBAAE,UAAU;gBAAE,MAAM;gBAAE,OAAO;gBAAE,MAAM;gBAAE,UAAU;gBAAE,OAAO;gBAAE,SAAS;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,OAAO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;gBAAE,UAAU;gBAAE,SAAS;gBAAE,UAAU;gBAAE,UAAU;gBAAE,WAAW;gBAAE,QAAQ;gBAAE,WAAW;gBAAE,YAAY;gBAAE,SAAS;gBAAE,UAAU;gBAAE,UAAU;gBAAE,MAAM;gBAAE,SAAS;gBAAE,SAAS;gBAAE,SAAS;gBAAE,UAAU;gBAAE,WAAW;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,SAAS;gBAAE,UAAU;gBAAE,YAAY;gBAAE,SAAS;gBAAE,SAAS;gBAAE,OAAO;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,WAAW;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,WAAW;gBAAE,WAAW;gBAAE,UAAU;gBAAE,WAAW;gBAAE,SAAS;gBAAE,OAAO;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,OAAO;gBAAE,SAAS;gBAAE,WAAW;gBAAE,SAAS;gBAAE,SAAS;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,MAAM;gBAAE,MAAM;gBAAE,SAAS;gBAAE,YAAY;gBAAE,OAAO;gBAAE,SAAS;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,WAAW;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,WAAW;gBAAE,YAAY;gBAAE,UAAU;gBAAE,YAAY;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,YAAY;gBAAE,UAAU;gBAAE,WAAW;gBAAE,aAAa;gBAAE,OAAO;gBAAE,YAAY;gBAAE,SAAS;gBAAE,SAAS;gBAAE,WAAW;gBAAE,SAAS;gBAAE,SAAS;gBAAE,UAAU;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,SAAS;gBAAE,OAAO;gBAAE,SAAS;gBAAE,UAAU;gBAAE,OAAO;gBAAE,SAAS;gBAAE,UAAU;gBAAE,OAAO;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,SAAS;gBAAE,UAAU;gBAAE,MAAM;gBAAE,MAAM;gBAAE,OAAO;gBAAE,UAAU;gBAAE,SAAS;gBAAE,WAAW;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,WAAW;gBAAE,UAAU;gBAAE,SAAS;gBAAE,OAAO;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,UAAU;gBAAE,MAAM;gBAAE,SAAS;gBAAE,WAAW;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,WAAW;gBAAE,UAAU;gBAAE,MAAM;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,SAAS;gBAAE,OAAO;gBAAE,SAAS;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,WAAW;gBAAE,SAAS;gBAAE,UAAU;gBAAE,SAAS;gBAAE,WAAW;gBAAE,SAAS;gBAAE,UAAU;gBAAE,YAAY;gBAAE,SAAS;gBAAE,SAAS;gBAAE,UAAU;gBAAE,OAAO;gBAAE,SAAS;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,QAAQ;gBAAE,QAAQ;gBAAE,OAAO;gBAAE,SAAS;gBAAE,UAAU;gBAAE,SAAS;gBAAE,WAAW;gBAAE,UAAU;gBAAE,YAAY;gBAAE,MAAM;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,SAAS;gBAAE,OAAO;gBAAE,UAAU;gBAAE,OAAO;gBAAE,SAAS;gBAAE,UAAU;gBAAE,SAAS;gBAAE,SAAS;gBAAE,WAAW;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,UAAU;gBAAE,UAAU;gBAAE,UAAU;gBAAE,QAAQ;gBAAE,SAAS;gBAAE,UAAU;gBAAE,YAAY;gBAAE,aAAa;gBAAE,UAAU;gBAAE,YAAY;gBAAE,OAAO;gBAAE,SAAS;gBAAE,SAAS;gBAAE,UAAU;gBAAE,MAAM;gBAAE,OAAO;gBAAE,OAAO;gBAAE,SAAS;gBAAE,UAAU;gBAAE,OAAO;gBAAE,QAAQ;gBAAE,WAAW;gBAAE,SAAS;gBAAE,OAAO;gBAAE,UAAU;gBAAE,YAAY;gBAAE,MAAM;gBAAE,WAAW;gBAAE,UAAU;gBAAE,OAAO;gBAAE,YAAY;gBAAE,SAAS;gBAAE,UAAU;gBAAE,SAAS;gBAAE,OAAO;gBAAE,SAAS;gBAAE,UAAU;gBAAE,MAAM;g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gBAAC,QAAQ;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,SAAS;gBAAC,UAAU;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,MAAM;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,SAAS;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,OAAO;gBAAC,KAAK;gBAAC,MAAM;gBAAC,OAAO;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,OAAO;gBAAC,OAAO;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,SAAS;gBAAC,OAAO;gBAAC,WAAW;gBAAC,UAAU;gBAAC,OAAO;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,YAAY;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,MAAM;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,KAAK;gBAAC,UAAU;gBAAC,MAAM;gBAAC,UAAU;gBAAC,UAAU;gBAAC,SAAS;gBAAC,OAAO;gBAAC,OAAO;gBAAC,OAAO;gBAAC,OAAO;gBAAC,WAAW;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,OAAO;gBAAC,KAAK;gBAAC,MAAM;gBAAC,SAAS;gBAAC,UAAU;gBAAC,UAAU;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,OAAO;gBAAC,UAAU;gBAAC,OAAO;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,SAAS;gBAAC,SAAS;gBAAC,UAAU;gBAAC,UAAU;gBAAC,OAAO;gBAAC,KAAK;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,KAAK;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,UAAU;gBAAC,MAAM;gBAAC,UAAU;gBAAC,SAAS;gBAAC,SAAS;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,OAAO;gBAAC,MAAM;gBAAC,OAAO;gBAAC,OAAO;gBAAC,MAAM;gBAAC,OAAO;gBAAC,OAAO;gBAAC,WAAW;gBAAC,SAAS;gBAAC,MAAM;gBAAC,OAAO;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,MAAM;gBAAC,MAAM;gBAAC,MAAM;gBAAC,OAAO;gBAAC,OAAO;gBAAC,MAAM;gBAAC,OAAO;gBAAC,SAAS;gBAAC,OAAO;gBAAC,OAAO;gBAAC,MAAM;gBAAC,SAAS;gBAAC,SAAS;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,WAAW;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,SAAS;gBAAC,YAAY;gBAAC,MAAM;gBAAC,SAAS;gBAAC,MAAM;gBAAC,MAAM;gBAAC,MAAM;gBAAC,OAAO;gBAAC,OAAO;gBAAC,WAAW;gBAAC,OAAO;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,WAAW;gBAAC,UAAU;gBAAC,MAAM;gBAAC,OAAO;gBAAC,MAAM;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,UAAU;gBAAC,UAAU;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,UAAU;gBAAC,OAAO;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,SAAS;gBAAC,MAAM;gBAAC,UAAU;gBAAC,UAAU;gBAAC,SAAS;gBAAC,SAAS;gBAAC,OAAO;gBAAC,OAAO;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,YAAY;gBAAC,MAAM;gBAAC,OAAO;gBAAC,KAAK;gBAAC,WAAW;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,MAAM;gBAAC,OAAO;gBAAC,WAAW;gBAAC,YAAY;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,UAAU;gBAAC,WAAW;gBAAC,MAAM;gBAAC,OAAO;gBAAC,SAAS;gBAAC,UAAU;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,UAAU;gBAAC,SAAS;gBAAC,YAAY;gBAAC,OAAO;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,SAAS;gBAAC,MAAM;gBAAC,WAAW;gBAAC,UAAU;gBAAC,MAAM;gBAAC,MAAM;gBAAC,OAAO;gBAAC,WAAW;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,WAAW;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,UAAU;gBAAC,SAAS;gBAAC,SAAS;gBAAC,SAAS;gBAAC,WAAW;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,SAAS;gBAAC,SAAS;gBAAC,MAAM;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,WAAW;gBAAC,OAAO;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,UAAU;gBAAC,SAAS;gBAAC,SAAS;gBAAC,UAAU;gBAAC,SAAS;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,WAAW;gBAAC,QAAQ;gBAAC,WAAW;gBAAC,MAAM;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,WAAW;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,MAAM;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,UAAU;gBAAC,WAAW;gBAAC,SAAS;gBAAC,MAAM;gBAAC,SAAS;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,YAAY;gBAAC,MAAM;gBAAC,WAAW;gBAAC,SAAS;gBAAC,SAAS;gBAAC,MAAM;gBAAC,OAAO;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,SAAS;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,OAAO;gBAAC,WAAW;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,YAAY;gBAAC,SAAS;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,KAAK;gBAAC,MAAM;gBAAC,SAAS;gBAAC,OAAO;gBAAC,MAAM;gBAAC,WAAW;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,SAAS;gBAAC,OAAO;gBAAC,WAAW;gBAAC,UAAU;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,OAAO;gBAAC,UAAU;gBAAC,SAAS;gBAAC,OAAO;gBAAC,SAAS;gBAAC,KAAK;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,UAAU;gBAAC,OAAO;gBAAC,OAAO;gBAAC,MAAM;gBAAC,SAAS;gBAAC,UAAU;gBAAC,OAAO;gBAAC,UAAU;gBAAC,OAAO;gBAAC,OAAO;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,MAAM;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,YAAY;gBAAC,SAAS;gBAAC,WAAW;gBAAC,SAAS;gBAAC,QAAQ;gBAAC,QAAQ;gBAAC,WAAW;gBAAC,MAAM;gBAAC,QAAQ;gBAAC,SAAS;gBAAC,UAAU;gBAAC,UAAU;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,OAAO;gBAAC,OAAO;gBAAC,SAAS;gBAAC,SAAS;gBAAC,SAAS;gBAAC,UAAU;gBAAC,MAAM;gBAAC,SAAS;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,OAAO;gBAAC,UAAU;gBAAC,WAAW;gBAAC,OAAO;gBAAC,QAAQ;gBAAC,OAAO;gBAA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;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,GAAG;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,GAAG;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,GAAG;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,GAAG;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,GAAG;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,GAAG;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,EAAE,IAAI;aAAC;YAAE;gBAAC,IAAI,E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G;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,eAAG;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,gBAAI;AAAC,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","sources":["../../../../../.nvm/versions/node/v18.4.0/bin/node_modules/parcel/node_modules/@parcel/runtime-browser-hmr/lib/runtime-74a92386c515f27c.js","src/index.ts","src/CustomMap.ts","../../../../../.nvm/versions/node/v18.4.0/bin/node_modules/parcel/node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/User.ts","node_modules/chance/chance.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","src/Company.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"5c1b77e3b71e74eb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","/// <reference types=\"@types/google.maps\" />\r\n\r\nimport { User } from './User';\r\nimport { Company } from './Company';\r\nimport { CustomMap } from './CustomMap';\r\n\r\nconst map = new CustomMap('map');\r\nconst user = new User();\r\nconst company = new Company();\r\n\r\nmap.addMarker(user);\r\nmap.addMarker(company);\r\n\r\nif (map) {\r\n  const first = document.getElementById('map');\r\n  if (first) {\r\n    first.style.width = '100%';\r\n    first.style.height = '600px';\r\n  }\r\n}\r\n","//Instructions to every other class on how they can be an argument to 'addMaker'\r\nexport interface Mappable {\r\n  location: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  markerContent(): string;\r\n  color: string;\r\n}\r\n\r\nexport class CustomMap {\r\n  private googleMap: google.maps.Map;\r\n\r\n  constructor(divId: string) {\r\n    this.googleMap = new google.maps.Map(document.getElementById(divId) as HTMLElement, {\r\n      zoom: 1,\r\n      center: {\r\n        lat: 0,\r\n        lng: 0\r\n      }\r\n    });\r\n  }\r\n\r\n  addMarker(mappable: Mappable): void {\r\n    const marker = new google.maps.Marker({\r\n      map: this.googleMap,\r\n      position: {\r\n        lat: mappable.location.lat,\r\n        lng: mappable.location.lng\r\n      }\r\n    });\r\n\r\n    marker.addListener('click', () => {\r\n      const infoWindow = new google.maps.InfoWindow({\r\n        content: mappable.markerContent()\r\n      });\r\n\r\n      infoWindow.open(this.googleMap, marker);\r\n    });\r\n  }\r\n}\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { Chance } from 'chance';\r\nimport { Mappable } from './CustomMap';\r\n\r\nconst type = new Chance();\r\n\r\nexport class User implements Mappable {\r\n  name: string;\r\n  location: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  color: string = 'red';\r\n\r\n  constructor() {\r\n    this.name = type.name();\r\n    this.location = {\r\n      lat: type.latitude(),\r\n      lng: type.longitude()\r\n    };\r\n  }\r\n\r\n  markerContent(): string {\r\n    return `User name: ${this.name}`;\r\n  }\r\n}\r\n","//  Chance.js 1.1.8\n//  http://chancejs.com\n//  (c) 2013 Victor Quinn\n//  Chance may be freely distributed or modified under the MIT license.\n\n(function () {\n\n    // Constants\n    var MAX_INT = 9007199254740992;\n    var MIN_INT = -MAX_INT;\n    var NUMBERS = '0123456789';\n    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';\n    var CHARS_UPPER = CHARS_LOWER.toUpperCase();\n    var HEX_POOL  = NUMBERS + \"abcdef\";\n\n    // Errors\n    function UnsupportedError(message) {\n        this.name = 'UnsupportedError';\n        this.message = message || 'This feature is not supported on this platform';\n    }\n\n    UnsupportedError.prototype = new Error();\n    UnsupportedError.prototype.constructor = UnsupportedError;\n\n    // Cached array helpers\n    var slice = Array.prototype.slice;\n\n    // Constructor\n    function Chance (seed) {\n        if (!(this instanceof Chance)) {\n            if (!seed) { seed = null; } // handle other non-truthy seeds, as described in issue #322\n            return seed === null ? new Chance() : new Chance(seed);\n        }\n\n        // if user has provided a function, use that as the generator\n        if (typeof seed === 'function') {\n            this.random = seed;\n            return this;\n        }\n\n        if (arguments.length) {\n            // set a starting value of zero so we can add to it\n            this.seed = 0;\n        }\n\n        // otherwise, leave this.seed blank so that MT will receive a blank\n\n        for (var i = 0; i < arguments.length; i++) {\n            var seedling = 0;\n            if (Object.prototype.toString.call(arguments[i]) === '[object String]') {\n                for (var j = 0; j < arguments[i].length; j++) {\n                    // create a numeric hash for each argument, add to seedling\n                    var hash = 0;\n                    for (var k = 0; k < arguments[i].length; k++) {\n                        hash = arguments[i].charCodeAt(k) + (hash << 6) + (hash << 16) - hash;\n                    }\n                    seedling += hash;\n                }\n            } else {\n                seedling = arguments[i];\n            }\n            this.seed += (arguments.length - i) * seedling;\n        }\n\n        // If no generator function was provided, use our MT\n        this.mt = this.mersenne_twister(this.seed);\n        this.bimd5 = this.blueimp_md5();\n        this.random = function () {\n            return this.mt.random(this.seed);\n        };\n\n        return this;\n    }\n\n    Chance.prototype.VERSION = \"1.1.8\";\n\n    // Random helper functions\n    function initOptions(options, defaults) {\n        options = options || {};\n\n        if (defaults) {\n            for (var i in defaults) {\n                if (typeof options[i] === 'undefined') {\n                    options[i] = defaults[i];\n                }\n            }\n        }\n\n        return options;\n    }\n\n    function range(size) {\n        return Array.apply(null, Array(size)).map(function (_, i) {return i;});\n    }\n\n    function testRange(test, errorMessage) {\n        if (test) {\n            throw new RangeError(errorMessage);\n        }\n    }\n\n    /**\n     * Encode the input string with Base64.\n     */\n    var base64 = function() {\n        throw new Error('No Base64 encoder available.');\n    };\n\n    // Select proper Base64 encoder.\n    (function determineBase64Encoder() {\n        if (typeof btoa === 'function') {\n            base64 = btoa;\n        } else if (typeof Buffer === 'function') {\n            base64 = function(input) {\n                return new Buffer(input).toString('base64');\n            };\n        }\n    })();\n\n    // -- Basics --\n\n    /**\n     *  Return a random bool, either true or false\n     *\n     *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of\n     *    receiving a true or false value back.\n     *  @throws {RangeError} if the likelihood is out of bounds\n     *  @returns {Bool} either true or false\n     */\n    Chance.prototype.bool = function (options) {\n        // likelihood of success (true)\n        options = initOptions(options, {likelihood : 50});\n\n        // Note, we could get some minor perf optimizations by checking range\n        // prior to initializing defaults, but that makes code a bit messier\n        // and the check more complicated as we have to check existence of\n        // the object then existence of the key before checking constraints.\n        // Since the options initialization should be minor computationally,\n        // decision made for code cleanliness intentionally. This is mentioned\n        // here as it's the first occurrence, will not be mentioned again.\n        testRange(\n            options.likelihood < 0 || options.likelihood > 100,\n            \"Chance: Likelihood accepts values from 0 to 100.\"\n        );\n\n        return this.random() * 100 < options.likelihood;\n    };\n\n    Chance.prototype.falsy = function (options) {\n        // return a random falsy value\n        options = initOptions(options, {pool: [false, null, 0, NaN, '']})\n        var pool = options.pool,\n            index = this.integer({min: 0, max: pool.length}),\n            value = pool[index];\n\n        return value;\n    }\n\n    Chance.prototype.animal = function (options){\n      //returns a random animal\n      options = initOptions(options);\n\n      if(typeof options.type !== 'undefined'){\n        //if user does not put in a valid animal type, user will get an error\n        testRange(\n           !this.get(\"animals\")[options.type.toLowerCase()],\n           \"Please pick from desert, ocean, grassland, forest, zoo, pets, farm.\"\n         );\n         //if user does put in valid animal type, will return a random animal of that type\n          return this.pick(this.get(\"animals\")[options.type.toLowerCase()]);\n      }\n       //if user does not put in any animal type, will return a random animal regardless\n      var animalTypeArray = [\"desert\",\"forest\",\"ocean\",\"zoo\",\"farm\",\"pet\",\"grassland\"];\n      return this.pick(this.get(\"animals\")[this.pick(animalTypeArray)]);\n    };\n\n    /**\n     *  Return a random character.\n     *\n     *  @param {Object} [options={}] can specify a character pool or alpha,\n     *    numeric, symbols and casing (lower or upper)\n     *  @returns {String} a single random character\n     */\n    Chance.prototype.character = function (options) {\n        options = initOptions(options);\n\n        var symbols = \"!@#$%^&*()[]\",\n            letters, pool;\n\n        if (options.casing === 'lower') {\n            letters = CHARS_LOWER;\n        } else if (options.casing === 'upper') {\n            letters = CHARS_UPPER;\n        } else {\n            letters = CHARS_LOWER + CHARS_UPPER;\n        }\n\n        if (options.pool) {\n            pool = options.pool;\n        } else {\n            pool = '';\n            if (options.alpha) {\n                pool += letters;\n            }\n            if (options.numeric) {\n                pool += NUMBERS;\n            }\n            if (options.symbols) {\n                pool += symbols;\n            }\n            if (!pool) {\n                pool = letters + NUMBERS + symbols;\n            }\n        }\n\n        return pool.charAt(this.natural({max: (pool.length - 1)}));\n    };\n\n    // Note, wanted to use \"float\" or \"double\" but those are both JS reserved words.\n\n    // Note, fixed means N OR LESS digits after the decimal. This because\n    // It could be 14.9000 but in JavaScript, when this is cast as a number,\n    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are\n    // needed\n    /**\n     *  Return a random floating point number\n     *\n     *  @param {Object} [options={}] can specify a fixed precision, min, max\n     *  @returns {Number} a single floating point number\n     *  @throws {RangeError} Can only specify fixed or precision, not both. Also\n     *    min cannot be greater than max\n     */\n    Chance.prototype.floating = function (options) {\n        options = initOptions(options, {fixed : 4});\n        testRange(\n            options.fixed && options.precision,\n            \"Chance: Cannot specify both fixed and precision.\"\n        );\n\n        var num;\n        var fixed = Math.pow(10, options.fixed);\n\n        var max = MAX_INT / fixed;\n        var min = -max;\n\n        testRange(\n            options.min && options.fixed && options.min < min,\n            \"Chance: Min specified is out of range with fixed. Min should be, at least, \" + min\n        );\n        testRange(\n            options.max && options.fixed && options.max > max,\n            \"Chance: Max specified is out of range with fixed. Max should be, at most, \" + max\n        );\n\n        options = initOptions(options, { min : min, max : max });\n\n        // Todo - Make this work!\n        // options.precision = (typeof options.precision !== \"undefined\") ? options.precision : false;\n\n        num = this.integer({min: options.min * fixed, max: options.max * fixed});\n        var num_fixed = (num / fixed).toFixed(options.fixed);\n\n        return parseFloat(num_fixed);\n    };\n\n    /**\n     *  Return a random integer\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.integer({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.integer = function (options) {\n        // 9007199254740992 (2^53) is the max integer number in JavaScript\n        // See: http://vq.io/132sa2j\n        options = initOptions(options, {min: MIN_INT, max: MAX_INT});\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\n    };\n\n    /**\n     *  Return a random natural\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.natural({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max or a numerals count.\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.natural = function (options) {\n        options = initOptions(options, {min: 0, max: MAX_INT});\n        if (typeof options.numerals === 'number'){\n          testRange(options.numerals < 1, \"Chance: Numerals cannot be less than one.\");\n          options.min = Math.pow(10, options.numerals - 1);\n          options.max = Math.pow(10, options.numerals) - 1;\n        }\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n\n        if (options.exclude) {\n            testRange(!Array.isArray(options.exclude), \"Chance: exclude must be an array.\")\n\n            for (var exclusionIndex in options.exclude) {\n                testRange(!Number.isInteger(options.exclude[exclusionIndex]), \"Chance: exclude must be numbers.\")\n            }\n\n            var random = options.min + this.natural({max: options.max - options.min - options.exclude.length})\n            var sortedExclusions = options.exclude.sort();\n            for (var sortedExclusionIndex in sortedExclusions) {\n                if (random < sortedExclusions[sortedExclusionIndex]) {\n                    break\n                }\n                random++\n            }\n            return random\n        }\n        return this.integer(options);\n    };\n\n    /**\n     *  Return a random prime number\n     *\n     *  NOTE the max and min are INCLUDED in the range.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max\n     *  @returns {Number} a single random prime number\n     *  @throws {RangeError} min cannot be greater than max nor negative\n     */\n    Chance.prototype.prime = function (options) {\n        options = initOptions(options, {min: 0, max: 10000});\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        var lastPrime = data.primes[data.primes.length - 1];\n        if (options.max > lastPrime) {\n            for (var i = lastPrime + 2; i <= options.max; ++i) {\n                if (this.is_prime(i)) {\n                    data.primes.push(i);\n                }\n            }\n        }\n        var targetPrimes = data.primes.filter(function (prime) {\n            return prime >= options.min && prime <= options.max;\n        });\n        return this.pick(targetPrimes);\n    };\n\n    /**\n     * Determine whether a given number is prime or not.\n     */\n    Chance.prototype.is_prime = function (n) {\n        if (n % 1 || n < 2) {\n            return false;\n        }\n        if (n % 2 === 0) {\n            return n === 2;\n        }\n        if (n % 3 === 0) {\n            return n === 3;\n        }\n        var m = Math.sqrt(n);\n        for (var i = 5; i <= m; i += 6) {\n            if (n % i === 0 || n % (i + 2) === 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     *  Return a random hex number as string\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.hex({min: '9', max: 'B'});\n     *  would return either '9', 'A' or 'B'.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max and/or casing\n     *  @returns {String} a single random string hex number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.hex = function (options) {\n        options = initOptions(options, {min: 0, max: MAX_INT, casing: 'lower'});\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n\t\tvar integer = this.natural({min: options.min, max: options.max});\n\t\tif (options.casing === 'upper') {\n\t\t\treturn integer.toString(16).toUpperCase();\n\t\t}\n\t\treturn integer.toString(16);\n    };\n\n    Chance.prototype.letter = function(options) {\n        options = initOptions(options, {casing: 'lower'});\n        var pool = \"abcdefghijklmnopqrstuvwxyz\";\n        var letter = this.character({pool: pool});\n        if (options.casing === 'upper') {\n            letter = letter.toUpperCase();\n        }\n        return letter;\n    }\n\n    /**\n     *  Return a random string\n     *\n     *  @param {Object} [options={}] can specify a length or min and max\n     *  @returns {String} a string of random length\n     *  @throws {RangeError} length cannot be less than zero\n     */\n    Chance.prototype.string = function (options) {\n        options = initOptions(options, { min: 5, max: 20 });\n\n        if (!options.length) {\n            options.length = this.natural({ min: options.min, max: options.max })\n        }\n\n        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n        var length = options.length,\n            text = this.n(this.character, length, options);\n\n        return text.join(\"\");\n    };\n\n    function CopyToken(c) {\n        this.c = c\n    }\n\n    CopyToken.prototype = {\n        substitute: function () {\n            return this.c\n        }\n    }\n\n    function EscapeToken(c) {\n        this.c = c\n    }\n\n    EscapeToken.prototype = {\n        substitute: function () {\n            if (!/[{}\\\\]/.test(this.c)) {\n                throw new Error('Invalid escape sequence: \"\\\\' + this.c + '\".')\n            }\n            return this.c\n        }\n    }\n\n    function ReplaceToken(c) {\n        this.c = c\n    }\n\n    ReplaceToken.prototype = {\n        replacers: {\n            '#': function (chance) { return chance.character({ pool: NUMBERS }) },\n            'A': function (chance) { return chance.character({ pool: CHARS_UPPER }) },\n            'a': function (chance) { return chance.character({ pool: CHARS_LOWER }) },\n        },\n\n        substitute: function (chance) {\n            var replacer = this.replacers[this.c]\n            if (!replacer) {\n                throw new Error('Invalid replacement character: \"' + this.c + '\".')\n            }\n            return replacer(chance)\n        }\n    }\n\n    function parseTemplate(template) {\n        var tokens = []\n        var mode = 'identity'\n        for (var i = 0; i<template.length; i++) {\n            var c = template[i]\n            switch (mode) {\n                case 'escape':\n                    tokens.push(new EscapeToken(c))\n                    mode = 'identity'\n                    break\n                case 'identity':\n                    if (c === '{') {\n                        mode = 'replace'\n                    } else if (c === '\\\\') {\n                        mode = 'escape'\n                    } else {\n                        tokens.push(new CopyToken(c))\n                    }\n                    break\n                case 'replace':\n                    if (c === '}') {\n                        mode = 'identity'\n                    } else {\n                        tokens.push(new ReplaceToken(c))\n                    }\n                    break\n            }\n        }\n        return tokens\n    }\n\n    /**\n     *  Return a random string matching the given template.\n     *\n     *  The template consists of any number of \"character replacement\" and\n     *  \"character literal\" sequences. A \"character replacement\" sequence\n     *  starts with a left brace, has any number of special replacement\n     *  characters, and ends with a right brace. A character literal can be any\n     *  character except a brace or a backslash. A literal brace or backslash\n     *  character can be included in the output by escaping with a backslash.\n     *\n     *  The following replacement characters can be used in a replacement\n     *  sequence:\n     *\n     *      \"#\": a random digit\n     *      \"a\": a random lower case letter\n     *      \"A\": a random upper case letter\n     *\n     *  Example: chance.template('{AA###}-{##}')\n     *\n     *  @param {String} template string.\n     *  @returns {String} a random string matching the template.\n     */\n    Chance.prototype.template = function (template) {\n        if (!template) {\n            throw new Error('Template string is required')\n        }\n        var self = this\n        return parseTemplate(template)\n            .map(function (token) { return token.substitute(self) })\n            .join('');\n    };\n\n\n    /**\n     *  Return a random buffer\n     *\n     *  @param {Object} [options={}] can specify a length\n     *  @returns {Buffer} a buffer of random length\n     *  @throws {RangeError} length cannot be less than zero\n     */\n    Chance.prototype.buffer = function (options) {\n        if (typeof Buffer === 'undefined') {\n            throw new UnsupportedError('Sorry, the buffer() function is not supported on your platform');\n        }\n        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });\n        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n        var length = options.length;\n        var content = this.n(this.character, length, options);\n\n        return Buffer.from(content);\n    };\n\n    // -- End Basics --\n\n    // -- Helpers --\n\n    Chance.prototype.capitalize = function (word) {\n        return word.charAt(0).toUpperCase() + word.substr(1);\n    };\n\n    Chance.prototype.mixin = function (obj) {\n        for (var func_name in obj) {\n            Chance.prototype[func_name] = obj[func_name];\n        }\n        return this;\n    };\n\n    /**\n     *  Given a function that generates something random and a number of items to generate,\n     *    return an array of items where none repeat.\n     *\n     *  @param {Function} fn the function that generates something random\n     *  @param {Number} num number of terms to generate\n     *  @param {Object} options any options to pass on to the generator function\n     *  @returns {Array} an array of length `num` with every item generated by `fn` and unique\n     *\n     *  There can be more parameters after these. All additional parameters are provided to the given function\n     */\n    Chance.prototype.unique = function(fn, num, options) {\n        testRange(\n            typeof fn !== \"function\",\n            \"Chance: The first argument must be a function.\"\n        );\n\n        var comparator = function(arr, val) { return arr.indexOf(val) !== -1; };\n\n        if (options) {\n            comparator = options.comparator || comparator;\n        }\n\n        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);\n\n        while (arr.length < num) {\n            var clonedParams = JSON.parse(JSON.stringify(params));\n            result = fn.apply(this, clonedParams);\n            if (!comparator(arr, result)) {\n                arr.push(result);\n                // reset count when unique found\n                count = 0;\n            }\n\n            if (++count > MAX_DUPLICATES) {\n                throw new RangeError(\"Chance: num is likely too large for sample set\");\n            }\n        }\n        return arr;\n    };\n\n    /**\n     *  Gives an array of n random terms\n     *\n     *  @param {Function} fn the function that generates something random\n     *  @param {Number} n number of terms to generate\n     *  @returns {Array} an array of length `n` with items generated by `fn`\n     *\n     *  There can be more parameters after these. All additional parameters are provided to the given function\n     */\n    Chance.prototype.n = function(fn, n) {\n        testRange(\n            typeof fn !== \"function\",\n            \"Chance: The first argument must be a function.\"\n        );\n\n        if (typeof n === 'undefined') {\n            n = 1;\n        }\n        var i = n, arr = [], params = slice.call(arguments, 2);\n\n        // Providing a negative count should result in a noop.\n        i = Math.max( 0, i );\n\n        for (null; i--; null) {\n            arr.push(fn.apply(this, params));\n        }\n\n        return arr;\n    };\n\n    // H/T to SO for this one: http://vq.io/OtUrZ5\n    Chance.prototype.pad = function (number, width, pad) {\n        // Default pad to 0 if none provided\n        pad = pad || '0';\n        // Convert number to a string\n        number = number + '';\n        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;\n    };\n\n    // DEPRECATED on 2015-10-01\n    Chance.prototype.pick = function (arr, count) {\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pick() from an empty array\");\n        }\n        if (!count || count === 1) {\n            return arr[this.natural({max: arr.length - 1})];\n        } else {\n            return this.shuffle(arr).slice(0, count);\n        }\n    };\n\n    // Given an array, returns a single random element\n    Chance.prototype.pickone = function (arr) {\n        if (arr.length === 0) {\n          throw new RangeError(\"Chance: Cannot pickone() from an empty array\");\n        }\n        return arr[this.natural({max: arr.length - 1})];\n    };\n\n    // Given an array, returns a random set with 'count' elements\n    Chance.prototype.pickset = function (arr, count) {\n        if (count === 0) {\n            return [];\n        }\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pickset() from an empty array\");\n        }\n        if (count < 0) {\n            throw new RangeError(\"Chance: Count must be a positive number\");\n        }\n        if (!count || count === 1) {\n            return [ this.pickone(arr) ];\n        } else {\n            var array = arr.slice(0);\n            var end = array.length;\n\n            return this.n(function () {\n                var index = this.natural({max: --end});\n                var value = array[index];\n                array[index] = array[end];\n                return value;\n            }, Math.min(end, count));\n        }\n    };\n\n    Chance.prototype.shuffle = function (arr) {\n        var new_array = [],\n            j = 0,\n            length = Number(arr.length),\n            source_indexes = range(length),\n            last_source_index = length - 1,\n            selected_source_index;\n\n        for (var i = 0; i < length; i++) {\n            // Pick a random index from the array\n            selected_source_index = this.natural({max: last_source_index});\n            j = source_indexes[selected_source_index];\n\n            // Add it to the new array\n            new_array[i] = arr[j];\n\n            // Mark the source index as used\n            source_indexes[selected_source_index] = source_indexes[last_source_index];\n            last_source_index -= 1;\n        }\n\n        return new_array;\n    };\n\n    // Returns a single item from an array with relative weighting of odds\n    Chance.prototype.weighted = function (arr, weights, trim) {\n        if (arr.length !== weights.length) {\n            throw new RangeError(\"Chance: Length of array and weights must match\");\n        }\n\n        // scan weights array and sum valid entries\n        var sum = 0;\n        var val;\n        for (var weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n            val = weights[weightIndex];\n            if (isNaN(val)) {\n                throw new RangeError(\"Chance: All weights must be numbers\");\n            }\n\n            if (val > 0) {\n                sum += val;\n            }\n        }\n\n        if (sum === 0) {\n            throw new RangeError(\"Chance: No valid entries in array weights\");\n        }\n\n        // select a value within range\n        var selected = this.random() * sum;\n\n        // find array entry corresponding to selected value\n        var total = 0;\n        var lastGoodIdx = -1;\n        var chosenIdx;\n        for (weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n            val = weights[weightIndex];\n            total += val;\n            if (val > 0) {\n                if (selected <= total) {\n                    chosenIdx = weightIndex;\n                    break;\n                }\n                lastGoodIdx = weightIndex;\n            }\n\n            // handle any possible rounding error comparison to ensure something is picked\n            if (weightIndex === (weights.length - 1)) {\n                chosenIdx = lastGoodIdx;\n            }\n        }\n\n        var chosen = arr[chosenIdx];\n        trim = (typeof trim === 'undefined') ? false : trim;\n        if (trim) {\n            arr.splice(chosenIdx, 1);\n            weights.splice(chosenIdx, 1);\n        }\n\n        return chosen;\n    };\n\n    // -- End Helpers --\n\n    // -- Text --\n\n    Chance.prototype.paragraph = function (options) {\n        options = initOptions(options);\n\n        var sentences = options.sentences || this.natural({min: 3, max: 7}),\n            sentence_array = this.n(this.sentence, sentences),\n            separator = options.linebreak === true ? '\\n' : ' ';\n\n        return sentence_array.join(separator);\n    };\n\n    // Could get smarter about this than generating random words and\n    // chaining them together. Such as: http://vq.io/1a5ceOh\n    Chance.prototype.sentence = function (options) {\n        options = initOptions(options);\n\n        var words = options.words || this.natural({min: 12, max: 18}),\n            punctuation = options.punctuation,\n            text, word_array = this.n(this.word, words);\n\n        text = word_array.join(' ');\n\n        // Capitalize first letter of sentence\n        text = this.capitalize(text);\n\n        // Make sure punctuation has a usable value\n        if (punctuation !== false && !/^[.?;!:]$/.test(punctuation)) {\n            punctuation = '.';\n        }\n\n        // Add punctuation mark\n        if (punctuation) {\n            text += punctuation;\n        }\n\n        return text;\n    };\n\n    Chance.prototype.syllable = function (options) {\n        options = initOptions(options);\n\n        var length = options.length || this.natural({min: 2, max: 3}),\n            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones\n            vowels = 'aeiou', // vowels\n            all = consonants + vowels, // all\n            text = '',\n            chr;\n\n        // I'm sure there's a more elegant way to do this, but this works\n        // decently well.\n        for (var i = 0; i < length; i++) {\n            if (i === 0) {\n                // First character can be anything\n                chr = this.character({pool: all});\n            } else if (consonants.indexOf(chr) === -1) {\n                // Last character was a vowel, now we want a consonant\n                chr = this.character({pool: consonants});\n            } else {\n                // Last character was a consonant, now we want a vowel\n                chr = this.character({pool: vowels});\n            }\n\n            text += chr;\n        }\n\n        if (options.capitalize) {\n            text = this.capitalize(text);\n        }\n\n        return text;\n    };\n\n    Chance.prototype.word = function (options) {\n        options = initOptions(options);\n\n        testRange(\n            options.syllables && options.length,\n            \"Chance: Cannot specify both syllables AND length.\"\n        );\n\n        var syllables = options.syllables || this.natural({min: 1, max: 3}),\n            text = '';\n\n        if (options.length) {\n            // Either bound word by length\n            do {\n                text += this.syllable();\n            } while (text.length < options.length);\n            text = text.substring(0, options.length);\n        } else {\n            // Or by number of syllables\n            for (var i = 0; i < syllables; i++) {\n                text += this.syllable();\n            }\n        }\n\n        if (options.capitalize) {\n            text = this.capitalize(text);\n        }\n\n        return text;\n    };\n\n    // -- End Text --\n\n    // -- Person --\n\n    Chance.prototype.age = function (options) {\n        options = initOptions(options);\n        var ageRange;\n\n        switch (options.type) {\n            case 'child':\n                ageRange = {min: 0, max: 12};\n                break;\n            case 'teen':\n                ageRange = {min: 13, max: 19};\n                break;\n            case 'adult':\n                ageRange = {min: 18, max: 65};\n                break;\n            case 'senior':\n                ageRange = {min: 65, max: 100};\n                break;\n            case 'all':\n                ageRange = {min: 0, max: 100};\n                break;\n            default:\n                ageRange = {min: 18, max: 65};\n                break;\n        }\n\n        return this.natural(ageRange);\n    };\n\n    Chance.prototype.birthday = function (options) {\n        var age = this.age(options);\n        var currentYear = new Date().getFullYear();\n\n        if (options && options.type) {\n            var min = new Date();\n            var max = new Date();\n            min.setFullYear(currentYear - age - 1);\n            max.setFullYear(currentYear - age);\n\n            options = initOptions(options, {\n                min: min,\n                max: max\n            });\n        } else {\n            options = initOptions(options, {\n                year: currentYear - age\n            });\n        }\n\n        return this.date(options);\n    };\n\n    // CPF; ID to identify taxpayers in Brazil\n    Chance.prototype.cpf = function (options) {\n        options = initOptions(options, {\n            formatted: true\n        });\n\n        var n = this.n(this.natural, 9, { max: 9 });\n        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10) {\n            d1 = 0;\n        }\n        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10) {\n            d2 = 0;\n        }\n        var cpf = ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;\n        return options.formatted ? cpf : cpf.replace(/\\D/g,'');\n    };\n\n    // CNPJ: ID to identify companies in Brazil\n    Chance.prototype.cnpj = function (options) {\n        options = initOptions(options, {\n            formatted: true\n        });\n\n        var n = this.n(this.natural, 12, { max: 12 });\n        var d1 = n[11]*2+n[10]*3+n[9]*4+n[8]*5+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n        d1 = 11 - (d1 % 11);\n        if (d1<2) {\n            d1 = 0;\n        }\n        var d2 = d1*2+n[11]*3+n[10]*4+n[9]*5+n[8]*6+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n        d2 = 11 - (d2 % 11);\n        if (d2<2) {\n            d2 = 0;\n        }\n        var cnpj = ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/'+n[8]+n[9]+n[10]+n[11]+'-'+d1+d2;\n        return options.formatted ? cnpj : cnpj.replace(/\\D/g,'');\n    };\n\n    Chance.prototype.first = function (options) {\n        options = initOptions(options, {gender: this.gender(), nationality: 'en'});\n        return this.pick(this.get(\"firstNames\")[options.gender.toLowerCase()][options.nationality.toLowerCase()]);\n    };\n\n    Chance.prototype.profession = function (options) {\n        options = initOptions(options);\n        if(options.rank){\n            return this.pick(['Apprentice ', 'Junior ', 'Senior ', 'Lead ']) + this.pick(this.get(\"profession\"));\n        } else{\n            return this.pick(this.get(\"profession\"));\n        }\n    };\n\n    Chance.prototype.company = function (){\n        return this.pick(this.get(\"company\"));\n    };\n\n    Chance.prototype.gender = function (options) {\n        options = initOptions(options, {extraGenders: []});\n        return this.pick(['Male', 'Female'].concat(options.extraGenders));\n    };\n\n    Chance.prototype.last = function (options) {\n      options = initOptions(options, {nationality: '*'});\n      if (options.nationality === \"*\") {\n        var allLastNames = []\n        var lastNames = this.get(\"lastNames\")\n        Object.keys(lastNames).forEach(function(key){\n          allLastNames = allLastNames.concat(lastNames[key])\n        })\n        return this.pick(allLastNames)\n      }\n      else {\n        return this.pick(this.get(\"lastNames\")[options.nationality.toLowerCase()]);\n      }\n\n    };\n\n    Chance.prototype.israelId=function(){\n        var x=this.string({pool: '0123456789',length:8});\n        var y=0;\n        for (var i=0;i<x.length;i++){\n            var thisDigit=  x[i] *  (i/2===parseInt(i/2) ? 1 : 2);\n            thisDigit=this.pad(thisDigit,2).toString();\n            thisDigit=parseInt(thisDigit[0]) + parseInt(thisDigit[1]);\n            y=y+thisDigit;\n        }\n        x=x+(10-parseInt(y.toString().slice(-1))).toString().slice(-1);\n        return x;\n    };\n\n    Chance.prototype.mrz = function (options) {\n        var checkDigit = function (input) {\n            var alpha = \"<ABCDEFGHIJKLMNOPQRSTUVWXYXZ\".split(''),\n                multipliers = [ 7, 3, 1 ],\n                runningTotal = 0;\n\n            if (typeof input !== 'string') {\n                input = input.toString();\n            }\n\n            input.split('').forEach(function(character, idx) {\n                var pos = alpha.indexOf(character);\n\n                if(pos !== -1) {\n                    character = pos === 0 ? 0 : pos + 9;\n                } else {\n                    character = parseInt(character, 10);\n                }\n                character *= multipliers[idx % multipliers.length];\n                runningTotal += character;\n            });\n            return runningTotal % 10;\n        };\n        var generate = function (opts) {\n            var pad = function (length) {\n                return new Array(length + 1).join('<');\n            };\n            var number = [ 'P<',\n                           opts.issuer,\n                           opts.last.toUpperCase(),\n                           '<<',\n                           opts.first.toUpperCase(),\n                           pad(39 - (opts.last.length + opts.first.length + 2)),\n                           opts.passportNumber,\n                           checkDigit(opts.passportNumber),\n                           opts.nationality,\n                           opts.dob,\n                           checkDigit(opts.dob),\n                           opts.gender,\n                           opts.expiry,\n                           checkDigit(opts.expiry),\n                           pad(14),\n                           checkDigit(pad(14)) ].join('');\n\n            return number +\n                (checkDigit(number.substr(44, 10) +\n                            number.substr(57, 7) +\n                            number.substr(65, 7)));\n        };\n\n        var that = this;\n\n        options = initOptions(options, {\n            first: this.first(),\n            last: this.last(),\n            passportNumber: this.integer({min: 100000000, max: 999999999}),\n            dob: (function () {\n                var date = that.birthday({type: 'adult'});\n                return [date.getFullYear().toString().substr(2),\n                        that.pad(date.getMonth() + 1, 2),\n                        that.pad(date.getDate(), 2)].join('');\n            }()),\n            expiry: (function () {\n                var date = new Date();\n                return [(date.getFullYear() + 5).toString().substr(2),\n                        that.pad(date.getMonth() + 1, 2),\n                        that.pad(date.getDate(), 2)].join('');\n            }()),\n            gender: this.gender() === 'Female' ? 'F': 'M',\n            issuer: 'GBR',\n            nationality: 'GBR'\n        });\n        return generate (options);\n    };\n\n    Chance.prototype.name = function (options) {\n        options = initOptions(options);\n\n        var first = this.first(options),\n            last = this.last(options),\n            name;\n\n        if (options.middle) {\n            name = first + ' ' + this.first(options) + ' ' + last;\n        } else if (options.middle_initial) {\n            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;\n        } else {\n            name = first + ' ' + last;\n        }\n\n        if (options.prefix) {\n            name = this.prefix(options) + ' ' + name;\n        }\n\n        if (options.suffix) {\n            name = name + ' ' + this.suffix(options);\n        }\n\n        return name;\n    };\n\n    // Return the list of available name prefixes based on supplied gender.\n    // @todo introduce internationalization\n    Chance.prototype.name_prefixes = function (gender) {\n        gender = gender || \"all\";\n        gender = gender.toLowerCase();\n\n        var prefixes = [\n            { name: 'Doctor', abbreviation: 'Dr.' }\n        ];\n\n        if (gender === \"male\" || gender === \"all\") {\n            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });\n        }\n\n        if (gender === \"female\" || gender === \"all\") {\n            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });\n            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });\n        }\n\n        return prefixes;\n    };\n\n    // Alias for name_prefix\n    Chance.prototype.prefix = function (options) {\n        return this.name_prefix(options);\n    };\n\n    Chance.prototype.name_prefix = function (options) {\n        options = initOptions(options, { gender: \"all\" });\n        return options.full ?\n            this.pick(this.name_prefixes(options.gender)).name :\n            this.pick(this.name_prefixes(options.gender)).abbreviation;\n    };\n    //Hungarian ID number\n    Chance.prototype.HIDN= function(){\n     //Hungarian ID nuber structure: XXXXXXYY (X=number,Y=Capital Latin letter)\n      var idn_pool=\"0123456789\";\n      var idn_chrs=\"ABCDEFGHIJKLMNOPQRSTUVWXYXZ\";\n      var idn=\"\";\n        idn+=this.string({pool:idn_pool,length:6});\n        idn+=this.string({pool:idn_chrs,length:2});\n        return idn;\n    };\n\n\n    Chance.prototype.ssn = function (options) {\n        options = initOptions(options, {ssnFour: false, dashes: true});\n        var ssn_pool = \"1234567890\",\n            ssn,\n            dash = options.dashes ? '-' : '';\n\n        if(!options.ssnFour) {\n            ssn = this.string({pool: ssn_pool, length: 3}) + dash +\n            this.string({pool: ssn_pool, length: 2}) + dash +\n            this.string({pool: ssn_pool, length: 4});\n        } else {\n            ssn = this.string({pool: ssn_pool, length: 4});\n        }\n        return ssn;\n    };\n\n    // Aadhar is similar to ssn, used in India to uniquely identify a person\n    Chance.prototype.aadhar = function (options) {\n        options = initOptions(options, {onlyLastFour: false, separatedByWhiteSpace: true});\n        var aadhar_pool = \"1234567890\",\n            aadhar,\n            whiteSpace = options.separatedByWhiteSpace ? ' ' : '';\n\n        if(!options.onlyLastFour) {\n            aadhar = this.string({pool: aadhar_pool, length: 4}) + whiteSpace +\n            this.string({pool: aadhar_pool, length: 4}) + whiteSpace +\n            this.string({pool: aadhar_pool, length: 4});\n        } else {\n            aadhar = this.string({pool: aadhar_pool, length: 4});\n        }\n        return aadhar;\n    };\n\n    // Return the list of available name suffixes\n    // @todo introduce internationalization\n    Chance.prototype.name_suffixes = function () {\n        var suffixes = [\n            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },\n            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },\n            { name: 'Esquire', abbreviation: 'Esq.' },\n            { name: 'Junior', abbreviation: 'Jr.' },\n            { name: 'Juris Doctor', abbreviation: 'J.D.' },\n            { name: 'Master of Arts', abbreviation: 'M.A.' },\n            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },\n            { name: 'Master of Science', abbreviation: 'M.S.' },\n            { name: 'Medical Doctor', abbreviation: 'M.D.' },\n            { name: 'Senior', abbreviation: 'Sr.' },\n            { name: 'The Third', abbreviation: 'III' },\n            { name: 'The Fourth', abbreviation: 'IV' },\n            { name: 'Bachelor of Engineering', abbreviation: 'B.E' },\n            { name: 'Bachelor of Technology', abbreviation: 'B.TECH' }\n        ];\n        return suffixes;\n    };\n\n    // Alias for name_suffix\n    Chance.prototype.suffix = function (options) {\n        return this.name_suffix(options);\n    };\n\n    Chance.prototype.name_suffix = function (options) {\n        options = initOptions(options);\n        return options.full ?\n            this.pick(this.name_suffixes()).name :\n            this.pick(this.name_suffixes()).abbreviation;\n    };\n\n    Chance.prototype.nationalities = function () {\n        return this.get(\"nationalities\");\n    };\n\n    // Generate random nationality based on json list\n    Chance.prototype.nationality = function () {\n        var nationality = this.pick(this.nationalities());\n        return nationality.name;\n    };\n\n    // -- End Person --\n\n    // -- Mobile --\n    // Android GCM Registration ID\n    Chance.prototype.android_id = function () {\n        return \"APA91\" + this.string({ pool: \"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\", length: 178 });\n    };\n\n    // Apple Push Token\n    Chance.prototype.apple_token = function () {\n        return this.string({ pool: \"abcdef1234567890\", length: 64 });\n    };\n\n    // Windows Phone 8 ANID2\n    Chance.prototype.wp8_anid2 = function () {\n        return base64( this.hash( { length : 32 } ) );\n    };\n\n    // Windows Phone 7 ANID\n    Chance.prototype.wp7_anid = function () {\n        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });\n    };\n\n    // BlackBerry Device PIN\n    Chance.prototype.bb_pin = function () {\n        return this.hash({ length: 8 });\n    };\n\n    // -- End Mobile --\n\n    // -- Web --\n    Chance.prototype.avatar = function (options) {\n        var url = null;\n        var URL_BASE = '//www.gravatar.com/avatar/';\n        var PROTOCOLS = {\n            http: 'http',\n            https: 'https'\n        };\n        var FILE_TYPES = {\n            bmp: 'bmp',\n            gif: 'gif',\n            jpg: 'jpg',\n            png: 'png'\n        };\n        var FALLBACKS = {\n            '404': '404', // Return 404 if not found\n            mm: 'mm', // Mystery man\n            identicon: 'identicon', // Geometric pattern based on hash\n            monsterid: 'monsterid', // A generated monster icon\n            wavatar: 'wavatar', // A generated face\n            retro: 'retro', // 8-bit icon\n            blank: 'blank' // A transparent png\n        };\n        var RATINGS = {\n            g: 'g',\n            pg: 'pg',\n            r: 'r',\n            x: 'x'\n        };\n        var opts = {\n            protocol: null,\n            email: null,\n            fileExtension: null,\n            size: null,\n            fallback: null,\n            rating: null\n        };\n\n        if (!options) {\n            // Set to a random email\n            opts.email = this.email();\n            options = {};\n        }\n        else if (typeof options === 'string') {\n            opts.email = options;\n            options = {};\n        }\n        else if (typeof options !== 'object') {\n            return null;\n        }\n        else if (options.constructor === 'Array') {\n            return null;\n        }\n\n        opts = initOptions(options, opts);\n\n        if (!opts.email) {\n            // Set to a random email\n            opts.email = this.email();\n        }\n\n        // Safe checking for params\n        opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';\n        opts.size = parseInt(opts.size, 0) ? opts.size : '';\n        opts.rating = RATINGS[opts.rating] ? opts.rating : '';\n        opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';\n        opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';\n\n        url =\n            opts.protocol +\n            URL_BASE +\n            this.bimd5.md5(opts.email) +\n            (opts.fileExtension ? '.' + opts.fileExtension : '') +\n            (opts.size || opts.rating || opts.fallback ? '?' : '') +\n            (opts.size ? '&s=' + opts.size.toString() : '') +\n            (opts.rating ? '&r=' + opts.rating : '') +\n            (opts.fallback ? '&d=' + opts.fallback : '')\n            ;\n\n        return url;\n    };\n\n    /**\n     * #Description:\n     * ===============================================\n     * Generate random color value base on color type:\n     * -> hex\n     * -> rgb\n     * -> rgba\n     * -> 0x\n     * -> named color\n     *\n     * #Examples:\n     * ===============================================\n     * * Geerate random hex color\n     * chance.color() => '#79c157' / 'rgb(110,52,164)' / '0x67ae0b' / '#e2e2e2' / '#29CFA7'\n     *\n     * * Generate Hex based color value\n     * chance.color({format: 'hex'})    => '#d67118'\n     *\n     * * Generate simple rgb value\n     * chance.color({format: 'rgb'})    => 'rgb(110,52,164)'\n     *\n     * * Generate Ox based color value\n     * chance.color({format: '0x'})     => '0x67ae0b'\n     *\n     * * Generate graiscale based value\n     * chance.color({grayscale: true})  => '#e2e2e2'\n     *\n     * * Return valide color name\n     * chance.color({format: 'name'})   => 'red'\n     *\n     * * Make color uppercase\n     * chance.color({casing: 'upper'})  => '#29CFA7'\n     *\n     * * Min Max values for RGBA\n     * var light_red = chance.color({format: 'hex', min_red: 200, max_red: 255, max_green: 0, max_blue: 0, min_alpha: .2, max_alpha: .3});\n     *\n     * @param  [object] options\n     * @return [string] color value\n     */\n    Chance.prototype.color = function (options) {\n        function gray(value, delimiter) {\n            return [value, value, value].join(delimiter || '');\n        }\n\n        function rgb(hasAlpha) {\n            var rgbValue     = (hasAlpha)    ? 'rgba' : 'rgb';\n            var alphaChannel = (hasAlpha)    ? (',' + this.floating({min:min_alpha, max:max_alpha})) : \"\";\n            var colorValue   = (isGrayscale) ? (gray(this.natural({min: min_rgb, max: max_rgb}), ',')) : (this.natural({min: min_green, max: max_green}) + ',' + this.natural({min: min_blue, max: max_blue}) + ',' + this.natural({max: 255}));\n            return rgbValue + '(' + colorValue + alphaChannel + ')';\n        }\n\n        function hex(start, end, withHash) {\n            var symbol = (withHash) ? \"#\" : \"\";\n            var hexstring = \"\";\n\n            if (isGrayscale) {\n                hexstring = gray(this.pad(this.hex({min: min_rgb, max: max_rgb}), 2));\n                if (options.format === \"shorthex\") {\n                    hexstring = gray(this.hex({min: 0, max: 15}));\n                }\n            }\n            else {\n                if (options.format === \"shorthex\") {\n                    hexstring = this.pad(this.hex({min: Math.floor(min_red / 16), max: Math.floor(max_red / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_green / 16), max: Math.floor(max_green / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_blue / 16), max: Math.floor(max_blue / 16)}), 1);\n                }\n                else if (min_red !== undefined || max_red !== undefined || min_green !== undefined || max_green !== undefined || min_blue !== undefined || max_blue !== undefined) {\n                    hexstring = this.pad(this.hex({min: min_red, max: max_red}), 2) + this.pad(this.hex({min: min_green, max: max_green}), 2) + this.pad(this.hex({min: min_blue, max: max_blue}), 2);\n                }\n                else {\n                    hexstring = this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2);\n                }\n            }\n\n            return symbol + hexstring;\n        }\n\n        options = initOptions(options, {\n            format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x', 'name']),\n            grayscale: false,\n            casing: 'lower',\n            min: 0,\n            max: 255,\n            min_red: undefined,\n            max_red: undefined,\n            min_green: undefined,\n            max_green: undefined,\n            min_blue: undefined,\n            max_blue: undefined,\n            min_alpha: 0,\n            max_alpha: 1\n        });\n\n        var isGrayscale = options.grayscale;\n        var min_rgb = options.min;\n        var max_rgb = options.max;\n        var min_red = options.min_red;\n        var max_red = options.max_red;\n        var min_green = options.min_green;\n        var max_green = options.max_green;\n        var min_blue = options.min_blue;\n        var max_blue = options.max_blue;\n        var min_alpha = options.min_alpha;\n        var max_alpha = options.max_alpha;\n        if (options.min_red === undefined) { min_red = min_rgb; }\n        if (options.max_red === undefined) { max_red = max_rgb; }\n        if (options.min_green === undefined) { min_green = min_rgb; }\n        if (options.max_green === undefined) { max_green = max_rgb; }\n        if (options.min_blue === undefined) { min_blue = min_rgb; }\n        if (options.max_blue === undefined) { max_blue = max_rgb; }\n        if (options.min_alpha === undefined) { min_alpha = 0; }\n        if (options.max_alpha === undefined) { max_alpha = 1; }\n        if (isGrayscale && min_rgb === 0 && max_rgb === 255 && min_red !== undefined && max_red !== undefined) {\n            min_rgb = ((min_red + min_green + min_blue) / 3);\n            max_rgb = ((max_red + max_green + max_blue) / 3);\n        }\n        var colorValue;\n\n        if (options.format === 'hex') {\n            colorValue = hex.call(this, 2, 6, true);\n        }\n        else if (options.format === 'shorthex') {\n            colorValue = hex.call(this, 1, 3, true);\n        }\n        else if (options.format === 'rgb') {\n            colorValue = rgb.call(this, false);\n        }\n        else if (options.format === 'rgba') {\n            colorValue = rgb.call(this, true);\n        }\n        else if (options.format === '0x') {\n            colorValue = '0x' + hex.call(this, 2, 6);\n        }\n        else if(options.format === 'name') {\n            return this.pick(this.get(\"colorNames\"));\n        }\n        else {\n            throw new RangeError('Invalid format provided. Please provide one of \"hex\", \"shorthex\", \"rgb\", \"rgba\", \"0x\" or \"name\".');\n        }\n\n        if (options.casing === 'upper' ) {\n            colorValue = colorValue.toUpperCase();\n        }\n\n        return colorValue;\n    };\n\n    Chance.prototype.domain = function (options) {\n        options = initOptions(options);\n        return this.word() + '.' + (options.tld || this.tld());\n    };\n\n    Chance.prototype.email = function (options) {\n        options = initOptions(options);\n        return this.word({length: options.length}) + '@' + (options.domain || this.domain());\n    };\n\n    /**\n     * #Description:\n     * ===============================================\n     * Generate a random Facebook id, aka fbid.\n     *\n     * NOTE: At the moment (Sep 2017), Facebook ids are\n     * \"numeric strings\" of length 16.\n     * However, Facebook Graph API documentation states that\n     * \"it is extremely likely to change over time\".\n     * @see https://developers.facebook.com/docs/graph-api/overview/\n     *\n     * #Examples:\n     * ===============================================\n     * chance.fbid() => '1000035231661304'\n     *\n     * @return [string] facebook id\n     */\n    Chance.prototype.fbid = function () {\n        return '10000' + this.string({pool: \"1234567890\", length: 11});\n    };\n\n    Chance.prototype.google_analytics = function () {\n        var account = this.pad(this.natural({max: 999999}), 6);\n        var property = this.pad(this.natural({max: 99}), 2);\n\n        return 'UA-' + account + '-' + property;\n    };\n\n    Chance.prototype.hashtag = function () {\n        return '#' + this.word();\n    };\n\n    Chance.prototype.ip = function () {\n        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy\n        // this should probably be updated to account for that rare as it may be\n        return this.natural({min: 1, max: 254}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({min: 1, max: 254});\n    };\n\n    Chance.prototype.ipv6 = function () {\n        var ip_addr = this.n(this.hash, 8, {length: 4});\n\n        return ip_addr.join(\":\");\n    };\n\n    Chance.prototype.klout = function () {\n        return this.natural({min: 1, max: 99});\n    };\n\n    Chance.prototype.mac = function (options) {\n        // Todo: This could also be extended to EUI-64 based MACs\n        // (https://www.iana.org/assignments/ethernet-numbers/ethernet-numbers.xhtml#ethernet-numbers-4)\n        // Todo: This can return some reserved MACs (similar to IP function)\n        // this should probably be updated to account for that rare as it may be\n        options = initOptions(options, { delimiter: ':' });\n        return this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2);\n    };\n\n    Chance.prototype.semver = function (options) {\n        options = initOptions(options, { include_prerelease: true });\n\n        var range = this.pickone([\"^\", \"~\", \"<\", \">\", \"<=\", \">=\", \"=\"]);\n        if (options.range) {\n            range = options.range;\n        }\n\n        var prerelease = \"\";\n        if (options.include_prerelease) {\n            prerelease = this.weighted([\"\", \"-dev\", \"-beta\", \"-alpha\"], [50, 10, 5, 1]);\n        }\n        return range + this.rpg('3d10').join('.') + prerelease;\n    };\n\n    Chance.prototype.tlds = function () {\n        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io', 'ac', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'ao', 'aq', 'ar', 'as', 'at', 'au', 'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bm', 'bn', 'bo', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci', 'ck', 'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm', 'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'eu', 'fi', 'fj', 'fk', 'fm', 'fo', 'fr', 'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gw', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq', 'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw', 'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc', 'md', 'me', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr', 'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt', 'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'ss', 'st', 'su', 'sv', 'sx', 'sy', 'sz', 'tc', 'td', 'tf', 'tg', 'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tp', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za', 'zm', 'zw'];\n    };\n\n    Chance.prototype.tld = function () {\n        return this.pick(this.tlds());\n    };\n\n    Chance.prototype.twitter = function () {\n        return '@' + this.word();\n    };\n\n    Chance.prototype.url = function (options) {\n        options = initOptions(options, { protocol: \"http\", domain: this.domain(options), domain_prefix: \"\", path: this.word(), extensions: []});\n\n        var extension = options.extensions.length > 0 ? \".\" + this.pick(options.extensions) : \"\";\n        var domain = options.domain_prefix ? options.domain_prefix + \".\" + options.domain : options.domain;\n\n        return options.protocol + \"://\" + domain + \"/\" + options.path + extension;\n    };\n\n    Chance.prototype.port = function() {\n        return this.integer({min: 0, max: 65535});\n    };\n\n    Chance.prototype.locale = function (options) {\n        options = initOptions(options);\n        if (options.region){\n          return this.pick(this.get(\"locale_regions\"));\n        } else {\n          return this.pick(this.get(\"locale_languages\"));\n        }\n    };\n\n    Chance.prototype.locales = function (options) {\n      options = initOptions(options);\n      if (options.region){\n        return this.get(\"locale_regions\");\n      } else {\n        return this.get(\"locale_languages\");\n      }\n    };\n\n    Chance.prototype.loremPicsum = function (options) {\n        options = initOptions(options, { width: 500, height: 500, greyscale: false, blurred: false });\n\n        var greyscale = options.greyscale ? 'g/' : '';\n        var query = options.blurred ? '/?blur' : '/?random';\n\n        return 'https://picsum.photos/' + greyscale + options.width + '/' + options.height + query;\n    }\n\n    // -- End Web --\n\n    // -- Location --\n\n    Chance.prototype.address = function (options) {\n        options = initOptions(options);\n        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);\n    };\n\n    Chance.prototype.altitude = function (options) {\n        options = initOptions(options, {fixed: 5, min: 0, max: 8848});\n        return this.floating({\n            min: options.min,\n            max: options.max,\n            fixed: options.fixed\n        });\n    };\n\n    Chance.prototype.areacode = function (options) {\n        options = initOptions(options, {parens : true});\n        // Don't want area codes to start with 1, or have a 9 as the second digit\n        var areacode = options.exampleNumber ?\n        \"555\" :\n        this.natural({min: 2, max: 9}).toString() +\n                this.natural({min: 0, max: 8}).toString() +\n                this.natural({min: 0, max: 9}).toString();\n\n        return options.parens ? '(' + areacode + ')' : areacode;\n    };\n\n    Chance.prototype.city = function () {\n        return this.capitalize(this.word({syllables: 3}));\n    };\n\n    Chance.prototype.coordinates = function (options) {\n        return this.latitude(options) + ', ' + this.longitude(options);\n    };\n\n    Chance.prototype.countries = function () {\n        return this.get(\"countries\");\n    };\n\n    Chance.prototype.country = function (options) {\n        options = initOptions(options);\n        var country = this.pick(this.countries());\n        return options.raw ? country : options.full ? country.name : country.abbreviation;\n    };\n\n    Chance.prototype.depth = function (options) {\n        options = initOptions(options, {fixed: 5, min: -10994, max: 0});\n        return this.floating({\n            min: options.min,\n            max: options.max,\n            fixed: options.fixed\n        });\n    };\n\n    Chance.prototype.geohash = function (options) {\n        options = initOptions(options, { length: 7 });\n        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });\n    };\n\n    Chance.prototype.geojson = function (options) {\n        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);\n    };\n\n    Chance.prototype.latitude = function (options) {\n        // Constants - Formats\n        var [DDM, DMS, DD] = ['ddm', 'dms', 'dd'];\n\n        options = initOptions(\noptions,\n            options && options.format && [DDM, DMS].includes(options.format.toLowerCase()) ?\n            {min: 0, max: 89, fixed: 4} :\n            {fixed: 5, min: -90, max: 90, format: DD}\n);\n\n        var format = options.format.toLowerCase();\n\n        if (format === DDM || format === DMS) {\n            testRange(options.min < 0 || options.min > 89, \"Chance: Min specified is out of range. Should be between 0 - 89\");\n            testRange(options.max < 0 || options.max > 89, \"Chance: Max specified is out of range. Should be between 0 - 89\");\n            testRange(options.fixed > 4, 'Chance: Fixed specified should be below or equal to 4');\n        }\n\n        switch (format) {\n            case DDM: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.floating({min: 0, max: 59, fixed: options.fixed});\n            }\n            case DMS: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.integer({min: 0, max: 59}) + '’' +\n                        this.floating({min: 0, max: 59, fixed: options.fixed}) + '”';\n            }\n            case DD:\n            default: {\n                return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n            }\n        }\n    };\n\n    Chance.prototype.longitude = function (options) {\n        // Constants - Formats\n        var [DDM, DMS, DD] = ['ddm', 'dms', 'dd'];\n\n        options = initOptions(\noptions,\n            options && options.format && [DDM, DMS].includes(options.format.toLowerCase()) ?\n            {min: 0, max: 179, fixed: 4} :\n            {fixed: 5, min: -180, max: 180, format: DD}\n);\n\n        var format = options.format.toLowerCase();\n\n        if (format === DDM || format === DMS) {\n            testRange(options.min < 0 || options.min > 179, \"Chance: Min specified is out of range. Should be between 0 - 179\");\n            testRange(options.max < 0 || options.max > 179, \"Chance: Max specified is out of range. Should be between 0 - 179\");\n            testRange(options.fixed > 4, 'Chance: Fixed specified should be below or equal to 4');\n        }\n\n        switch (format) {\n            case DDM: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.floating({min: 0, max: 59.9999, fixed: options.fixed})\n            }\n            case DMS: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.integer({min: 0, max: 59}) + '’' +\n                        this.floating({min: 0, max: 59.9999, fixed: options.fixed}) + '”';\n            }\n            case DD:\n            default: {\n                return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n            }\n        }\n    };\n\n    Chance.prototype.phone = function (options) {\n        var self = this,\n            numPick,\n            ukNum = function (parts) {\n                var section = [];\n                //fills the section part of the phone number with random numbers.\n                parts.sections.forEach(function(n) {\n                    section.push(self.string({ pool: '0123456789', length: n}));\n                });\n                return parts.area + section.join(' ');\n            };\n        options = initOptions(options, {\n            formatted: true,\n            country: 'us',\n            mobile: false,\n            exampleNumber: false,\n        });\n        if (!options.formatted) {\n            options.parens = false;\n        }\n        var phone;\n        switch (options.country) {\n            case 'fr':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        // Valid zone and département codes.\n                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),\n                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),\n                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),\n                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),\n                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),\n                        '09' + self.string({ pool: '0123456789', length: 8}),\n                    ]);\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                } else {\n                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                }\n                break;\n            case 'uk':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        //valid area codes of major cities/counties followed by random numbers in required format.\n\n                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },\n                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },\n                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },\n                        { area: '024 7', sections: [3,4] },\n                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },\n                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [6] },\n                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [6] },\n                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [6] },\n                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [6] },\n                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [6] },\n                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [6] },\n                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [6] },\n                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [6] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');\n                } else {\n                    numPick = this.pick([\n                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },\n                        { area: '07624 ', sections: [6] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');\n                }\n                break;\n            case 'za':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                       '01' + this.pick(['0', '1', '2', '3', '4', '5', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                       '02' + this.pick(['1', '2', '3', '4', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                       '03' + this.pick(['1', '2', '3', '5', '6', '9']) + self.string({ pool: '0123456789', length: 7}),\n                       '04' + this.pick(['1', '2', '3', '4', '5','6','7', '8','9']) + self.string({ pool: '0123456789', length: 7}),\n                       '05' + this.pick(['1', '3', '4', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                    ]);\n                    phone = options.formatted || numPick;\n                } else {\n                    numPick = this.pick([\n                        '060' + this.pick(['3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n                        '061' + this.pick(['0','1','2','3','4','5','8']) + self.string({ pool: '0123456789', length: 6}),\n                        '06'  + self.string({ pool: '0123456789', length: 7}),\n                        '071' + this.pick(['0','1','2','3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n                        '07'  + this.pick(['2','3','4','6','7','8','9']) + self.string({ pool: '0123456789', length: 7}),\n                        '08'  + this.pick(['0','1','2','3','4','5']) + self.string({ pool: '0123456789', length: 7}),\n                    ]);\n                    phone = options.formatted || numPick;\n                }\n                break;\n            case 'us':\n                var areacode = this.areacode(options).toString();\n                var exchange = this.natural({ min: 2, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString();\n                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}\n                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;\n                break;\n            case 'br':\n                var areaCode = this.pick([\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"21\", \"22\", \"24\", \"27\", \"28\", \"31\", \"32\", \"33\", \"34\", \"35\", \"37\", \"38\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"51\", \"53\", \"54\", \"55\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"71\", \"73\", \"74\", \"75\", \"77\", \"79\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\"]);\n                var prefix;\n                if (options.mobile) {\n                    // Brasilian official reference (mobile): http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=330\n                    prefix = '9' + self.string({ pool: '0123456789', length: 4});\n                } else {\n                    // Brasilian official reference: http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=331\n                    prefix = this.natural({ min: 2000, max: 5999 }).toString();\n                }\n                var mcdu = self.string({ pool: '0123456789', length: 4});\n                phone = options.formatted ? '(' + areaCode + ') ' + prefix + '-' + mcdu : areaCode + prefix + mcdu;\n                break;\n        }\n        return phone;\n    };\n\n    Chance.prototype.postal = function () {\n        // Postal District\n        var pd = this.character({pool: \"XVTSRPNKLMHJGECBA\"});\n        // Forward Sortation Area (FSA)\n        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"});\n        // Local Delivery Unut (LDU)\n        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"}) + this.natural({max: 9});\n\n        return fsa + \" \" + ldu;\n    };\n\n    Chance.prototype.postcode = function () {\n        // Area\n        var area = this.pick(this.get(\"postcodeAreas\")).code;\n        // District\n        var district = this.natural({max: 9});\n        // Sub-District\n        var subDistrict = this.bool() ? this.character({alpha: true, casing: \"upper\"}) : \"\";\n        // Outward Code\n        var outward = area + district + subDistrict;\n        // Sector\n        var sector = this.natural({max: 9});\n        // Unit\n        var unit = this.character({alpha: true, casing: \"upper\"}) + this.character({alpha: true, casing: \"upper\"});\n        // Inward Code\n        var inward = sector + unit;\n\n        return outward + \" \" + inward;\n    };\n\n    Chance.prototype.counties = function (options) {\n        options = initOptions(options, { country: 'uk' });\n        return this.get(\"counties\")[options.country.toLowerCase()];\n    };\n\n    Chance.prototype.county = function (options) {\n        return this.pick(this.counties(options)).name;\n    };\n\n    Chance.prototype.provinces = function (options) {\n        options = initOptions(options, { country: 'ca' });\n        return this.get(\"provinces\")[options.country.toLowerCase()];\n    };\n\n    Chance.prototype.province = function (options) {\n        return (options && options.full) ?\n            this.pick(this.provinces(options)).name :\n            this.pick(this.provinces(options)).abbreviation;\n    };\n\n    Chance.prototype.state = function (options) {\n        return (options && options.full) ?\n            this.pick(this.states(options)).name :\n            this.pick(this.states(options)).abbreviation;\n    };\n\n    Chance.prototype.states = function (options) {\n        options = initOptions(options, { country: 'us', us_states_and_dc: true } );\n\n        var states;\n\n        switch (options.country.toLowerCase()) {\n            case 'us':\n                var us_states_and_dc = this.get(\"us_states_and_dc\"),\n                    territories = this.get(\"territories\"),\n                    armed_forces = this.get(\"armed_forces\");\n\n                states = [];\n\n                if (options.us_states_and_dc) {\n                    states = states.concat(us_states_and_dc);\n                }\n                if (options.territories) {\n                    states = states.concat(territories);\n                }\n                if (options.armed_forces) {\n                    states = states.concat(armed_forces);\n                }\n                break;\n            case 'it':\n            case 'mx':\n                states = this.get(\"country_regions\")[options.country.toLowerCase()];\n                break;\n            case 'uk':\n                states = this.get(\"counties\")[options.country.toLowerCase()];\n                break;\n        }\n\n        return states;\n    };\n\n    Chance.prototype.street = function (options) {\n        options = initOptions(options, { country: 'us', syllables: 2 });\n        var     street;\n\n        switch (options.country.toLowerCase()) {\n            case 'us':\n                street = this.word({ syllables: options.syllables });\n                street = this.capitalize(street);\n                street += ' ';\n                street += options.short_suffix ?\n                    this.street_suffix(options).abbreviation :\n                    this.street_suffix(options).name;\n                break;\n            case 'it':\n                street = this.word({ syllables: options.syllables });\n                street = this.capitalize(street);\n                street = (options.short_suffix ?\n                    this.street_suffix(options).abbreviation :\n                    this.street_suffix(options).name) + \" \" + street;\n                break;\n        }\n        return street;\n    };\n\n    Chance.prototype.street_suffix = function (options) {\n        options = initOptions(options, { country: 'us' });\n        return this.pick(this.street_suffixes(options));\n    };\n\n    Chance.prototype.street_suffixes = function (options) {\n        options = initOptions(options, { country: 'us' });\n        // These are the most common suffixes.\n        return this.get(\"street_suffixes\")[options.country.toLowerCase()];\n    };\n\n    // Note: only returning US zip codes, internationalization will be a whole\n    // other beast to tackle at some point.\n    Chance.prototype.zip = function (options) {\n        var zip = this.n(this.natural, 5, {max: 9});\n\n        if (options && options.plusfour === true) {\n            zip.push('-');\n            zip = zip.concat(this.n(this.natural, 4, {max: 9}));\n        }\n\n        return zip.join(\"\");\n    };\n\n    // -- End Location --\n\n    // -- Time\n\n    Chance.prototype.ampm = function () {\n        return this.bool() ? 'am' : 'pm';\n    };\n\n    Chance.prototype.date = function (options) {\n        var date_string, date;\n\n        // If interval is specified we ignore preset\n        if(options && (options.min || options.max)) {\n            options = initOptions(options, {\n                american: true,\n                string: false\n            });\n            var min = typeof options.min !== \"undefined\" ? options.min.getTime() : 1;\n            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1\n            var max = typeof options.max !== \"undefined\" ? options.max.getTime() : 8640000000000000;\n\n            date = new Date(this.integer({min: min, max: max}));\n        } else {\n            var m = this.month({raw: true});\n            var daysInMonth = m.days;\n\n            if(options && options.month) {\n                // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).\n                daysInMonth = this.get('months')[((options.month % 12) + 12) % 12].days;\n            }\n\n            options = initOptions(options, {\n                year: parseInt(this.year(), 10),\n                // Necessary to subtract 1 because Date() 0-indexes month but not day or year\n                // for some reason.\n                month: m.numeric - 1,\n                day: this.natural({min: 1, max: daysInMonth}),\n                hour: this.hour({twentyfour: true}),\n                minute: this.minute(),\n                second: this.second(),\n                millisecond: this.millisecond(),\n                american: true,\n                string: false\n            });\n\n            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);\n        }\n\n        if (options.american) {\n            // Adding 1 to the month is necessary because Date() 0-indexes\n            // months but not day for some odd reason.\n            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\n        } else {\n            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n        }\n\n        return options.string ? date_string : date;\n    };\n\n    Chance.prototype.hammertime = function (options) {\n        return this.date(options).getTime();\n    };\n\n    Chance.prototype.hour = function (options) {\n        options = initOptions(options, {\n            min: options && options.twentyfour ? 0 : 1,\n            max: options && options.twentyfour ? 23 : 12\n        });\n\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n        testRange(options.twentyfour && options.max > 23, \"Chance: Max cannot be greater than 23 for twentyfour option.\");\n        testRange(!options.twentyfour && options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.millisecond = function () {\n        return this.natural({max: 999});\n    };\n\n    Chance.prototype.minute = Chance.prototype.second = function (options) {\n        options = initOptions(options, {min: 0, max: 59});\n\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n        testRange(options.max > 59, \"Chance: Max cannot be greater than 59.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.month = function (options) {\n        options = initOptions(options, {min: 1, max: 12});\n\n        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n        testRange(options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        var month = this.pick(this.months().slice(options.min - 1, options.max));\n        return options.raw ? month : month.name;\n    };\n\n    Chance.prototype.months = function () {\n        return this.get(\"months\");\n    };\n\n    Chance.prototype.second = function () {\n        return this.natural({max: 59});\n    };\n\n    Chance.prototype.timestamp = function () {\n        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});\n    };\n\n    Chance.prototype.weekday = function (options) {\n        options = initOptions(options, {weekday_only: false});\n        var weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n        if (!options.weekday_only) {\n            weekdays.push(\"Saturday\");\n            weekdays.push(\"Sunday\");\n        }\n        return this.pickone(weekdays);\n    };\n\n    Chance.prototype.year = function (options) {\n        // Default to current year as min if none specified\n        options = initOptions(options, {min: new Date().getFullYear()});\n\n        // Default to one century after current year as max if none specified\n        options.max = (typeof options.max !== \"undefined\") ? options.max : options.min + 100;\n\n        return this.natural(options).toString();\n    };\n\n    // -- End Time\n\n    // -- Finance --\n\n    Chance.prototype.cc = function (options) {\n        options = initOptions(options);\n\n        var type, number, to_generate;\n\n        type = (options.type) ?\n                    this.cc_type({ name: options.type, raw: true }) :\n                    this.cc_type({ raw: true });\n\n        number = type.prefix.split(\"\");\n        to_generate = type.length - type.prefix.length - 1;\n\n        // Generates n - 1 digits\n        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));\n\n        // Generates the last digit according to Luhn algorithm\n        number.push(this.luhn_calculate(number.join(\"\")));\n\n        return number.join(\"\");\n    };\n\n    Chance.prototype.cc_types = function () {\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        return this.get(\"cc_types\");\n    };\n\n    Chance.prototype.cc_type = function (options) {\n        options = initOptions(options);\n        var types = this.cc_types(),\n            type = null;\n\n        if (options.name) {\n            for (var i = 0; i < types.length; i++) {\n                // Accept either name or short_name to specify card type\n                if (types[i].name === options.name || types[i].short_name === options.name) {\n                    type = types[i];\n                    break;\n                }\n            }\n            if (type === null) {\n                throw new RangeError(\"Chance: Credit card type '\" + options.name + \"' is not supported\");\n            }\n        } else {\n            type = this.pick(types);\n        }\n\n        return options.raw ? type : type.name;\n    };\n\n    // return all world currency by ISO 4217\n    Chance.prototype.currency_types = function () {\n        return this.get(\"currency_types\");\n    };\n\n    // return random world currency by ISO 4217\n    Chance.prototype.currency = function () {\n        return this.pick(this.currency_types());\n    };\n\n    // return all timezones available\n    Chance.prototype.timezones = function () {\n        return this.get(\"timezones\");\n    };\n\n    // return random timezone\n    Chance.prototype.timezone = function () {\n        return this.pick(this.timezones());\n    };\n\n    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code\n    Chance.prototype.currency_pair = function (returnAsString) {\n        var currencies = this.unique(this.currency, 2, {\n            comparator: function(arr, val) {\n\n                return arr.reduce(function(acc, item) {\n                    // If a match has been found, short circuit check and just return\n                    return acc || (item.code === val.code);\n                }, false);\n            }\n        });\n\n        if (returnAsString) {\n            return currencies[0].code + '/' + currencies[1].code;\n        } else {\n            return currencies;\n        }\n    };\n\n    Chance.prototype.dollar = function (options) {\n        // By default, a somewhat more sane max for dollar than all available numbers\n        options = initOptions(options, {max : 10000, min : 0});\n\n        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),\n            cents = dollar.split('.')[1];\n\n        if (cents === undefined) {\n            dollar += '.00';\n        } else if (cents.length < 2) {\n            dollar = dollar + '0';\n        }\n\n        if (dollar < 0) {\n            return '-$' + dollar.replace('-', '');\n        } else {\n            return '$' + dollar;\n        }\n    };\n\n    Chance.prototype.euro = function (options) {\n        return Number(this.dollar(options).replace(\"$\", \"\")).toLocaleString() + \"€\";\n    };\n\n    Chance.prototype.exp = function (options) {\n        options = initOptions(options);\n        var exp = {};\n\n        exp.year = this.exp_year();\n\n        // If the year is this year, need to ensure month is greater than the\n        // current month or this expiration will not be valid\n        if (exp.year === (new Date().getFullYear()).toString()) {\n            exp.month = this.exp_month({future: true});\n        } else {\n            exp.month = this.exp_month();\n        }\n\n        return options.raw ? exp : exp.month + '/' + exp.year;\n    };\n\n    Chance.prototype.exp_month = function (options) {\n        options = initOptions(options);\n        var month, month_int,\n            // Date object months are 0 indexed\n            curMonth = new Date().getMonth() + 1;\n\n        if (options.future && (curMonth !== 12)) {\n            do {\n                month = this.month({raw: true}).numeric;\n                month_int = parseInt(month, 10);\n            } while (month_int <= curMonth);\n        } else {\n            month = this.month({raw: true}).numeric;\n        }\n\n        return month;\n    };\n\n    Chance.prototype.exp_year = function () {\n        var curMonth = new Date().getMonth() + 1,\n            curYear = new Date().getFullYear();\n\n        return this.year({min: ((curMonth === 12) ? (curYear + 1) : curYear), max: (curYear + 10)});\n    };\n\n    Chance.prototype.vat = function (options) {\n        options = initOptions(options, { country: 'it' });\n        switch (options.country.toLowerCase()) {\n            case 'it':\n                return this.it_vat();\n        }\n    };\n\n    /**\n     * Generate a string matching IBAN pattern (https://en.wikipedia.org/wiki/International_Bank_Account_Number).\n     * No country-specific formats support (yet)\n     */\n    Chance.prototype.iban = function () {\n        var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        var alphanum = alpha + '0123456789';\n        var iban =\n            this.string({ length: 2, pool: alpha }) +\n            this.pad(this.integer({ min: 0, max: 99 }), 2) +\n            this.string({ length: 4, pool: alphanum }) +\n            this.pad(this.natural(), this.natural({ min: 6, max: 26 }));\n        return iban;\n    };\n\n    // -- End Finance\n\n    // -- Regional\n\n    Chance.prototype.it_vat = function () {\n        var it_vat = this.natural({min: 1, max: 1800000});\n\n        it_vat = this.pad(it_vat, 7) + this.pad(this.pick(this.provinces({ country: 'it' })).code, 3);\n        return it_vat + this.luhn_calculate(it_vat);\n    };\n\n    /*\n     * this generator is written following the official algorithm\n     * all data can be passed explicitely or randomized by calling chance.cf() without options\n     * the code does not check that the input data is valid (it goes beyond the scope of the generator)\n     *\n     * @param  [Object] options = { first: first name,\n     *                              last: last name,\n     *                              gender: female|male,\n                                    birthday: JavaScript date object,\n                                    city: string(4), 1 letter + 3 numbers\n                                   }\n     * @return [string] codice fiscale\n     *\n    */\n    Chance.prototype.cf = function (options) {\n        options = options || {};\n        var gender = !!options.gender ? options.gender : this.gender(),\n            first = !!options.first ? options.first : this.first( { gender: gender, nationality: 'it'} ),\n            last = !!options.last ? options.last : this.last( { nationality: 'it'} ),\n            birthday = !!options.birthday ? options.birthday : this.birthday(),\n            city = !!options.city ? options.city : this.pickone(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'L', 'M', 'Z']) + this.pad(this.natural({max:999}), 3),\n            cf = [],\n            name_generator = function(name, isLast) {\n                var temp,\n                    return_value = [];\n\n                if (name.length < 3) {\n                    return_value = name.split(\"\").concat(\"XXX\".split(\"\")).splice(0,3);\n                }\n                else {\n                    temp = name.toUpperCase().split('').map(function(c){\n                        return (\"BCDFGHJKLMNPRSTVWZ\".indexOf(c) !== -1) ? c : undefined;\n                    }).join('');\n                    if (temp.length > 3) {\n                        if (isLast) {\n                            temp = temp.substr(0,3);\n                        } else {\n                            temp = temp[0] + temp.substr(2,2);\n                        }\n                    }\n                    if (temp.length < 3) {\n                        return_value = temp;\n                        temp = name.toUpperCase().split('').map(function(c){\n                            return (\"AEIOU\".indexOf(c) !== -1) ? c : undefined;\n                        }).join('').substr(0, 3 - return_value.length);\n                    }\n                    return_value = return_value + temp;\n                }\n\n                return return_value;\n            },\n            date_generator = function(birthday, gender, that) {\n                var lettermonths = ['A', 'B', 'C', 'D', 'E', 'H', 'L', 'M', 'P', 'R', 'S', 'T'];\n\n                return  birthday.getFullYear().toString().substr(2) +\n                        lettermonths[birthday.getMonth()] +\n                        that.pad(birthday.getDate() + ((gender.toLowerCase() === \"female\") ? 40 : 0), 2);\n            },\n            checkdigit_generator = function(cf) {\n                var range1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    range2 = \"ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    evens  = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    odds   = \"BAKPLCQDREVOSFTGUHMINJWZYX\",\n                    digit  = 0;\n\n\n                for(var i = 0; i < 15; i++) {\n                    if (i % 2 !== 0) {\n                        digit += evens.indexOf(range2[range1.indexOf(cf[i])]);\n                    }\n                    else {\n                        digit +=  odds.indexOf(range2[range1.indexOf(cf[i])]);\n                    }\n                }\n                return evens[digit % 26];\n            };\n\n        cf = cf.concat(name_generator(last, true), name_generator(first), date_generator(birthday, gender, this), city.toUpperCase().split(\"\")).join(\"\");\n        cf += checkdigit_generator(cf.toUpperCase(), this);\n\n        return cf.toUpperCase();\n    };\n\n    Chance.prototype.pl_pesel = function () {\n        var number = this.natural({min: 1, max: 9999999999});\n        var arr = this.pad(number, 10).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (1 * arr[0] + 3 * arr[1] + 7 * arr[2] + 9 * arr[3] + 1 * arr[4] + 3 * arr[5] + 7 * arr[6] + 9 * arr[7] + 1 * arr[8] + 3 * arr[9]) % 10;\n        if(controlNumber !== 0) {\n            controlNumber = 10 - controlNumber;\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    Chance.prototype.pl_nip = function () {\n        var number = this.natural({min: 1, max: 999999999});\n        var arr = this.pad(number, 9).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (6 * arr[0] + 5 * arr[1] + 7 * arr[2] + 2 * arr[3] + 3 * arr[4] + 4 * arr[5] + 5 * arr[6] + 6 * arr[7] + 7 * arr[8]) % 11;\n        if(controlNumber === 10) {\n            return this.pl_nip();\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    Chance.prototype.pl_regon = function () {\n        var number = this.natural({min: 1, max: 99999999});\n        var arr = this.pad(number, 8).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (8 * arr[0] + 9 * arr[1] + 2 * arr[2] + 3 * arr[3] + 4 * arr[4] + 5 * arr[5] + 6 * arr[6] + 7 * arr[7]) % 11;\n        if(controlNumber === 10) {\n            controlNumber = 0;\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    // -- End Regional\n\n    // -- Music --\n\n    Chance.prototype.note = function(options) {\n      // choices for 'notes' option:\n      // flatKey - chromatic scale with flat notes (default)\n      // sharpKey - chromatic scale with sharp notes\n      // flats - just flat notes\n      // sharps - just sharp notes\n      // naturals - just natural notes\n      // all - naturals, sharps and flats\n      options = initOptions(options, { notes : 'flatKey'});\n      var scales = {\n        naturals: ['C', 'D', 'E', 'F', 'G', 'A', 'B'],\n        flats: ['D♭', 'E♭', 'G♭', 'A♭', 'B♭'],\n        sharps: ['C♯', 'D♯', 'F♯', 'G♯', 'A♯']\n      };\n      scales.all = scales.naturals.concat(scales.flats.concat(scales.sharps))\n      scales.flatKey = scales.naturals.concat(scales.flats)\n      scales.sharpKey = scales.naturals.concat(scales.sharps)\n      return this.pickone(scales[options.notes]);\n    }\n\n    Chance.prototype.midi_note = function(options) {\n      var min = 0;\n      var max = 127;\n      options = initOptions(options, { min : min, max : max });\n      return this.integer({min: options.min, max: options.max});\n    }\n\n    Chance.prototype.chord_quality = function(options) {\n      options = initOptions(options, { jazz: true });\n      var chord_qualities = ['maj', 'min', 'aug', 'dim'];\n      if (options.jazz){\n        chord_qualities = [\n          'maj7',\n          'min7',\n          '7',\n          'sus',\n          'dim',\n          'ø'\n        ];\n      }\n      return this.pickone(chord_qualities);\n    }\n\n    Chance.prototype.chord = function (options) {\n      options = initOptions(options);\n      return this.note(options) + this.chord_quality(options);\n    }\n\n    Chance.prototype.tempo = function (options) {\n      var min = 40;\n      var max = 320;\n      options = initOptions(options, {min: min, max: max});\n      return this.integer({min: options.min, max: options.max});\n    }\n\n    // -- End Music\n\n    // -- Miscellaneous --\n\n    // Coin - Flip, flip, flipadelphia\n    Chance.prototype.coin = function() {\n      return this.bool() ? \"heads\" : \"tails\";\n    }\n\n    // Dice - For all the board game geeks out there, myself included ;)\n    function diceFn (range) {\n        return function () {\n            return this.natural(range);\n        };\n    }\n    Chance.prototype.d4 = diceFn({min: 1, max: 4});\n    Chance.prototype.d6 = diceFn({min: 1, max: 6});\n    Chance.prototype.d8 = diceFn({min: 1, max: 8});\n    Chance.prototype.d10 = diceFn({min: 1, max: 10});\n    Chance.prototype.d12 = diceFn({min: 1, max: 12});\n    Chance.prototype.d20 = diceFn({min: 1, max: 20});\n    Chance.prototype.d30 = diceFn({min: 1, max: 30});\n    Chance.prototype.d100 = diceFn({min: 1, max: 100});\n\n    Chance.prototype.rpg = function (thrown, options) {\n        options = initOptions(options);\n        if (!thrown) {\n            throw new RangeError(\"Chance: A type of die roll must be included\");\n        } else {\n            var bits = thrown.toLowerCase().split(\"d\"),\n                rolls = [];\n\n            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {\n                throw new Error(\"Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");\n            }\n            for (var i = bits[0]; i > 0; i--) {\n                rolls[i - 1] = this.natural({min: 1, max: bits[1]});\n            }\n            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;\n        }\n    };\n\n    // Guid\n    Chance.prototype.guid = function (options) {\n        options = initOptions(options, { version: 5 });\n\n        var guid_pool = \"abcdef1234567890\",\n            variant_pool = \"ab89\",\n            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +\n                   this.string({ pool: guid_pool, length: 4 }) + '-' +\n                   // The Version\n                   options.version +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   // The Variant\n                   this.string({ pool: variant_pool, length: 1 }) +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   this.string({ pool: guid_pool, length: 12 });\n        return guid;\n    };\n\n    // Hash\n    Chance.prototype.hash = function (options) {\n        options = initOptions(options, {length : 40, casing: 'lower'});\n        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;\n        return this.string({pool: pool, length: options.length});\n    };\n\n    Chance.prototype.luhn_check = function (num) {\n        var str = num.toString();\n        var checkDigit = +str.substring(str.length - 1);\n        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));\n    };\n\n    Chance.prototype.luhn_calculate = function (num) {\n        var digits = num.toString().split(\"\").reverse();\n        var sum = 0;\n        var digit;\n\n        for (var i = 0, l = digits.length; l > i; ++i) {\n            digit = +digits[i];\n            if (i % 2 === 0) {\n                digit *= 2;\n                if (digit > 9) {\n                    digit -= 9;\n                }\n            }\n            sum += digit;\n        }\n        return (sum * 9) % 10;\n    };\n\n    // MD5 Hash\n    Chance.prototype.md5 = function(options) {\n        var opts = { str: '', key: null, raw: false };\n\n        if (!options) {\n            opts.str = this.string();\n            options = {};\n        }\n        else if (typeof options === 'string') {\n            opts.str = options;\n            options = {};\n        }\n        else if (typeof options !== 'object') {\n            return null;\n        }\n        else if(options.constructor === 'Array') {\n            return null;\n        }\n\n        opts = initOptions(options, opts);\n\n        if(!opts.str){\n            throw new Error('A parameter is required to return an md5 hash.');\n        }\n\n        return this.bimd5.md5(opts.str, opts.key, opts.raw);\n    };\n\n    /**\n     * #Description:\n     * =====================================================\n     * Generate random file name with extension\n     *\n     * The argument provide extension type\n     * -> raster\n     * -> vector\n     * -> 3d\n     * -> document\n     *\n     * If nothing is provided the function return random file name with random\n     * extension type of any kind\n     *\n     * The user can validate the file name length range\n     * If nothing provided the generated file name is random\n     *\n     * #Extension Pool :\n     * * Currently the supported extensions are\n     *  -> some of the most popular raster image extensions\n     *  -> some of the most popular vector image extensions\n     *  -> some of the most popular 3d image extensions\n     *  -> some of the most popular document extensions\n     *\n     * #Examples :\n     * =====================================================\n     *\n     * Return random file name with random extension. The file extension\n     * is provided by a predefined collection of extensions. More about the extension\n     * pool can be found in #Extension Pool section\n     *\n     * chance.file()\n     * => dsfsdhjf.xml\n     *\n     * In order to generate a file name with specific length, specify the\n     * length property and integer value. The extension is going to be random\n     *\n     * chance.file({length : 10})\n     * => asrtineqos.pdf\n     *\n     * In order to generate file with extension from some of the predefined groups\n     * of the extension pool just specify the extension pool category in fileType property\n     *\n     * chance.file({fileType : 'raster'})\n     * => dshgssds.psd\n     *\n     * You can provide specific extension for your files\n     * chance.file({extension : 'html'})\n     * => djfsd.html\n     *\n     * Or you could pass custom collection of extensions by array or by object\n     * chance.file({extensions : [...]})\n     * => dhgsdsd.psd\n     *\n     * chance.file({extensions : { key : [...], key : [...]}})\n     * => djsfksdjsd.xml\n     *\n     * @param  [collection] options\n     * @return [string]\n     *\n     */\n    Chance.prototype.file = function(options) {\n\n        var fileOptions = options || {};\n        var poolCollectionKey = \"fileExtension\";\n        var typeRange   = Object.keys(this.get(\"fileExtension\"));//['raster', 'vector', '3d', 'document'];\n        var fileName;\n        var fileExtension;\n\n        // Generate random file name\n        fileName = this.word({length : fileOptions.length});\n\n        // Generate file by specific extension provided by the user\n        if(fileOptions.extension) {\n\n            fileExtension = fileOptions.extension;\n            return (fileName + '.' + fileExtension);\n        }\n\n        // Generate file by specific extension collection\n        if(fileOptions.extensions) {\n\n            if(Array.isArray(fileOptions.extensions)) {\n\n                fileExtension = this.pickone(fileOptions.extensions);\n                return (fileName + '.' + fileExtension);\n            }\n            else if(fileOptions.extensions.constructor === Object) {\n\n                var extensionObjectCollection = fileOptions.extensions;\n                var keys = Object.keys(extensionObjectCollection);\n\n                fileExtension = this.pickone(extensionObjectCollection[this.pickone(keys)]);\n                return (fileName + '.' + fileExtension);\n            }\n\n            throw new Error(\"Chance: Extensions must be an Array or Object\");\n        }\n\n        // Generate file extension based on specific file type\n        if(fileOptions.fileType) {\n\n            var fileType = fileOptions.fileType;\n            if(typeRange.indexOf(fileType) !== -1) {\n\n                fileExtension = this.pickone(this.get(poolCollectionKey)[fileType]);\n                return (fileName + '.' + fileExtension);\n            }\n\n            throw new RangeError(\"Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'\");\n        }\n\n        // Generate random file name if no extension options are passed\n        fileExtension = this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);\n        return (fileName + '.' + fileExtension);\n    };\n\n    var data = {\n\n        firstNames: {\n            \"male\": {\n                \"en\": [\"James\", \"John\", \"Robert\", \"Michael\", \"William\", \"David\", \"Richard\", \"Joseph\", \"Charles\", \"Thomas\", \"Christopher\", \"Daniel\", \"Matthew\", \"George\", \"Donald\", \"Anthony\", \"Paul\", \"Mark\", \"Edward\", \"Steven\", \"Kenneth\", \"Andrew\", \"Brian\", \"Joshua\", \"Kevin\", \"Ronald\", \"Timothy\", \"Jason\", \"Jeffrey\", \"Frank\", \"Gary\", \"Ryan\", \"Nicholas\", \"Eric\", \"Stephen\", \"Jacob\", \"Larry\", \"Jonathan\", \"Scott\", \"Raymond\", \"Justin\", \"Brandon\", \"Gregory\", \"Samuel\", \"Benjamin\", \"Patrick\", \"Jack\", \"Henry\", \"Walter\", \"Dennis\", \"Jerry\", \"Alexander\", \"Peter\", \"Tyler\", \"Douglas\", \"Harold\", \"Aaron\", \"Jose\", \"Adam\", \"Arthur\", \"Zachary\", \"Carl\", \"Nathan\", \"Albert\", \"Kyle\", \"Lawrence\", \"Joe\", \"Willie\", \"Gerald\", \"Roger\", \"Keith\", \"Jeremy\", \"Terry\", \"Harry\", \"Ralph\", \"Sean\", \"Jesse\", \"Roy\", \"Louis\", \"Billy\", \"Austin\", \"Bruce\", \"Eugene\", \"Christian\", \"Bryan\", \"Wayne\", \"Russell\", \"Howard\", \"Fred\", \"Ethan\", \"Jordan\", \"Philip\", \"Alan\", \"Juan\", \"Randy\", \"Vincent\", \"Bobby\", \"Dylan\", \"Johnny\", \"Phillip\", \"Victor\", \"Clarence\", \"Ernest\", \"Martin\", \"Craig\", \"Stanley\", \"Shawn\", \"Travis\", \"Bradley\", \"Leonard\", \"Earl\", \"Gabriel\", \"Jimmy\", \"Francis\", \"Todd\", \"Noah\", \"Danny\", \"Dale\", \"Cody\", \"Carlos\", \"Allen\", \"Frederick\", \"Logan\", \"Curtis\", \"Alex\", \"Joel\", \"Luis\", \"Norman\", \"Marvin\", \"Glenn\", \"Tony\", \"Nathaniel\", \"Rodney\", \"Melvin\", \"Alfred\", \"Steve\", \"Cameron\", \"Chad\", \"Edwin\", \"Caleb\", \"Evan\", \"Antonio\", \"Lee\", \"Herbert\", \"Jeffery\", \"Isaac\", \"Derek\", \"Ricky\", \"Marcus\", \"Theodore\", \"Elijah\", \"Luke\", \"Jesus\", \"Eddie\", \"Troy\", \"Mike\", \"Dustin\", \"Ray\", \"Adrian\", \"Bernard\", \"Leroy\", \"Angel\", \"Randall\", \"Wesley\", \"Ian\", \"Jared\", \"Mason\", \"Hunter\", \"Calvin\", \"Oscar\", \"Clifford\", \"Jay\", \"Shane\", \"Ronnie\", \"Barry\", \"Lucas\", \"Corey\", \"Manuel\", \"Leo\", \"Tommy\", \"Warren\", \"Jackson\", \"Isaiah\", \"Connor\", \"Don\", \"Dean\", \"Jon\", \"Julian\", \"Miguel\", \"Bill\", \"Lloyd\", \"Charlie\", \"Mitchell\", \"Leon\", \"Jerome\", \"Darrell\", \"Jeremiah\", \"Alvin\", \"Brett\", \"Seth\", \"Floyd\", \"Jim\", \"Blake\", \"Micheal\", \"Gordon\", \"Trevor\", \"Lewis\", \"Erik\", \"Edgar\", \"Vernon\", \"Devin\", \"Gavin\", \"Jayden\", \"Chris\", \"Clyde\", \"Tom\", \"Derrick\", \"Mario\", \"Brent\", \"Marc\", \"Herman\", \"Chase\", \"Dominic\", \"Ricardo\", \"Franklin\", \"Maurice\", \"Max\", \"Aiden\", \"Owen\", \"Lester\", \"Gilbert\", \"Elmer\", \"Gene\", \"Francisco\", \"Glen\", \"Cory\", \"Garrett\", \"Clayton\", \"Sam\", \"Jorge\", \"Chester\", \"Alejandro\", \"Jeff\", \"Harvey\", \"Milton\", \"Cole\", \"Ivan\", \"Andre\", \"Duane\", \"Landon\"],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0163\n                \"it\": [\"Adolfo\", \"Alberto\", \"Aldo\", \"Alessandro\", \"Alessio\", \"Alfredo\", \"Alvaro\", \"Andrea\", \"Angelo\", \"Angiolo\", \"Antonino\", \"Antonio\", \"Attilio\", \"Benito\", \"Bernardo\", \"Bruno\", \"Carlo\", \"Cesare\", \"Christian\", \"Claudio\", \"Corrado\", \"Cosimo\", \"Cristian\", \"Cristiano\", \"Daniele\", \"Dario\", \"David\", \"Davide\", \"Diego\", \"Dino\", \"Domenico\", \"Duccio\", \"Edoardo\", \"Elia\", \"Elio\", \"Emanuele\", \"Emiliano\", \"Emilio\", \"Enrico\", \"Enzo\", \"Ettore\", \"Fabio\", \"Fabrizio\", \"Federico\", \"Ferdinando\", \"Fernando\", \"Filippo\", \"Francesco\", \"Franco\", \"Gabriele\", \"Giacomo\", \"Giampaolo\", \"Giampiero\", \"Giancarlo\", \"Gianfranco\", \"Gianluca\", \"Gianmarco\", \"Gianni\", \"Gino\", \"Giorgio\", \"Giovanni\", \"Giuliano\", \"Giulio\", \"Giuseppe\", \"Graziano\", \"Gregorio\", \"Guido\", \"Iacopo\", \"Jacopo\", \"Lapo\", \"Leonardo\", \"Lorenzo\", \"Luca\", \"Luciano\", \"Luigi\", \"Manuel\", \"Marcello\", \"Marco\", \"Marino\", \"Mario\", \"Massimiliano\", \"Massimo\", \"Matteo\", \"Mattia\", \"Maurizio\", \"Mauro\", \"Michele\", \"Mirko\", \"Mohamed\", \"Nello\", \"Neri\", \"Niccolò\", \"Nicola\", \"Osvaldo\", \"Otello\", \"Paolo\", \"Pier Luigi\", \"Piero\", \"Pietro\", \"Raffaele\", \"Remo\", \"Renato\", \"Renzo\", \"Riccardo\", \"Roberto\", \"Rolando\", \"Romano\", \"Salvatore\", \"Samuele\", \"Sandro\", \"Sergio\", \"Silvano\", \"Simone\", \"Stefano\", \"Thomas\", \"Tommaso\", \"Ubaldo\", \"Ugo\", \"Umberto\", \"Valerio\", \"Valter\", \"Vasco\", \"Vincenzo\", \"Vittorio\"],\n                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\n                \"nl\": [\"Aaron\",\"Abel\",\"Adam\",\"Adriaan\",\"Albert\",\"Alexander\",\"Ali\",\"Arjen\",\"Arno\",\"Bart\",\"Bas\",\"Bastiaan\",\"Benjamin\",\"Bob\", \"Boris\",\"Bram\",\"Brent\",\"Cas\",\"Casper\",\"Chris\",\"Christiaan\",\"Cornelis\",\"Daan\",\"Daley\",\"Damian\",\"Dani\",\"Daniel\",\"Daniël\",\"David\",\"Dean\",\"Dirk\",\"Dylan\",\"Egbert\",\"Elijah\",\"Erik\",\"Erwin\",\"Evert\",\"Ezra\",\"Fabian\",\"Fedde\",\"Finn\",\"Florian\",\"Floris\",\"Frank\",\"Frans\",\"Frederik\",\"Freek\",\"Geert\",\"Gerard\",\"Gerben\",\"Gerrit\",\"Gijs\",\"Guus\",\"Hans\",\"Hendrik\",\"Henk\",\"Herman\",\"Hidde\",\"Hugo\",\"Jaap\",\"Jan Jaap\",\"Jan-Willem\",\"Jack\",\"Jacob\",\"Jan\",\"Jason\",\"Jasper\",\"Jayden\",\"Jelle\",\"Jelte\",\"Jens\",\"Jeroen\",\"Jesse\",\"Jim\",\"Job\",\"Joep\",\"Johannes\",\"John\",\"Jonathan\",\"Joris\",\"Joshua\",\"Joël\",\"Julian\",\"Kees\",\"Kevin\",\"Koen\",\"Lars\",\"Laurens\",\"Leendert\",\"Lennard\",\"Lodewijk\",\"Luc\",\"Luca\",\"Lucas\",\"Lukas\",\"Luuk\",\"Maarten\",\"Marcus\",\"Martijn\",\"Martin\",\"Matthijs\",\"Maurits\",\"Max\",\"Mees\",\"Melle\",\"Mick\",\"Mika\",\"Milan\",\"Mohamed\",\"Mohammed\",\"Morris\",\"Muhammed\",\"Nathan\",\"Nick\",\"Nico\",\"Niek\",\"Niels\",\"Noah\",\"Noud\",\"Olivier\",\"Oscar\",\"Owen\",\"Paul\",\"Pepijn\",\"Peter\",\"Pieter\",\"Pim\",\"Quinten\",\"Reinier\",\"Rens\",\"Robin\",\"Ruben\",\"Sam\",\"Samuel\",\"Sander\",\"Sebastiaan\",\"Sem\",\"Sep\",\"Sepp\",\"Siem\",\"Simon\",\"Stan\",\"Stef\",\"Steven\",\"Stijn\",\"Sven\",\"Teun\",\"Thijmen\",\"Thijs\",\"Thomas\",\"Tijn\",\"Tim\",\"Timo\",\"Tobias\",\"Tom\",\"Victor\",\"Vince\",\"Willem\",\"Wim\",\"Wouter\",\"Yusuf\"],\n                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\n                \"fr\": [\"Aaron\",\"Abdon\",\"Abel\",\"Abélard\",\"Abelin\",\"Abondance\",\"Abraham\",\"Absalon\",\"Acace\",\"Achaire\",\"Achille\",\"Adalard\",\"Adalbald\",\"Adalbéron\",\"Adalbert\",\"Adalric\",\"Adam\",\"Adegrin\",\"Adel\",\"Adelin\",\"Andelin\",\"Adelphe\",\"Adam\",\"Adéodat\",\"Adhémar\",\"Adjutor\",\"Adolphe\",\"Adonis\",\"Adon\",\"Adrien\",\"Agapet\",\"Agathange\",\"Agathon\",\"Agilbert\",\"Agénor\",\"Agnan\",\"Aignan\",\"Agrippin\",\"Aimable\",\"Aimé\",\"Alain\",\"Alban\",\"Albin\",\"Aubin\",\"Albéric\",\"Albert\",\"Albertet\",\"Alcibiade\",\"Alcide\",\"Alcée\",\"Alcime\",\"Aldonce\",\"Aldric\",\"Aldéric\",\"Aleaume\",\"Alexandre\",\"Alexis\",\"Alix\",\"Alliaume\",\"Aleaume\",\"Almine\",\"Almire\",\"Aloïs\",\"Alphée\",\"Alphonse\",\"Alpinien\",\"Alverède\",\"Amalric\",\"Amaury\",\"Amandin\",\"Amant\",\"Ambroise\",\"Amédée\",\"Amélien\",\"Amiel\",\"Amour\",\"Anaël\",\"Anastase\",\"Anatole\",\"Ancelin\",\"Andéol\",\"Andoche\",\"André\",\"Andoche\",\"Ange\",\"Angelin\",\"Angilbe\",\"Anglebert\",\"Angoustan\",\"Anicet\",\"Anne\",\"Annibal\",\"Ansbert\",\"Anselme\",\"Anthelme\",\"Antheaume\",\"Anthime\",\"Antide\",\"Antoine\",\"Antonius\",\"Antonin\",\"Apollinaire\",\"Apollon\",\"Aquilin\",\"Arcade\",\"Archambaud\",\"Archambeau\",\"Archange\",\"Archibald\",\"Arian\",\"Ariel\",\"Ariste\",\"Aristide\",\"Armand\",\"Armel\",\"Armin\",\"Arnould\",\"Arnaud\",\"Arolde\",\"Arsène\",\"Arsinoé\",\"Arthaud\",\"Arthème\",\"Arthur\",\"Ascelin\",\"Athanase\",\"Aubry\",\"Audebert\",\"Audouin\",\"Audran\",\"Audric\",\"Auguste\",\"Augustin\",\"Aurèle\",\"Aurélien\",\"Aurian\",\"Auxence\",\"Axel\",\"Aymard\",\"Aymeric\",\"Aymon\",\"Aymond\",\"Balthazar\",\"Baptiste\",\"Barnabé\",\"Barthélemy\",\"Bartimée\",\"Basile\",\"Bastien\",\"Baudouin\",\"Bénigne\",\"Benjamin\",\"Benoît\",\"Bérenger\",\"Bérard\",\"Bernard\",\"Bertrand\",\"Blaise\",\"Bon\",\"Boniface\",\"Bouchard\",\"Brice\",\"Brieuc\",\"Bruno\",\"Brunon\",\"Calixte\",\"Calliste\",\"Camélien\",\"Camille\",\"Camillien\",\"Candide\",\"Caribert\",\"Carloman\",\"Cassandre\",\"Cassien\",\"Cédric\",\"Céleste\",\"Célestin\",\"Célien\",\"Césaire\",\"César\",\"Charles\",\"Charlemagne\",\"Childebert\",\"Chilpéric\",\"Chrétien\",\"Christian\",\"Christodule\",\"Christophe\",\"Chrysostome\",\"Clarence\",\"Claude\",\"Claudien\",\"Cléandre\",\"Clément\",\"Clotaire\",\"Côme\",\"Constance\",\"Constant\",\"Constantin\",\"Corentin\",\"Cyprien\",\"Cyriaque\",\"Cyrille\",\"Cyril\",\"Damien\",\"Daniel\",\"David\",\"Delphin\",\"Denis\",\"Désiré\",\"Didier\",\"Dieudonné\",\"Dimitri\",\"Dominique\",\"Dorian\",\"Dorothée\",\"Edgard\",\"Edmond\",\"Édouard\",\"Éleuthère\",\"Élie\",\"Élisée\",\"Émeric\",\"Émile\",\"Émilien\",\"Emmanuel\",\"Enguerrand\",\"Épiphane\",\"Éric\",\"Esprit\",\"Ernest\",\"Étienne\",\"Eubert\",\"Eudes\",\"Eudoxe\",\"Eugène\",\"Eusèbe\",\"Eustache\",\"Évariste\",\"Évrard\",\"Fabien\",\"Fabrice\",\"Falba\",\"Félicité\",\"Félix\",\"Ferdinand\",\"Fiacre\",\"Fidèle\",\"Firmin\",\"Flavien\",\"Flodoard\",\"Florent\",\"Florentin\",\"Florestan\",\"Florian\",\"Fortuné\",\"Foulques\",\"Francisque\",\"François\",\"Français\",\"Franciscus\",\"Francs\",\"Frédéric\",\"Fulbert\",\"Fulcran\",\"Fulgence\",\"Gabin\",\"Gabriel\",\"Gaël\",\"Garnier\",\"Gaston\",\"Gaspard\",\"Gatien\",\"Gaud\",\"Gautier\",\"Gédéon\",\"Geoffroy\",\"Georges\",\"Géraud\",\"Gérard\",\"Gerbert\",\"Germain\",\"Gervais\",\"Ghislain\",\"Gilbert\",\"Gilles\",\"Girart\",\"Gislebert\",\"Gondebaud\",\"Gonthier\",\"Gontran\",\"Gonzague\",\"Grégoire\",\"Guérin\",\"Gui\",\"Guillaume\",\"Gustave\",\"Guy\",\"Guyot\",\"Hardouin\",\"Hector\",\"Hédelin\",\"Hélier\",\"Henri\",\"Herbert\",\"Herluin\",\"Hervé\",\"Hilaire\",\"Hildebert\",\"Hincmar\",\"Hippolyte\",\"Honoré\",\"Hubert\",\"Hugues\",\"Innocent\",\"Isabeau\",\"Isidore\",\"Jacques\",\"Japhet\",\"Jason\",\"Jean\",\"Jeannel\",\"Jeannot\",\"Jérémie\",\"Jérôme\",\"Joachim\",\"Joanny\",\"Job\",\"Jocelyn\",\"Joël\",\"Johan\",\"Jonas\",\"Jonathan\",\"Joseph\",\"Josse\",\"Josselin\",\"Jourdain\",\"Jude\",\"Judicaël\",\"Jules\",\"Julien\",\"Juste\",\"Justin\",\"Lambert\",\"Landry\",\"Laurent\",\"Lazare\",\"Léandre\",\"Léon\",\"Léonard\",\"Léopold\",\"Leu\",\"Loup\",\"Leufroy\",\"Libère\",\"Liétald\",\"Lionel\",\"Loïc\",\"Longin\",\"Lorrain\",\"Lorraine\",\"Lothaire\",\"Louis\",\"Loup\",\"Luc\",\"Lucas\",\"Lucien\",\"Ludolphe\",\"Ludovic\",\"Macaire\",\"Malo\",\"Mamert\",\"Manassé\",\"Marc\",\"Marceau\",\"Marcel\",\"Marcelin\",\"Marius\",\"Marseille\",\"Martial\",\"Martin\",\"Mathurin\",\"Matthias\",\"Mathias\",\"Matthieu\",\"Maugis\",\"Maurice\",\"Mauricet\",\"Maxence\",\"Maxime\",\"Maximilien\",\"Mayeul\",\"Médéric\",\"Melchior\",\"Mence\",\"Merlin\",\"Mérovée\",\"Michaël\",\"Michel\",\"Moïse\",\"Morgan\",\"Nathan\",\"Nathanaël\",\"Narcisse\",\"Néhémie\",\"Nestor\",\"Nestor\",\"Nicéphore\",\"Nicolas\",\"Noé\",\"Noël\",\"Norbert\",\"Normand\",\"Normands\",\"Octave\",\"Odilon\",\"Odon\",\"Oger\",\"Olivier\",\"Oury\",\"Pacôme\",\"Palémon\",\"Parfait\",\"Pascal\",\"Paterne\",\"Patrice\",\"Paul\",\"Pépin\",\"Perceval\",\"Philémon\",\"Philibert\",\"Philippe\",\"Philothée\",\"Pie\",\"Pierre\",\"Pierrick\",\"Prosper\",\"Quentin\",\"Raoul\",\"Raphaël\",\"Raymond\",\"Régis\",\"Réjean\",\"Rémi\",\"Renaud\",\"René\",\"Reybaud\",\"Richard\",\"Robert\",\"Roch\",\"Rodolphe\",\"Rodrigue\",\"Roger\",\"Roland\",\"Romain\",\"Romuald\",\"Roméo\",\"Rome\",\"Ronan\",\"Roselin\",\"Salomon\",\"Samuel\",\"Savin\",\"Savinien\",\"Scholastique\",\"Sébastien\",\"Séraphin\",\"Serge\",\"Séverin\",\"Sidoine\",\"Sigebert\",\"Sigismond\",\"Silvère\",\"Simon\",\"Siméon\",\"Sixte\",\"Stanislas\",\"Stéphane\",\"Stephan\",\"Sylvain\",\"Sylvestre\",\"Tancrède\",\"Tanguy\",\"Taurin\",\"Théodore\",\"Théodose\",\"Théophile\",\"Théophraste\",\"Thibault\",\"Thibert\",\"Thierry\",\"Thomas\",\"Timoléon\",\"Timothée\",\"Titien\",\"Tonnin\",\"Toussaint\",\"Trajan\",\"Tristan\",\"Turold\",\"Tim\",\"Ulysse\",\"Urbain\",\"Valentin\",\"Valère\",\"Valéry\",\"Venance\",\"Venant\",\"Venceslas\",\"Vianney\",\"Victor\",\"Victorien\",\"Victorin\",\"Vigile\",\"Vincent\",\"Vital\",\"Vitalien\",\"Vivien\",\"Waleran\",\"Wandrille\",\"Xavier\",\"Xénophon\",\"Yves\",\"Zacharie\",\"Zaché\",\"Zéphirin\"]\n            },\n\n            \"female\": {\n                \"en\": [\"Mary\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\", \"Alice\", \"Bertha\", \"Sarah\", \"Annie\", \"Clara\", \"Ella\", \"Florence\", \"Cora\", \"Martha\", \"Laura\", \"Nellie\", \"Grace\", \"Carrie\", \"Maude\", \"Mabel\", \"Bessie\", \"Jennie\", \"Gertrude\", \"Julia\", \"Hattie\", \"Edith\", \"Mattie\", \"Rose\", \"Catherine\", \"Lillian\", \"Ada\", \"Lillie\", \"Helen\", \"Jessie\", \"Louise\", \"Ethel\", \"Lula\", \"Myrtle\", \"Eva\", \"Frances\", \"Lena\", \"Lucy\", \"Edna\", \"Maggie\", \"Pearl\", \"Daisy\", \"Fannie\", \"Josephine\", \"Dora\", \"Rosa\", \"Katherine\", \"Agnes\", \"Marie\", \"Nora\", \"May\", \"Mamie\", \"Blanche\", \"Stella\", \"Ellen\", \"Nancy\", \"Effie\", \"Sallie\", \"Nettie\", \"Della\", \"Lizzie\", \"Flora\", \"Susie\", \"Maud\", \"Mae\", \"Etta\", \"Harriet\", \"Sadie\", \"Caroline\", \"Katie\", \"Lydia\", \"Elsie\", \"Kate\", \"Susan\", \"Mollie\", \"Alma\", \"Addie\", \"Georgia\", \"Eliza\", \"Lulu\", \"Nannie\", \"Lottie\", \"Amanda\", \"Belle\", \"Charlotte\", \"Rebecca\", \"Ruth\", \"Viola\", \"Olive\", \"Amelia\", \"Hannah\", \"Jane\", \"Virginia\", \"Emily\", \"Matilda\", \"Irene\", \"Kathryn\", \"Esther\", \"Willie\", \"Henrietta\", \"Ollie\", \"Amy\", \"Rachel\", \"Sara\", \"Estella\", \"Theresa\", \"Augusta\", \"Ora\", \"Pauline\", \"Josie\", \"Lola\", \"Sophia\", \"Leona\", \"Anne\", \"Mildred\", \"Ann\", \"Beulah\", \"Callie\", \"Lou\", \"Delia\", \"Eleanor\", \"Barbara\", \"Iva\", \"Louisa\", \"Maria\", \"Mayme\", \"Evelyn\", \"Estelle\", \"Nina\", \"Betty\", \"Marion\", \"Bettie\", \"Dorothy\", \"Luella\", \"Inez\", \"Lela\", \"Rosie\", \"Allie\", \"Millie\", \"Janie\", \"Cornelia\", \"Victoria\", \"Ruby\", \"Winifred\", \"Alta\", \"Celia\", \"Christine\", \"Beatrice\", \"Birdie\", \"Harriett\", \"Mable\", \"Myra\", \"Sophie\", \"Tillie\", \"Isabel\", \"Sylvia\", \"Carolyn\", \"Isabelle\", \"Leila\", \"Sally\", \"Ina\", \"Essie\", \"Bertie\", \"Nell\", \"Alberta\", \"Katharine\", \"Lora\", \"Rena\", \"Mina\", \"Rhoda\", \"Mathilda\", \"Abbie\", \"Eula\", \"Dollie\", \"Hettie\", \"Eunice\", \"Fanny\", \"Ola\", \"Lenora\", \"Adelaide\", \"Christina\", \"Lelia\", \"Nelle\", \"Sue\", \"Johanna\", \"Lilly\", \"Lucinda\", \"Minerva\", \"Lettie\", \"Roxie\", \"Cynthia\", \"Helena\", \"Hilda\", \"Hulda\", \"Bernice\", \"Genevieve\", \"Jean\", \"Cordelia\", \"Marian\", \"Francis\", \"Jeanette\", \"Adeline\", \"Gussie\", \"Leah\", \"Lois\", \"Lura\", \"Mittie\", \"Hallie\", \"Isabella\", \"Olga\", \"Phoebe\", \"Teresa\", \"Hester\", \"Lida\", \"Lina\", \"Winnie\", \"Claudia\", \"Marguerite\", \"Vera\", \"Cecelia\", \"Bess\", \"Emilie\", \"Rosetta\", \"Verna\", \"Myrtie\", \"Cecilia\", \"Elva\", \"Olivia\", \"Ophelia\", \"Georgie\", \"Elnora\", \"Violet\", \"Adele\", \"Lily\", \"Linnie\", \"Loretta\", \"Madge\", \"Polly\", \"Virgie\", \"Eugenia\", \"Lucile\", \"Lucille\", \"Mabelle\", \"Rosalie\"],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0162\n                \"it\": [\"Ada\", \"Adriana\", \"Alessandra\", \"Alessia\", \"Alice\", \"Angela\", \"Anna\", \"Anna Maria\", \"Annalisa\", \"Annita\", \"Annunziata\", \"Antonella\", \"Arianna\", \"Asia\", \"Assunta\", \"Aurora\", \"Barbara\", \"Beatrice\", \"Benedetta\", \"Bianca\", \"Bruna\", \"Camilla\", \"Carla\", \"Carlotta\", \"Carmela\", \"Carolina\", \"Caterina\", \"Catia\", \"Cecilia\", \"Chiara\", \"Cinzia\", \"Clara\", \"Claudia\", \"Costanza\", \"Cristina\", \"Daniela\", \"Debora\", \"Diletta\", \"Dina\", \"Donatella\", \"Elena\", \"Eleonora\", \"Elisa\", \"Elisabetta\", \"Emanuela\", \"Emma\", \"Eva\", \"Federica\", \"Fernanda\", \"Fiorella\", \"Fiorenza\", \"Flora\", \"Franca\", \"Francesca\", \"Gabriella\", \"Gaia\", \"Gemma\", \"Giada\", \"Gianna\", \"Gina\", \"Ginevra\", \"Giorgia\", \"Giovanna\", \"Giulia\", \"Giuliana\", \"Giuseppa\", \"Giuseppina\", \"Grazia\", \"Graziella\", \"Greta\", \"Ida\", \"Ilaria\", \"Ines\", \"Iolanda\", \"Irene\", \"Irma\", \"Isabella\", \"Jessica\", \"Laura\", \"Lea\", \"Letizia\", \"Licia\", \"Lidia\", \"Liliana\", \"Lina\", \"Linda\", \"Lisa\", \"Livia\", \"Loretta\", \"Luana\", \"Lucia\", \"Luciana\", \"Lucrezia\", \"Luisa\", \"Manuela\", \"Mara\", \"Marcella\", \"Margherita\", \"Maria\", \"Maria Cristina\", \"Maria Grazia\", \"Maria Luisa\", \"Maria Pia\", \"Maria Teresa\", \"Marina\", \"Marisa\", \"Marta\", \"Martina\", \"Marzia\", \"Matilde\", \"Melissa\", \"Michela\", \"Milena\", \"Mirella\", \"Monica\", \"Natalina\", \"Nella\", \"Nicoletta\", \"Noemi\", \"Olga\", \"Paola\", \"Patrizia\", \"Piera\", \"Pierina\", \"Raffaella\", \"Rebecca\", \"Renata\", \"Rina\", \"Rita\", \"Roberta\", \"Rosa\", \"Rosanna\", \"Rossana\", \"Rossella\", \"Sabrina\", \"Sandra\", \"Sara\", \"Serena\", \"Silvana\", \"Silvia\", \"Simona\", \"Simonetta\", \"Sofia\", \"Sonia\", \"Stefania\", \"Susanna\", \"Teresa\", \"Tina\", \"Tiziana\", \"Tosca\", \"Valentina\", \"Valeria\", \"Vanda\", \"Vanessa\", \"Vanna\", \"Vera\", \"Veronica\", \"Vilma\", \"Viola\", \"Virginia\", \"Vittoria\"],\n                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\n                \"nl\": [\"Ada\", \"Arianne\", \"Afke\", \"Amanda\", \"Amber\", \"Amy\", \"Aniek\", \"Anita\", \"Anja\", \"Anna\", \"Anne\", \"Annelies\", \"Annemarie\", \"Annette\", \"Anouk\", \"Astrid\", \"Aukje\", \"Barbara\", \"Bianca\", \"Carla\", \"Carlijn\", \"Carolien\", \"Chantal\", \"Charlotte\", \"Claudia\", \"Daniëlle\", \"Debora\", \"Diane\", \"Dora\", \"Eline\", \"Elise\", \"Ella\", \"Ellen\", \"Emma\", \"Esmee\", \"Evelien\", \"Esther\", \"Erica\", \"Eva\", \"Femke\", \"Fleur\", \"Floor\", \"Froukje\", \"Gea\", \"Gerda\", \"Hanna\", \"Hanneke\", \"Heleen\", \"Hilde\", \"Ilona\", \"Ina\", \"Inge\", \"Ingrid\", \"Iris\", \"Isabel\", \"Isabelle\", \"Janneke\", \"Jasmijn\", \"Jeanine\", \"Jennifer\", \"Jessica\", \"Johanna\", \"Joke\", \"Julia\", \"Julie\", \"Karen\", \"Karin\", \"Katja\", \"Kim\", \"Lara\", \"Laura\", \"Lena\", \"Lianne\", \"Lieke\", \"Lilian\", \"Linda\", \"Lisa\", \"Lisanne\", \"Lotte\", \"Louise\", \"Maaike\", \"Manon\", \"Marga\", \"Maria\", \"Marissa\", \"Marit\", \"Marjolein\", \"Martine\", \"Marleen\", \"Melissa\", \"Merel\", \"Miranda\", \"Michelle\", \"Mirjam\", \"Mirthe\", \"Naomi\", \"Natalie\", 'Nienke', \"Nina\", \"Noortje\", \"Olivia\", \"Patricia\", \"Paula\", \"Paulien\", \"Ramona\", \"Ria\", \"Rianne\", \"Roos\", \"Rosanne\", \"Ruth\", \"Sabrina\", \"Sandra\", \"Sanne\", \"Sara\", \"Saskia\", \"Silvia\", \"Sofia\", \"Sophie\", \"Sonja\", \"Suzanne\", \"Tamara\", \"Tess\", \"Tessa\", \"Tineke\", \"Valerie\", \"Vanessa\", \"Veerle\", \"Vera\", \"Victoria\", \"Wendy\", \"Willeke\", \"Yvonne\", \"Zoë\"],\n                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\n                \"fr\": [\"Abdon\",\"Abel\",\"Abigaëlle\",\"Abigaïl\",\"Acacius\",\"Acanthe\",\"Adalbert\",\"Adalsinde\",\"Adegrine\",\"Adélaïde\",\"Adèle\",\"Adélie\",\"Adeline\",\"Adeltrude\",\"Adolphe\",\"Adonis\",\"Adrastée\",\"Adrehilde\",\"Adrienne\",\"Agathe\",\"Agilbert\",\"Aglaé\",\"Aignan\",\"Agneflète\",\"Agnès\",\"Agrippine\",\"Aimé\",\"Alaine\",\"Alaïs\",\"Albane\",\"Albérade\",\"Alberte\",\"Alcide\",\"Alcine\",\"Alcyone\",\"Aldegonde\",\"Aleth\",\"Alexandrine\",\"Alexine\",\"Alice\",\"Aliénor\",\"Aliette\",\"Aline\",\"Alix\",\"Alizé\",\"Aloïse\",\"Aloyse\",\"Alphonsine\",\"Althée\",\"Amaliane\",\"Amalthée\",\"Amande\",\"Amandine\",\"Amant\",\"Amarande\",\"Amaranthe\",\"Amaryllis\",\"Ambre\",\"Ambroisie\",\"Amélie\",\"Améthyste\",\"Aminte\",\"Anaël\",\"Anaïs\",\"Anastasie\",\"Anatole\",\"Ancelin\",\"Andrée\",\"Anémone\",\"Angadrême\",\"Angèle\",\"Angeline\",\"Angélique\",\"Angilbert\",\"Anicet\",\"Annabelle\",\"Anne\",\"Annette\",\"Annick\",\"Annie\",\"Annonciade\",\"Ansbert\",\"Anstrudie\",\"Anthelme\",\"Antigone\",\"Antoinette\",\"Antonine\",\"Aphélie\",\"Apolline\",\"Apollonie\",\"Aquiline\",\"Arabelle\",\"Arcadie\",\"Archange\",\"Argine\",\"Ariane\",\"Aricie\",\"Ariel\",\"Arielle\",\"Arlette\",\"Armance\",\"Armande\",\"Armandine\",\"Armelle\",\"Armide\",\"Armelle\",\"Armin\",\"Arnaud\",\"Arsène\",\"Arsinoé\",\"Artémis\",\"Arthur\",\"Ascelin\",\"Ascension\",\"Assomption\",\"Astarté\",\"Astérie\",\"Astrée\",\"Astrid\",\"Athalie\",\"Athanasie\",\"Athina\",\"Aube\",\"Albert\",\"Aude\",\"Audrey\",\"Augustine\",\"Aure\",\"Aurélie\",\"Aurélien\",\"Aurèle\",\"Aurore\",\"Auxence\",\"Aveline\",\"Abigaëlle\",\"Avoye\",\"Axelle\",\"Aymard\",\"Azalée\",\"Adèle\",\"Adeline\",\"Barbe\",\"Basilisse\",\"Bathilde\",\"Béatrice\",\"Béatrix\",\"Bénédicte\",\"Bérengère\",\"Bernadette\",\"Berthe\",\"Bertille\",\"Beuve\",\"Blanche\",\"Blanc\",\"Blandine\",\"Brigitte\",\"Brune\",\"Brunehilde\",\"Callista\",\"Camille\",\"Capucine\",\"Carine\",\"Caroline\",\"Cassandre\",\"Catherine\",\"Cécile\",\"Céleste\",\"Célestine\",\"Céline\",\"Chantal\",\"Charlène\",\"Charline\",\"Charlotte\",\"Chloé\",\"Christelle\",\"Christiane\",\"Christine\",\"Claire\",\"Clara\",\"Claude\",\"Claudine\",\"Clarisse\",\"Clémence\",\"Clémentine\",\"Cléo\",\"Clio\",\"Clotilde\",\"Coline\",\"Conception\",\"Constance\",\"Coralie\",\"Coraline\",\"Corentine\",\"Corinne\",\"Cyrielle\",\"Daniel\",\"Daniel\",\"Daphné\",\"Débora\",\"Delphine\",\"Denise\",\"Diane\",\"Dieudonné\",\"Dominique\",\"Doriane\",\"Dorothée\",\"Douce\",\"Édith\",\"Edmée\",\"Éléonore\",\"Éliane\",\"Élia\",\"Éliette\",\"Élisabeth\",\"Élise\",\"Ella\",\"Élodie\",\"Éloïse\",\"Elsa\",\"Émeline\",\"Émérance\",\"Émérentienne\",\"Émérencie\",\"Émilie\",\"Emma\",\"Emmanuelle\",\"Emmelie\",\"Ernestine\",\"Esther\",\"Estelle\",\"Eudoxie\",\"Eugénie\",\"Eulalie\",\"Euphrasie\",\"Eusébie\",\"Évangéline\",\"Eva\",\"Ève\",\"Évelyne\",\"Fanny\",\"Fantine\",\"Faustine\",\"Félicie\",\"Fernande\",\"Flavie\",\"Fleur\",\"Flore\",\"Florence\",\"Florie\",\"Fortuné\",\"France\",\"Francia\",\"Françoise\",\"Francine\",\"Gabrielle\",\"Gaëlle\",\"Garance\",\"Geneviève\",\"Georgette\",\"Gerberge\",\"Germaine\",\"Gertrude\",\"Gisèle\",\"Guenièvre\",\"Guilhemine\",\"Guillemette\",\"Gustave\",\"Gwenael\",\"Hélène\",\"Héloïse\",\"Henriette\",\"Hermine\",\"Hermione\",\"Hippolyte\",\"Honorine\",\"Hortense\",\"Huguette\",\"Ines\",\"Irène\",\"Irina\",\"Iris\",\"Isabeau\",\"Isabelle\",\"Iseult\",\"Isolde\",\"Ismérie\",\"Jacinthe\",\"Jacqueline\",\"Jade\",\"Janine\",\"Jeanne\",\"Jocelyne\",\"Joëlle\",\"Joséphine\",\"Judith\",\"Julia\",\"Julie\",\"Jules\",\"Juliette\",\"Justine\",\"Katy\",\"Kathy\",\"Katie\",\"Laura\",\"Laure\",\"Laureline\",\"Laurence\",\"Laurene\",\"Lauriane\",\"Laurianne\",\"Laurine\",\"Léa\",\"Léna\",\"Léonie\",\"Léon\",\"Léontine\",\"Lorraine\",\"Lucie\",\"Lucienne\",\"Lucille\",\"Ludivine\",\"Lydie\",\"Lydie\",\"Megane\",\"Madeleine\",\"Magali\",\"Maguelone\",\"Mallaury\",\"Manon\",\"Marceline\",\"Margot\",\"Marguerite\",\"Marianne\",\"Marie\",\"Myriam\",\"Marie\",\"Marine\",\"Marion\",\"Marlène\",\"Marthe\",\"Martine\",\"Mathilde\",\"Maud\",\"Maureen\",\"Mauricette\",\"Maxime\",\"Mélanie\",\"Melissa\",\"Mélissandre\",\"Mélisande\",\"Mélodie\",\"Michel\",\"Micheline\",\"Mireille\",\"Miriam\",\"Moïse\",\"Monique\",\"Morgane\",\"Muriel\",\"Mylène\",\"Nadège\",\"Nadine\",\"Nathalie\",\"Nicole\",\"Nicolette\",\"Nine\",\"Noël\",\"Noémie\",\"Océane\",\"Odette\",\"Odile\",\"Olive\",\"Olivia\",\"Olympe\",\"Ombline\",\"Ombeline\",\"Ophélie\",\"Oriande\",\"Oriane\",\"Ozanne\",\"Pascale\",\"Pascaline\",\"Paule\",\"Paulette\",\"Pauline\",\"Priscille\",\"Prisca\",\"Prisque\",\"Pécine\",\"Pélagie\",\"Pénélope\",\"Perrine\",\"Pétronille\",\"Philippine\",\"Philomène\",\"Philothée\",\"Primerose\",\"Prudence\",\"Pulchérie\",\"Quentine\",\"Quiéta\",\"Quintia\",\"Quintilla\",\"Rachel\",\"Raphaëlle\",\"Raymonde\",\"Rebecca\",\"Régine\",\"Réjeanne\",\"René\",\"Rita\",\"Rita\",\"Rolande\",\"Romane\",\"Rosalie\",\"Rose\",\"Roseline\",\"Sabine\",\"Salomé\",\"Sandra\",\"Sandrine\",\"Sarah\",\"Ségolène\",\"Séverine\",\"Sibylle\",\"Simone\",\"Sixt\",\"Solange\",\"Soline\",\"Solène\",\"Sophie\",\"Stéphanie\",\"Suzanne\",\"Sylvain\",\"Sylvie\",\"Tatiana\",\"Thaïs\",\"Théodora\",\"Thérèse\",\"Tiphaine\",\"Ursule\",\"Valentine\",\"Valérie\",\"Véronique\",\"Victoire\",\"Victorine\",\"Vinciane\",\"Violette\",\"Virginie\",\"Viviane\",\"Xavière\",\"Yolande\",\"Ysaline\",\"Yvette\",\"Yvonne\",\"Zélie\",\"Zita\",\"Zoé\"]\n            }\n        },\n\n        lastNames: {\n            \"en\": ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0164 (first 1000)\n            \"it\": [\"Acciai\", \"Aglietti\", \"Agostini\", \"Agresti\", \"Ahmed\", \"Aiazzi\", \"Albanese\", \"Alberti\", \"Alessi\", \"Alfani\", \"Alinari\", \"Alterini\", \"Amato\", \"Ammannati\", \"Ancillotti\", \"Andrei\", \"Andreini\", \"Andreoni\", \"Angeli\", \"Anichini\", \"Antonelli\", \"Antonini\", \"Arena\", \"Ariani\", \"Arnetoli\", \"Arrighi\", \"Baccani\", \"Baccetti\", \"Bacci\", \"Bacherini\", \"Badii\", \"Baggiani\", \"Baglioni\", \"Bagni\", \"Bagnoli\", \"Baldassini\", \"Baldi\", \"Baldini\", \"Ballerini\", \"Balli\", \"Ballini\", \"Balloni\", \"Bambi\", \"Banchi\", \"Bandinelli\", \"Bandini\", \"Bani\", \"Barbetti\", \"Barbieri\", \"Barchielli\", \"Bardazzi\", \"Bardelli\", \"Bardi\", \"Barducci\", \"Bargellini\", \"Bargiacchi\", \"Barni\", \"Baroncelli\", \"Baroncini\", \"Barone\", \"Baroni\", \"Baronti\", \"Bartalesi\", \"Bartoletti\", \"Bartoli\", \"Bartolini\", \"Bartoloni\", \"Bartolozzi\", \"Basagni\", \"Basile\", \"Bassi\", \"Batacchi\", \"Battaglia\", \"Battaglini\", \"Bausi\", \"Becagli\", \"Becattini\", \"Becchi\", \"Becucci\", \"Bellandi\", \"Bellesi\", \"Belli\", \"Bellini\", \"Bellucci\", \"Bencini\", \"Benedetti\", \"Benelli\", \"Beni\", \"Benini\", \"Bensi\", \"Benucci\", \"Benvenuti\", \"Berlincioni\", \"Bernacchioni\", \"Bernardi\", \"Bernardini\", \"Berni\", \"Bernini\", \"Bertelli\", \"Berti\", \"Bertini\", \"Bessi\", \"Betti\", \"Bettini\", \"Biagi\", \"Biagini\", \"Biagioni\", \"Biagiotti\", \"Biancalani\", \"Bianchi\", \"Bianchini\", \"Bianco\", \"Biffoli\", \"Bigazzi\", \"Bigi\", \"Biliotti\", \"Billi\", \"Binazzi\", \"Bindi\", \"Bini\", \"Biondi\", \"Bizzarri\", \"Bocci\", \"Bogani\", \"Bolognesi\", \"Bonaiuti\", \"Bonanni\", \"Bonciani\", \"Boncinelli\", \"Bondi\", \"Bonechi\", \"Bongini\", \"Boni\", \"Bonini\", \"Borchi\", \"Boretti\", \"Borghi\", \"Borghini\", \"Borgioli\", \"Borri\", \"Borselli\", \"Boschi\", \"Bottai\", \"Bracci\", \"Braccini\", \"Brandi\", \"Braschi\", \"Bravi\", \"Brazzini\", \"Breschi\", \"Brilli\", \"Brizzi\", \"Brogelli\", \"Brogi\", \"Brogioni\", \"Brunelli\", \"Brunetti\", \"Bruni\", \"Bruno\", \"Brunori\", \"Bruschi\", \"Bucci\", \"Bucciarelli\", \"Buccioni\", \"Bucelli\", \"Bulli\", \"Burberi\", \"Burchi\", \"Burgassi\", \"Burroni\", \"Bussotti\", \"Buti\", \"Caciolli\", \"Caiani\", \"Calabrese\", \"Calamai\", \"Calamandrei\", \"Caldini\", \"Calo'\", \"Calonaci\", \"Calosi\", \"Calvelli\", \"Cambi\", \"Camiciottoli\", \"Cammelli\", \"Cammilli\", \"Campolmi\", \"Cantini\", \"Capanni\", \"Capecchi\", \"Caponi\", \"Cappelletti\", \"Cappelli\", \"Cappellini\", \"Cappugi\", \"Capretti\", \"Caputo\", \"Carbone\", \"Carboni\", \"Cardini\", \"Carlesi\", \"Carletti\", \"Carli\", \"Caroti\", \"Carotti\", \"Carrai\", \"Carraresi\", \"Carta\", \"Caruso\", \"Casalini\", \"Casati\", \"Caselli\", \"Casini\", \"Castagnoli\", \"Castellani\", \"Castelli\", \"Castellucci\", \"Catalano\", \"Catarzi\", \"Catelani\", \"Cavaciocchi\", \"Cavallaro\", \"Cavallini\", \"Cavicchi\", \"Cavini\", \"Ceccarelli\", \"Ceccatelli\", \"Ceccherelli\", \"Ceccherini\", \"Cecchi\", \"Cecchini\", \"Cecconi\", \"Cei\", \"Cellai\", \"Celli\", \"Cellini\", \"Cencetti\", \"Ceni\", \"Cenni\", \"Cerbai\", \"Cesari\", \"Ceseri\", \"Checcacci\", \"Checchi\", \"Checcucci\", \"Cheli\", \"Chellini\", \"Chen\", \"Cheng\", \"Cherici\", \"Cherubini\", \"Chiaramonti\", \"Chiarantini\", \"Chiarelli\", \"Chiari\", \"Chiarini\", \"Chiarugi\", \"Chiavacci\", \"Chiesi\", \"Chimenti\", \"Chini\", \"Chirici\", \"Chiti\", \"Ciabatti\", \"Ciampi\", \"Cianchi\", \"Cianfanelli\", \"Cianferoni\", \"Ciani\", \"Ciapetti\", \"Ciappi\", \"Ciardi\", \"Ciatti\", \"Cicali\", \"Ciccone\", \"Cinelli\", \"Cini\", \"Ciobanu\", \"Ciolli\", \"Cioni\", \"Cipriani\", \"Cirillo\", \"Cirri\", \"Ciucchi\", \"Ciuffi\", \"Ciulli\", \"Ciullini\", \"Clemente\", \"Cocchi\", \"Cognome\", \"Coli\", \"Collini\", \"Colombo\", \"Colzi\", \"Comparini\", \"Conforti\", \"Consigli\", \"Conte\", \"Conti\", \"Contini\", \"Coppini\", \"Coppola\", \"Corsi\", \"Corsini\", \"Corti\", \"Cortini\", \"Cosi\", \"Costa\", \"Costantini\", \"Costantino\", \"Cozzi\", \"Cresci\", \"Crescioli\", \"Cresti\", \"Crini\", \"Curradi\", \"D'Agostino\", \"D'Alessandro\", \"D'Amico\", \"D'Angelo\", \"Daddi\", \"Dainelli\", \"Dallai\", \"Danti\", \"Davitti\", \"De Angelis\", \"De Luca\", \"De Marco\", \"De Rosa\", \"De Santis\", \"De Simone\", \"De Vita\", \"Degl'Innocenti\", \"Degli Innocenti\", \"Dei\", \"Del Lungo\", \"Del Re\", \"Di Marco\", \"Di Stefano\", \"Dini\", \"Diop\", \"Dobre\", \"Dolfi\", \"Donati\", \"Dondoli\", \"Dong\", \"Donnini\", \"Ducci\", \"Dumitru\", \"Ermini\", \"Esposito\", \"Evangelisti\", \"Fabbri\", \"Fabbrini\", \"Fabbrizzi\", \"Fabbroni\", \"Fabbrucci\", \"Fabiani\", \"Facchini\", \"Faggi\", \"Fagioli\", \"Failli\", \"Faini\", \"Falciani\", \"Falcini\", \"Falcone\", \"Fallani\", \"Falorni\", \"Falsini\", \"Falugiani\", \"Fancelli\", \"Fanelli\", \"Fanetti\", \"Fanfani\", \"Fani\", \"Fantappie'\", \"Fantechi\", \"Fanti\", \"Fantini\", \"Fantoni\", \"Farina\", \"Fattori\", \"Favilli\", \"Fedi\", \"Fei\", \"Ferrante\", \"Ferrara\", \"Ferrari\", \"Ferraro\", \"Ferretti\", \"Ferri\", \"Ferrini\", \"Ferroni\", \"Fiaschi\", \"Fibbi\", \"Fiesoli\", \"Filippi\", \"Filippini\", \"Fini\", \"Fioravanti\", \"Fiore\", \"Fiorentini\", \"Fiorini\", \"Fissi\", \"Focardi\", \"Foggi\", \"Fontana\", \"Fontanelli\", \"Fontani\", \"Forconi\", \"Formigli\", \"Forte\", \"Forti\", \"Fortini\", \"Fossati\", \"Fossi\", \"Francalanci\", \"Franceschi\", \"Franceschini\", \"Franchi\", \"Franchini\", \"Franci\", \"Francini\", \"Francioni\", \"Franco\", \"Frassineti\", \"Frati\", \"Fratini\", \"Frilli\", \"Frizzi\", \"Frosali\", \"Frosini\", \"Frullini\", \"Fusco\", \"Fusi\", \"Gabbrielli\", \"Gabellini\", \"Gagliardi\", \"Galanti\", \"Galardi\", \"Galeotti\", \"Galletti\", \"Galli\", \"Gallo\", \"Gallori\", \"Gambacciani\", \"Gargani\", \"Garofalo\", \"Garuglieri\", \"Gashi\", \"Gasperini\", \"Gatti\", \"Gelli\", \"Gensini\", \"Gentile\", \"Gentili\", \"Geri\", \"Gerini\", \"Gheri\", \"Ghini\", \"Giachetti\", \"Giachi\", \"Giacomelli\", \"Gianassi\", \"Giani\", \"Giannelli\", \"Giannetti\", \"Gianni\", \"Giannini\", \"Giannoni\", \"Giannotti\", \"Giannozzi\", \"Gigli\", \"Giordano\", \"Giorgetti\", \"Giorgi\", \"Giovacchini\", \"Giovannelli\", \"Giovannetti\", \"Giovannini\", \"Giovannoni\", \"Giuliani\", \"Giunti\", \"Giuntini\", \"Giusti\", \"Gonnelli\", \"Goretti\", \"Gori\", \"Gradi\", \"Gramigni\", \"Grassi\", \"Grasso\", \"Graziani\", \"Grazzini\", \"Greco\", \"Grifoni\", \"Grillo\", \"Grimaldi\", \"Grossi\", \"Gualtieri\", \"Guarducci\", \"Guarino\", \"Guarnieri\", \"Guasti\", \"Guerra\", \"Guerri\", \"Guerrini\", \"Guidi\", \"Guidotti\", \"He\", \"Hoxha\", \"Hu\", \"Huang\", \"Iandelli\", \"Ignesti\", \"Innocenti\", \"Jin\", \"La Rosa\", \"Lai\", \"Landi\", \"Landini\", \"Lanini\", \"Lapi\", \"Lapini\", \"Lari\", \"Lascialfari\", \"Lastrucci\", \"Latini\", \"Lazzeri\", \"Lazzerini\", \"Lelli\", \"Lenzi\", \"Leonardi\", \"Leoncini\", \"Leone\", \"Leoni\", \"Lepri\", \"Li\", \"Liao\", \"Lin\", \"Linari\", \"Lippi\", \"Lisi\", \"Livi\", \"Lombardi\", \"Lombardini\", \"Lombardo\", \"Longo\", \"Lopez\", \"Lorenzi\", \"Lorenzini\", \"Lorini\", \"Lotti\", \"Lu\", \"Lucchesi\", \"Lucherini\", \"Lunghi\", \"Lupi\", \"Madiai\", \"Maestrini\", \"Maffei\", \"Maggi\", \"Maggini\", \"Magherini\", \"Magini\", \"Magnani\", \"Magnelli\", \"Magni\", \"Magnolfi\", \"Magrini\", \"Malavolti\", \"Malevolti\", \"Manca\", \"Mancini\", \"Manetti\", \"Manfredi\", \"Mangani\", \"Mannelli\", \"Manni\", \"Mannini\", \"Mannucci\", \"Manuelli\", \"Manzini\", \"Marcelli\", \"Marchese\", \"Marchetti\", \"Marchi\", \"Marchiani\", \"Marchionni\", \"Marconi\", \"Marcucci\", \"Margheri\", \"Mari\", \"Mariani\", \"Marilli\", \"Marinai\", \"Marinari\", \"Marinelli\", \"Marini\", \"Marino\", \"Mariotti\", \"Marsili\", \"Martelli\", \"Martinelli\", \"Martini\", \"Martino\", \"Marzi\", \"Masi\", \"Masini\", \"Masoni\", \"Massai\", \"Materassi\", \"Mattei\", \"Matteini\", \"Matteucci\", \"Matteuzzi\", \"Mattioli\", \"Mattolini\", \"Matucci\", \"Mauro\", \"Mazzanti\", \"Mazzei\", \"Mazzetti\", \"Mazzi\", \"Mazzini\", \"Mazzocchi\", \"Mazzoli\", \"Mazzoni\", \"Mazzuoli\", \"Meacci\", \"Mecocci\", \"Meini\", \"Melani\", \"Mele\", \"Meli\", \"Mengoni\", \"Menichetti\", \"Meoni\", \"Merlini\", \"Messeri\", \"Messina\", \"Meucci\", \"Miccinesi\", \"Miceli\", \"Micheli\", \"Michelini\", \"Michelozzi\", \"Migliori\", \"Migliorini\", \"Milani\", \"Miniati\", \"Misuri\", \"Monaco\", \"Montagnani\", \"Montagni\", \"Montanari\", \"Montelatici\", \"Monti\", \"Montigiani\", \"Montini\", \"Morandi\", \"Morandini\", \"Morelli\", \"Moretti\", \"Morganti\", \"Mori\", \"Morini\", \"Moroni\", \"Morozzi\", \"Mugnai\", \"Mugnaini\", \"Mustafa\", \"Naldi\", \"Naldini\", \"Nannelli\", \"Nanni\", \"Nannini\", \"Nannucci\", \"Nardi\", \"Nardini\", \"Nardoni\", \"Natali\", \"Ndiaye\", \"Nencetti\", \"Nencini\", \"Nencioni\", \"Neri\", \"Nesi\", \"Nesti\", \"Niccolai\", \"Niccoli\", \"Niccolini\", \"Nigi\", \"Nistri\", \"Nocentini\", \"Noferini\", \"Novelli\", \"Nucci\", \"Nuti\", \"Nutini\", \"Oliva\", \"Olivieri\", \"Olmi\", \"Orlandi\", \"Orlandini\", \"Orlando\", \"Orsini\", \"Ortolani\", \"Ottanelli\", \"Pacciani\", \"Pace\", \"Paci\", \"Pacini\", \"Pagani\", \"Pagano\", \"Paggetti\", \"Pagliai\", \"Pagni\", \"Pagnini\", \"Paladini\", \"Palagi\", \"Palchetti\", \"Palloni\", \"Palmieri\", \"Palumbo\", \"Pampaloni\", \"Pancani\", \"Pandolfi\", \"Pandolfini\", \"Panerai\", \"Panichi\", \"Paoletti\", \"Paoli\", \"Paolini\", \"Papi\", \"Papini\", \"Papucci\", \"Parenti\", \"Parigi\", \"Parisi\", \"Parri\", \"Parrini\", \"Pasquini\", \"Passeri\", \"Pecchioli\", \"Pecorini\", \"Pellegrini\", \"Pepi\", \"Perini\", \"Perrone\", \"Peruzzi\", \"Pesci\", \"Pestelli\", \"Petri\", \"Petrini\", \"Petrucci\", \"Pettini\", \"Pezzati\", \"Pezzatini\", \"Piani\", \"Piazza\", \"Piazzesi\", \"Piazzini\", \"Piccardi\", \"Picchi\", \"Piccini\", \"Piccioli\", \"Pieraccini\", \"Pieraccioni\", \"Pieralli\", \"Pierattini\", \"Pieri\", \"Pierini\", \"Pieroni\", \"Pietrini\", \"Pini\", \"Pinna\", \"Pinto\", \"Pinzani\", \"Pinzauti\", \"Piras\", \"Pisani\", \"Pistolesi\", \"Poggesi\", \"Poggi\", \"Poggiali\", \"Poggiolini\", \"Poli\", \"Pollastri\", \"Porciani\", \"Pozzi\", \"Pratellesi\", \"Pratesi\", \"Prosperi\", \"Pruneti\", \"Pucci\", \"Puccini\", \"Puccioni\", \"Pugi\", \"Pugliese\", \"Puliti\", \"Querci\", \"Quercioli\", \"Raddi\", \"Radu\", \"Raffaelli\", \"Ragazzini\", \"Ranfagni\", \"Ranieri\", \"Rastrelli\", \"Raugei\", \"Raveggi\", \"Renai\", \"Renzi\", \"Rettori\", \"Ricci\", \"Ricciardi\", \"Ridi\", \"Ridolfi\", \"Rigacci\", \"Righi\", \"Righini\", \"Rinaldi\", \"Risaliti\", \"Ristori\", \"Rizzo\", \"Rocchi\", \"Rocchini\", \"Rogai\", \"Romagnoli\", \"Romanelli\", \"Romani\", \"Romano\", \"Romei\", \"Romeo\", \"Romiti\", \"Romoli\", \"Romolini\", \"Rontini\", \"Rosati\", \"Roselli\", \"Rosi\", \"Rossetti\", \"Rossi\", \"Rossini\", \"Rovai\", \"Ruggeri\", \"Ruggiero\", \"Russo\", \"Sabatini\", \"Saccardi\", \"Sacchetti\", \"Sacchi\", \"Sacco\", \"Salerno\", \"Salimbeni\", \"Salucci\", \"Salvadori\", \"Salvestrini\", \"Salvi\", \"Salvini\", \"Sanesi\", \"Sani\", \"Sanna\", \"Santi\", \"Santini\", \"Santoni\", \"Santoro\", \"Santucci\", \"Sardi\", \"Sarri\", \"Sarti\", \"Sassi\", \"Sbolci\", \"Scali\", \"Scarpelli\", \"Scarselli\", \"Scopetani\", \"Secci\", \"Selvi\", \"Senatori\", \"Senesi\", \"Serafini\", \"Sereni\", \"Serra\", \"Sestini\", \"Sguanci\", \"Sieni\", \"Signorini\", \"Silvestri\", \"Simoncini\", \"Simonetti\", \"Simoni\", \"Singh\", \"Sodi\", \"Soldi\", \"Somigli\", \"Sorbi\", \"Sorelli\", \"Sorrentino\", \"Sottili\", \"Spina\", \"Spinelli\", \"Staccioli\", \"Staderini\", \"Stefanelli\", \"Stefani\", \"Stefanini\", \"Stella\", \"Susini\", \"Tacchi\", \"Tacconi\", \"Taddei\", \"Tagliaferri\", \"Tamburini\", \"Tanganelli\", \"Tani\", \"Tanini\", \"Tapinassi\", \"Tarchi\", \"Tarchiani\", \"Targioni\", \"Tassi\", \"Tassini\", \"Tempesti\", \"Terzani\", \"Tesi\", \"Testa\", \"Testi\", \"Tilli\", \"Tinti\", \"Tirinnanzi\", \"Toccafondi\", \"Tofanari\", \"Tofani\", \"Tognaccini\", \"Tonelli\", \"Tonini\", \"Torelli\", \"Torrini\", \"Tosi\", \"Toti\", \"Tozzi\", \"Trambusti\", \"Trapani\", \"Tucci\", \"Turchi\", \"Ugolini\", \"Ulivi\", \"Valente\", \"Valenti\", \"Valentini\", \"Vangelisti\", \"Vanni\", \"Vannini\", \"Vannoni\", \"Vannozzi\", \"Vannucchi\", \"Vannucci\", \"Ventura\", \"Venturi\", \"Venturini\", \"Vestri\", \"Vettori\", \"Vichi\", \"Viciani\", \"Vieri\", \"Vigiani\", \"Vignoli\", \"Vignolini\", \"Vignozzi\", \"Villani\", \"Vinci\", \"Visani\", \"Vitale\", \"Vitali\", \"Viti\", \"Viviani\", \"Vivoli\", \"Volpe\", \"Volpi\", \"Wang\", \"Wu\", \"Xu\", \"Yang\", \"Ye\", \"Zagli\", \"Zani\", \"Zanieri\", \"Zanobini\", \"Zecchi\", \"Zetti\", \"Zhang\", \"Zheng\", \"Zhou\", \"Zhu\", \"Zingoni\", \"Zini\", \"Zoppi\"],\n            // http://www.voornamelijk.nl/meest-voorkomende-achternamen-in-nederland-en-amsterdam/\n            \"nl\":[\"Albers\", \"Alblas\", \"Appelman\", \"Baars\", \"Baas\", \"Bakker\", \"Blank\", \"Bleeker\", \"Blok\", \"Blom\", \"Boer\", \"Boers\", \"Boldewijn\", \"Boon\", \"Boot\", \"Bos\", \"Bosch\", \"Bosma\", \"Bosman\", \"Bouma\", \"Bouman\", \"Bouwman\", \"Brands\", \"Brouwer\", \"Burger\", \"Buijs\", \"Buitenhuis\", \"Ceder\", \"Cohen\", \"Dekker\", \"Dekkers\", \"Dijkman\", \"Dijkstra\", \"Driessen\", \"Drost\", \"Engel\", \"Evers\", \"Faber\", \"Franke\", \"Gerritsen\", \"Goedhart\", \"Goossens\", \"Groen\", \"Groenenberg\", \"Groot\", \"Haan\", \"Hart\", \"Heemskerk\", \"Hendriks\", \"Hermans\", \"Hoekstra\", \"Hofman\", \"Hopman\", \"Huisman\", \"Jacobs\", \"Jansen\", \"Janssen\", \"Jonker\", \"Jaspers\", \"Keijzer\", \"Klaassen\", \"Klein\", \"Koek\", \"Koenders\", \"Kok\", \"Kool\", \"Koopman\", \"Koopmans\", \"Koning\", \"Koster\", \"Kramer\", \"Kroon\", \"Kuijpers\", \"Kuiper\", \"Kuipers\", \"Kurt\", \"Koster\", \"Kwakman\", \"Los\", \"Lubbers\", \"Maas\", \"Markus\", \"Martens\", \"Meijer\", \"Mol\", \"Molenaar\", \"Mulder\", \"Nieuwenhuis\", \"Peeters\", \"Peters\", \"Pengel\", \"Pieters\", \"Pool\", \"Post\", \"Postma\", \"Prins\", \"Pronk\", \"Reijnders\", \"Rietveld\", \"Roest\", \"Roos\", \"Sanders\", \"Schaap\", \"Scheffer\", \"Schenk\", \"Schilder\", \"Schipper\", \"Schmidt\", \"Scholten\", \"Schouten\", \"Schut\", \"Schutte\", \"Schuurman\", \"Simons\", \"Smeets\", \"Smit\", \"Smits\", \"Snel\", \"Swinkels\", \"Tas\", \"Terpstra\", \"Timmermans\", \"Tol\", \"Tromp\", \"Troost\", \"Valk\", \"Veenstra\", \"Veldkamp\", \"Verbeek\", \"Verheul\", \"Verhoeven\", \"Vermeer\", \"Vermeulen\", \"Verweij\", \"Vink\", \"Visser\", \"Voorn\", \"Vos\", \"Wagenaar\", \"Wiersema\", \"Willems\", \"Willemsen\", \"Witteveen\", \"Wolff\", \"Wolters\", \"Zijlstra\", \"Zwart\", \"de Beer\", \"de Boer\", \"de Bruijn\", \"de Bruin\", \"de Graaf\", \"de Groot\", \"de Haan\", \"de Haas\", \"de Jager\", \"de Jong\", \"de Jonge\", \"de Koning\", \"de Lange\", \"de Leeuw\", \"de Ridder\", \"de Rooij\", \"de Ruiter\", \"de Vos\", \"de Vries\", \"de Waal\", \"de Wit\", \"de Zwart\", \"van Beek\", \"van Boven\", \"van Dam\", \"van Dijk\", \"van Dongen\", \"van Doorn\", \"van Egmond\", \"van Eijk\", \"van Es\", \"van Gelder\", \"van Gelderen\", \"van Houten\", \"van Hulst\", \"van Kempen\", \"van Kesteren\", \"van Leeuwen\", \"van Loon\", \"van Mill\", \"van Noord\", \"van Ommen\", \"van Ommeren\", \"van Oosten\", \"van Oostveen\", \"van Rijn\", \"van Schaik\", \"van Veen\", \"van Vliet\", \"van Wijk\", \"van Wijngaarden\", \"van den Poel\", \"van de Pol\", \"van den Ploeg\", \"van de Ven\", \"van den Berg\", \"van den Bosch\", \"van den Brink\", \"van den Broek\", \"van den Heuvel\", \"van der Heijden\", \"van der Horst\", \"van der Hulst\", \"van der Kroon\", \"van der Laan\", \"van der Linden\", \"van der Meer\", \"van der Meij\", \"van der Meulen\", \"van der Molen\", \"van der Sluis\", \"van der Spek\", \"van der Veen\", \"van der Velde\", \"van der Velden\", \"van der Vliet\", \"van der Wal\"],\n            // https://surnames.behindthename.com/top/lists/england-wales/1991\n            \"uk\":[\"Smith\",\"Jones\",\"Williams\",\"Taylor\",\"Brown\",\"Davies\",\"Evans\",\"Wilson\",\"Thomas\",\"Johnson\",\"Roberts\",\"Robinson\",\"Thompson\",\"Wright\",\"Walker\",\"White\",\"Edwards\",\"Hughes\",\"Green\",\"Hall\",\"Lewis\",\"Harris\",\"Clarke\",\"Patel\",\"Jackson\",\"Wood\",\"Turner\",\"Martin\",\"Cooper\",\"Hill\",\"Ward\",\"Morris\",\"Moore\",\"Clark\",\"Lee\",\"King\",\"Baker\",\"Harrison\",\"Morgan\",\"Allen\",\"James\",\"Scott\",\"Phillips\",\"Watson\",\"Davis\",\"Parker\",\"Price\",\"Bennett\",\"Young\",\"Griffiths\",\"Mitchell\",\"Kelly\",\"Cook\",\"Carter\",\"Richardson\",\"Bailey\",\"Collins\",\"Bell\",\"Shaw\",\"Murphy\",\"Miller\",\"Cox\",\"Richards\",\"Khan\",\"Marshall\",\"Anderson\",\"Simpson\",\"Ellis\",\"Adams\",\"Singh\",\"Begum\",\"Wilkinson\",\"Foster\",\"Chapman\",\"Powell\",\"Webb\",\"Rogers\",\"Gray\",\"Mason\",\"Ali\",\"Hunt\",\"Hussain\",\"Campbell\",\"Matthews\",\"Owen\",\"Palmer\",\"Holmes\",\"Mills\",\"Barnes\",\"Knight\",\"Lloyd\",\"Butler\",\"Russell\",\"Barker\",\"Fisher\",\"Stevens\",\"Jenkins\",\"Murray\",\"Dixon\",\"Harvey\",\"Graham\",\"Pearson\",\"Ahmed\",\"Fletcher\",\"Walsh\",\"Kaur\",\"Gibson\",\"Howard\",\"Andrews\",\"Stewart\",\"Elliott\",\"Reynolds\",\"Saunders\",\"Payne\",\"Fox\",\"Ford\",\"Pearce\",\"Day\",\"Brooks\",\"West\",\"Lawrence\",\"Cole\",\"Atkinson\",\"Bradley\",\"Spencer\",\"Gill\",\"Dawson\",\"Ball\",\"Burton\",\"O'brien\",\"Watts\",\"Rose\",\"Booth\",\"Perry\",\"Ryan\",\"Grant\",\"Wells\",\"Armstrong\",\"Francis\",\"Rees\",\"Hayes\",\"Hart\",\"Hudson\",\"Newman\",\"Barrett\",\"Webster\",\"Hunter\",\"Gregory\",\"Carr\",\"Lowe\",\"Page\",\"Marsh\",\"Riley\",\"Dunn\",\"Woods\",\"Parsons\",\"Berry\",\"Stone\",\"Reid\",\"Holland\",\"Hawkins\",\"Harding\",\"Porter\",\"Robertson\",\"Newton\",\"Oliver\",\"Reed\",\"Kennedy\",\"Williamson\",\"Bird\",\"Gardner\",\"Shah\",\"Dean\",\"Lane\",\"Cooke\",\"Bates\",\"Henderson\",\"Parry\",\"Burgess\",\"Bishop\",\"Walton\",\"Burns\",\"Nicholson\",\"Shepherd\",\"Ross\",\"Cross\",\"Long\",\"Freeman\",\"Warren\",\"Nicholls\",\"Hamilton\",\"Byrne\",\"Sutton\",\"Mcdonald\",\"Yates\",\"Hodgson\",\"Robson\",\"Curtis\",\"Hopkins\",\"O'connor\",\"Harper\",\"Coleman\",\"Watkins\",\"Moss\",\"Mccarthy\",\"Chambers\",\"O'neill\",\"Griffin\",\"Sharp\",\"Hardy\",\"Wheeler\",\"Potter\",\"Osborne\",\"Johnston\",\"Gordon\",\"Doyle\",\"Wallace\",\"George\",\"Jordan\",\"Hutchinson\",\"Rowe\",\"Burke\",\"May\",\"Pritchard\",\"Gilbert\",\"Willis\",\"Higgins\",\"Read\",\"Miles\",\"Stevenson\",\"Stephenson\",\"Hammond\",\"Arnold\",\"Buckley\",\"Walters\",\"Hewitt\",\"Barber\",\"Nelson\",\"Slater\",\"Austin\",\"Sullivan\",\"Whitehead\",\"Mann\",\"Frost\",\"Lambert\",\"Stephens\",\"Blake\",\"Akhtar\",\"Lynch\",\"Goodwin\",\"Barton\",\"Woodward\",\"Thomson\",\"Cunningham\",\"Quinn\",\"Barnett\",\"Baxter\",\"Bibi\",\"Clayton\",\"Nash\",\"Greenwood\",\"Jennings\",\"Holt\",\"Kemp\",\"Poole\",\"Gallagher\",\"Bond\",\"Stokes\",\"Tucker\",\"Davidson\",\"Fowler\",\"Heath\",\"Norman\",\"Middleton\",\"Lawson\",\"Banks\",\"French\",\"Stanley\",\"Jarvis\",\"Gibbs\",\"Ferguson\",\"Hayward\",\"Carroll\",\"Douglas\",\"Dickinson\",\"Todd\",\"Barlow\",\"Peters\",\"Lucas\",\"Knowles\",\"Hartley\",\"Miah\",\"Simmons\",\"Morton\",\"Alexander\",\"Field\",\"Morrison\",\"Norris\",\"Townsend\",\"Preston\",\"Hancock\",\"Thornton\",\"Baldwin\",\"Burrows\",\"Briggs\",\"Parkinson\",\"Reeves\",\"Macdonald\",\"Lamb\",\"Black\",\"Abbott\",\"Sanders\",\"Thorpe\",\"Holden\",\"Tomlinson\",\"Perkins\",\"Ashton\",\"Rhodes\",\"Fuller\",\"Howe\",\"Bryant\",\"Vaughan\",\"Dale\",\"Davey\",\"Weston\",\"Bartlett\",\"Whittaker\",\"Davison\",\"Kent\",\"Skinner\",\"Birch\",\"Morley\",\"Daniels\",\"Glover\",\"Howell\",\"Cartwright\",\"Pugh\",\"Humphreys\",\"Goddard\",\"Brennan\",\"Wall\",\"Kirby\",\"Bowen\",\"Savage\",\"Bull\",\"Wong\",\"Dobson\",\"Smart\",\"Wilkins\",\"Kirk\",\"Fraser\",\"Duffy\",\"Hicks\",\"Patterson\",\"Bradshaw\",\"Little\",\"Archer\",\"Warner\",\"Waters\",\"O'sullivan\",\"Farrell\",\"Brookes\",\"Atkins\",\"Kay\",\"Dodd\",\"Bentley\",\"Flynn\",\"John\",\"Schofield\",\"Short\",\"Haynes\",\"Wade\",\"Butcher\",\"Henry\",\"Sanderson\",\"Crawford\",\"Sheppard\",\"Bolton\",\"Coates\",\"Giles\",\"Gould\",\"Houghton\",\"Gibbons\",\"Pratt\",\"Manning\",\"Law\",\"Hooper\",\"Noble\",\"Dyer\",\"Rahman\",\"Clements\",\"Moran\",\"Sykes\",\"Chan\",\"Doherty\",\"Connolly\",\"Joyce\",\"Franklin\",\"Hobbs\",\"Coles\",\"Herbert\",\"Steele\",\"Kerr\",\"Leach\",\"Winter\",\"Owens\",\"Duncan\",\"Naylor\",\"Fleming\",\"Horton\",\"Finch\",\"Fitzgerald\",\"Randall\",\"Carpenter\",\"Marsden\",\"Browne\",\"Garner\",\"Pickering\",\"Hale\",\"Dennis\",\"Vincent\",\"Chadwick\",\"Chandler\",\"Sharpe\",\"Nolan\",\"Lyons\",\"Hurst\",\"Collier\",\"Peacock\",\"Howarth\",\"Faulkner\",\"Rice\",\"Pollard\",\"Welch\",\"Norton\",\"Gough\",\"Sinclair\",\"Blackburn\",\"Bryan\",\"Conway\",\"Power\",\"Cameron\",\"Daly\",\"Allan\",\"Hanson\",\"Gardiner\",\"Boyle\",\"Myers\",\"Turnbull\",\"Wallis\",\"Mahmood\",\"Sims\",\"Swift\",\"Iqbal\",\"Pope\",\"Brady\",\"Chamberlain\",\"Rowley\",\"Tyler\",\"Farmer\",\"Metcalfe\",\"Hilton\",\"Godfrey\",\"Holloway\",\"Parkin\",\"Bray\",\"Talbot\",\"Donnelly\",\"Nixon\",\"Charlton\",\"Benson\",\"Whitehouse\",\"Barry\",\"Hope\",\"Lord\",\"North\",\"Storey\",\"Connor\",\"Potts\",\"Bevan\",\"Hargreaves\",\"Mclean\",\"Mistry\",\"Bruce\",\"Howells\",\"Hyde\",\"Parkes\",\"Wyatt\",\"Fry\",\"Lees\",\"O'donnell\",\"Craig\",\"Forster\",\"Mckenzie\",\"Humphries\",\"Mellor\",\"Carey\",\"Ingram\",\"Summers\",\"Leonard\"],\n            // https://surnames.behindthename.com/top/lists/germany/2017\n            \"de\": [\"Müller\",\"Schmidt\",\"Schneider\",\"Fischer\",\"Weber\",\"Meyer\",\"Wagner\",\"Becker\",\"Schulz\",\"Hoffmann\",\"Schäfer\",\"Koch\",\"Bauer\",\"Richter\",\"Klein\",\"Wolf\",\"Schröder\",\"Neumann\",\"Schwarz\",\"Zimmermann\",\"Braun\",\"Krüger\",\"Hofmann\",\"Hartmann\",\"Lange\",\"Schmitt\",\"Werner\",\"Schmitz\",\"Krause\",\"Meier\",\"Lehmann\",\"Schmid\",\"Schulze\",\"Maier\",\"Köhler\",\"Herrmann\",\"König\",\"Walter\",\"Mayer\",\"Huber\",\"Kaiser\",\"Fuchs\",\"Peters\",\"Lang\",\"Scholz\",\"Möller\",\"Weiß\",\"Jung\",\"Hahn\",\"Schubert\",\"Vogel\",\"Friedrich\",\"Keller\",\"Günther\",\"Frank\",\"Berger\",\"Winkler\",\"Roth\",\"Beck\",\"Lorenz\",\"Baumann\",\"Franke\",\"Albrecht\",\"Schuster\",\"Simon\",\"Ludwig\",\"Böhm\",\"Winter\",\"Kraus\",\"Martin\",\"Schumacher\",\"Krämer\",\"Vogt\",\"Stein\",\"Jäger\",\"Otto\",\"Sommer\",\"Groß\",\"Seidel\",\"Heinrich\",\"Brandt\",\"Haas\",\"Schreiber\",\"Graf\",\"Schulte\",\"Dietrich\",\"Ziegler\",\"Kuhn\",\"Kühn\",\"Pohl\",\"Engel\",\"Horn\",\"Busch\",\"Bergmann\",\"Thomas\",\"Voigt\",\"Sauer\",\"Arnold\",\"Wolff\",\"Pfeiffer\"],\n            // http://www.japantimes.co.jp/life/2009/10/11/lifestyle/japans-top-100-most-common-family-names/\n            \"jp\": [\"Sato\",\"Suzuki\",\"Takahashi\",\"Tanaka\",\"Watanabe\",\"Ito\",\"Yamamoto\",\"Nakamura\",\"Kobayashi\",\"Kato\",\"Yoshida\",\"Yamada\",\"Sasaki\",\"Yamaguchi\",\"Saito\",\"Matsumoto\",\"Inoue\",\"Kimura\",\"Hayashi\",\"Shimizu\",\"Yamazaki\",\"Mori\",\"Abe\",\"Ikeda\",\"Hashimoto\",\"Yamashita\",\"Ishikawa\",\"Nakajima\",\"Maeda\",\"Fujita\",\"Ogawa\",\"Goto\",\"Okada\",\"Hasegawa\",\"Murakami\",\"Kondo\",\"Ishii\",\"Saito\",\"Sakamoto\",\"Endo\",\"Aoki\",\"Fujii\",\"Nishimura\",\"Fukuda\",\"Ota\",\"Miura\",\"Fujiwara\",\"Okamoto\",\"Matsuda\",\"Nakagawa\",\"Nakano\",\"Harada\",\"Ono\",\"Tamura\",\"Takeuchi\",\"Kaneko\",\"Wada\",\"Nakayama\",\"Ishida\",\"Ueda\",\"Morita\",\"Hara\",\"Shibata\",\"Sakai\",\"Kudo\",\"Yokoyama\",\"Miyazaki\",\"Miyamoto\",\"Uchida\",\"Takagi\",\"Ando\",\"Taniguchi\",\"Ohno\",\"Maruyama\",\"Imai\",\"Takada\",\"Fujimoto\",\"Takeda\",\"Murata\",\"Ueno\",\"Sugiyama\",\"Masuda\",\"Sugawara\",\"Hirano\",\"Kojima\",\"Otsuka\",\"Chiba\",\"Kubo\",\"Matsui\",\"Iwasaki\",\"Sakurai\",\"Kinoshita\",\"Noguchi\",\"Matsuo\",\"Nomura\",\"Kikuchi\",\"Sano\",\"Onishi\",\"Sugimoto\",\"Arai\"],\n            // http://www.lowchensaustralia.com/names/popular-spanish-names.htm\n            \"es\": [\"Garcia\",\"Fernandez\",\"Lopez\",\"Martinez\",\"Gonzalez\",\"Rodriguez\",\"Sanchez\",\"Perez\",\"Martin\",\"Gomez\",\"Ruiz\",\"Diaz\",\"Hernandez\",\"Alvarez\",\"Jimenez\",\"Moreno\",\"Munoz\",\"Alonso\",\"Romero\",\"Navarro\",\"Gutierrez\",\"Torres\",\"Dominguez\",\"Gil\",\"Vazquez\",\"Blanco\",\"Serrano\",\"Ramos\",\"Castro\",\"Suarez\",\"Sanz\",\"Rubio\",\"Ortega\",\"Molina\",\"Delgado\",\"Ortiz\",\"Morales\",\"Ramirez\",\"Marin\",\"Iglesias\",\"Santos\",\"Castillo\",\"Garrido\",\"Calvo\",\"Pena\",\"Cruz\",\"Cano\",\"Nunez\",\"Prieto\",\"Diez\",\"Lozano\",\"Vidal\",\"Pascual\",\"Ferrer\",\"Medina\",\"Vega\",\"Leon\",\"Herrero\",\"Vicente\",\"Mendez\",\"Guerrero\",\"Fuentes\",\"Campos\",\"Nieto\",\"Cortes\",\"Caballero\",\"Ibanez\",\"Lorenzo\",\"Pastor\",\"Gimenez\",\"Saez\",\"Soler\",\"Marquez\",\"Carrasco\",\"Herrera\",\"Montero\",\"Arias\",\"Crespo\",\"Flores\",\"Andres\",\"Aguilar\",\"Hidalgo\",\"Cabrera\",\"Mora\",\"Duran\",\"Velasco\",\"Rey\",\"Pardo\",\"Roman\",\"Vila\",\"Bravo\",\"Merino\",\"Moya\",\"Soto\",\"Izquierdo\",\"Reyes\",\"Redondo\",\"Marcos\",\"Carmona\",\"Menendez\"],\n            // Data taken from https://fr.wikipedia.org/wiki/Liste_des_noms_de_famille_les_plus_courants_en_France\n            \"fr\": [\"Martin\",\"Bernard\",\"Thomas\",\"Petit\",\"Robert\",\"Richard\",\"Durand\",\"Dubois\",\"Moreau\",\"Laurent\",\"Simon\",\"Michel\",\"Lefèvre\",\"Leroy\",\"Roux\",\"David\",\"Bertrand\",\"Morel\",\"Fournier\",\"Girard\",\"Bonnet\",\"Dupont\",\"Lambert\",\"Fontaine\",\"Rousseau\",\"Vincent\",\"Müller\",\"Lefèvre\",\"Faure\",\"André\",\"Mercier\",\"Blanc\",\"Guérin\",\"Boyer\",\"Garnier\",\"Chevalier\",\"François\",\"Legrand\",\"Gauthier\",\"Garcia\",\"Perrin\",\"Robin\",\"Clément\",\"Morin\",\"Nicolas\",\"Henry\",\"Roussel\",\"Matthieu\",\"Gautier\",\"Masson\",\"Marchand\",\"Duval\",\"Denis\",\"Dumont\",\"Marie\",\"Lemaire\",\"Noël\",\"Meyer\",\"Dufour\",\"Meunier\",\"Brun\",\"Blanchard\",\"Giraud\",\"Joly\",\"Rivière\",\"Lucas\",\"Brunet\",\"Gaillard\",\"Barbier\",\"Arnaud\",\"Martínez\",\"Gérard\",\"Roche\",\"Renard\",\"Schmitt\",\"Roy\",\"Leroux\",\"Colin\",\"Vidal\",\"Caron\",\"Picard\",\"Roger\",\"Fabre\",\"Aubert\",\"Lemoine\",\"Renaud\",\"Dumas\",\"Lacroix\",\"Olivier\",\"Philippe\",\"Bourgeois\",\"Pierre\",\"Benoît\",\"Rey\",\"Leclerc\",\"Payet\",\"Rolland\",\"Leclercq\",\"Guillaume\",\"Lecomte\",\"López\",\"Jean\",\"Dupuy\",\"Guillot\",\"Hubert\",\"Berger\",\"Carpentier\",\"Sánchez\",\"Dupuis\",\"Moulin\",\"Louis\",\"Deschamps\",\"Huet\",\"Vasseur\",\"Perez\",\"Boucher\",\"Fleury\",\"Royer\",\"Klein\",\"Jacquet\",\"Adam\",\"Paris\",\"Poirier\",\"Marty\",\"Aubry\",\"Guyot\",\"Carré\",\"Charles\",\"Renault\",\"Charpentier\",\"Ménard\",\"Maillard\",\"Baron\",\"Bertin\",\"Bailly\",\"Hervé\",\"Schneider\",\"Fernández\",\"Le GallGall\",\"Collet\",\"Léger\",\"Bouvier\",\"Julien\",\"Prévost\",\"Millet\",\"Perrot\",\"Daniel\",\"Le RouxRoux\",\"Cousin\",\"Germain\",\"Breton\",\"Besson\",\"Langlois\",\"Rémi\",\"Le GoffGoff\",\"Pelletier\",\"Lévêque\",\"Perrier\",\"Leblanc\",\"Barré\",\"Lebrun\",\"Marchal\",\"Weber\",\"Mallet\",\"Hamon\",\"Boulanger\",\"Jacob\",\"Monnier\",\"Michaud\",\"Rodríguez\",\"Guichard\",\"Gillet\",\"Étienne\",\"Grondin\",\"Poulain\",\"Tessier\",\"Chevallier\",\"Collin\",\"Chauvin\",\"Da SilvaSilva\",\"Bouchet\",\"Gay\",\"Lemaître\",\"Bénard\",\"Maréchal\",\"Humbert\",\"Reynaud\",\"Antoine\",\"Hoarau\",\"Perret\",\"Barthélemy\",\"Cordier\",\"Pichon\",\"Lejeune\",\"Gilbert\",\"Lamy\",\"Delaunay\",\"Pasquier\",\"Carlier\",\"LaporteLaporte\"]\n        },\n\n        // Data taken from http://geoportal.statistics.gov.uk/datasets/ons-postcode-directory-latest-centroids\n        postcodeAreas: [{code: 'AB'}, {code: 'AL'}, {code: 'B'}, {code: 'BA'}, {code: 'BB'}, {code: 'BD'}, {code: 'BH'}, {code: 'BL'}, {code: 'BN'}, {code: 'BR'}, {code: 'BS'}, {code: 'BT'}, {code: 'CA'}, {code: 'CB'}, {code: 'CF'}, {code: 'CH'}, {code: 'CM'}, {code: 'CO'}, {code: 'CR'}, {code: 'CT'}, {code: 'CV'}, {code: 'CW'}, {code: 'DA'}, {code: 'DD'}, {code: 'DE'}, {code: 'DG'}, {code: 'DH'}, {code: 'DL'}, {code: 'DN'}, {code: 'DT'}, {code: 'DY'}, {code: 'E'}, {code: 'EC'}, {code: 'EH'}, {code: 'EN'}, {code: 'EX'}, {code: 'FK'}, {code: 'FY'}, {code: 'G'}, {code: 'GL'}, {code: 'GU'}, {code: 'GY'}, {code: 'HA'}, {code: 'HD'}, {code: 'HG'}, {code: 'HP'}, {code: 'HR'}, {code: 'HS'}, {code: 'HU'}, {code: 'HX'}, {code: 'IG'}, {code: 'IM'}, {code: 'IP'}, {code: 'IV'}, {code: 'JE'}, {code: 'KA'}, {code: 'KT'}, {code: 'KW'}, {code: 'KY'}, {code: 'L'}, {code: 'LA'}, {code: 'LD'}, {code: 'LE'}, {code: 'LL'}, {code: 'LN'}, {code: 'LS'}, {code: 'LU'}, {code: 'M'}, {code: 'ME'}, {code: 'MK'}, {code: 'ML'}, {code: 'N'}, {code: 'NE'}, {code: 'NG'}, {code: 'NN'}, {code: 'NP'}, {code: 'NR'}, {code: 'NW'}, {code: 'OL'}, {code: 'OX'}, {code: 'PA'}, {code: 'PE'}, {code: 'PH'}, {code: 'PL'}, {code: 'PO'}, {code: 'PR'}, {code: 'RG'}, {code: 'RH'}, {code: 'RM'}, {code: 'S'}, {code: 'SA'}, {code: 'SE'}, {code: 'SG'}, {code: 'SK'}, {code: 'SL'}, {code: 'SM'}, {code: 'SN'}, {code: 'SO'}, {code: 'SP'}, {code: 'SR'}, {code: 'SS'}, {code: 'ST'}, {code: 'SW'}, {code: 'SY'}, {code: 'TA'}, {code: 'TD'}, {code: 'TF'}, {code: 'TN'}, {code: 'TQ'}, {code: 'TR'}, {code: 'TS'}, {code: 'TW'}, {code: 'UB'}, {code: 'W'}, {code: 'WA'}, {code: 'WC'}, {code: 'WD'}, {code: 'WF'}, {code: 'WN'}, {code: 'WR'}, {code: 'WS'}, {code: 'WV'}, {code: 'YO'}, {code: 'ZE'}],\n\n        // Data taken from https://github.com/umpirsky/country-list/blob/master/data/en_US/country.json\n        countries: [{\"name\":\"Afghanistan\",\"abbreviation\":\"AF\"},{\"name\":\"Åland Islands\",\"abbreviation\":\"AX\"},{\"name\":\"Albania\",\"abbreviation\":\"AL\"},{\"name\":\"Algeria\",\"abbreviation\":\"DZ\"},{\"name\":\"American Samoa\",\"abbreviation\":\"AS\"},{\"name\":\"Andorra\",\"abbreviation\":\"AD\"},{\"name\":\"Angola\",\"abbreviation\":\"AO\"},{\"name\":\"Anguilla\",\"abbreviation\":\"AI\"},{\"name\":\"Antarctica\",\"abbreviation\":\"AQ\"},{\"name\":\"Antigua & Barbuda\",\"abbreviation\":\"AG\"},{\"name\":\"Argentina\",\"abbreviation\":\"AR\"},{\"name\":\"Armenia\",\"abbreviation\":\"AM\"},{\"name\":\"Aruba\",\"abbreviation\":\"AW\"},{\"name\":\"Ascension Island\",\"abbreviation\":\"AC\"},{\"name\":\"Australia\",\"abbreviation\":\"AU\"},{\"name\":\"Austria\",\"abbreviation\":\"AT\"},{\"name\":\"Azerbaijan\",\"abbreviation\":\"AZ\"},{\"name\":\"Bahamas\",\"abbreviation\":\"BS\"},{\"name\":\"Bahrain\",\"abbreviation\":\"BH\"},{\"name\":\"Bangladesh\",\"abbreviation\":\"BD\"},{\"name\":\"Barbados\",\"abbreviation\":\"BB\"},{\"name\":\"Belarus\",\"abbreviation\":\"BY\"},{\"name\":\"Belgium\",\"abbreviation\":\"BE\"},{\"name\":\"Belize\",\"abbreviation\":\"BZ\"},{\"name\":\"Benin\",\"abbreviation\":\"BJ\"},{\"name\":\"Bermuda\",\"abbreviation\":\"BM\"},{\"name\":\"Bhutan\",\"abbreviation\":\"BT\"},{\"name\":\"Bolivia\",\"abbreviation\":\"BO\"},{\"name\":\"Bosnia & Herzegovina\",\"abbreviation\":\"BA\"},{\"name\":\"Botswana\",\"abbreviation\":\"BW\"},{\"name\":\"Brazil\",\"abbreviation\":\"BR\"},{\"name\":\"British Indian Ocean Territory\",\"abbreviation\":\"IO\"},{\"name\":\"British Virgin Islands\",\"abbreviation\":\"VG\"},{\"name\":\"Brunei\",\"abbreviation\":\"BN\"},{\"name\":\"Bulgaria\",\"abbreviation\":\"BG\"},{\"name\":\"Burkina Faso\",\"abbreviation\":\"BF\"},{\"name\":\"Burundi\",\"abbreviation\":\"BI\"},{\"name\":\"Cambodia\",\"abbreviation\":\"KH\"},{\"name\":\"Cameroon\",\"abbreviation\":\"CM\"},{\"name\":\"Canada\",\"abbreviation\":\"CA\"},{\"name\":\"Canary Islands\",\"abbreviation\":\"IC\"},{\"name\":\"Cape Verde\",\"abbreviation\":\"CV\"},{\"name\":\"Caribbean Netherlands\",\"abbreviation\":\"BQ\"},{\"name\":\"Cayman Islands\",\"abbreviation\":\"KY\"},{\"name\":\"Central African Republic\",\"abbreviation\":\"CF\"},{\"name\":\"Ceuta & Melilla\",\"abbreviation\":\"EA\"},{\"name\":\"Chad\",\"abbreviation\":\"TD\"},{\"name\":\"Chile\",\"abbreviation\":\"CL\"},{\"name\":\"China\",\"abbreviation\":\"CN\"},{\"name\":\"Christmas Island\",\"abbreviation\":\"CX\"},{\"name\":\"Cocos (Keeling) Islands\",\"abbreviation\":\"CC\"},{\"name\":\"Colombia\",\"abbreviation\":\"CO\"},{\"name\":\"Comoros\",\"abbreviation\":\"KM\"},{\"name\":\"Congo - Brazzaville\",\"abbreviation\":\"CG\"},{\"name\":\"Congo - Kinshasa\",\"abbreviation\":\"CD\"},{\"name\":\"Cook Islands\",\"abbreviation\":\"CK\"},{\"name\":\"Costa Rica\",\"abbreviation\":\"CR\"},{\"name\":\"Côte d'Ivoire\",\"abbreviation\":\"CI\"},{\"name\":\"Croatia\",\"abbreviation\":\"HR\"},{\"name\":\"Cuba\",\"abbreviation\":\"CU\"},{\"name\":\"Curaçao\",\"abbreviation\":\"CW\"},{\"name\":\"Cyprus\",\"abbreviation\":\"CY\"},{\"name\":\"Czech Republic\",\"abbreviation\":\"CZ\"},{\"name\":\"Denmark\",\"abbreviation\":\"DK\"},{\"name\":\"Diego Garcia\",\"abbreviation\":\"DG\"},{\"name\":\"Djibouti\",\"abbreviation\":\"DJ\"},{\"name\":\"Dominica\",\"abbreviation\":\"DM\"},{\"name\":\"Dominican Republic\",\"abbreviation\":\"DO\"},{\"name\":\"Ecuador\",\"abbreviation\":\"EC\"},{\"name\":\"Egypt\",\"abbreviation\":\"EG\"},{\"name\":\"El Salvador\",\"abbreviation\":\"SV\"},{\"name\":\"Equatorial Guinea\",\"abbreviation\":\"GQ\"},{\"name\":\"Eritrea\",\"abbreviation\":\"ER\"},{\"name\":\"Estonia\",\"abbreviation\":\"EE\"},{\"name\":\"Ethiopia\",\"abbreviation\":\"ET\"},{\"name\":\"Falkland Islands\",\"abbreviation\":\"FK\"},{\"name\":\"Faroe Islands\",\"abbreviation\":\"FO\"},{\"name\":\"Fiji\",\"abbreviation\":\"FJ\"},{\"name\":\"Finland\",\"abbreviation\":\"FI\"},{\"name\":\"France\",\"abbreviation\":\"FR\"},{\"name\":\"French Guiana\",\"abbreviation\":\"GF\"},{\"name\":\"French Polynesia\",\"abbreviation\":\"PF\"},{\"name\":\"French Southern Territories\",\"abbreviation\":\"TF\"},{\"name\":\"Gabon\",\"abbreviation\":\"GA\"},{\"name\":\"Gambia\",\"abbreviation\":\"GM\"},{\"name\":\"Georgia\",\"abbreviation\":\"GE\"},{\"name\":\"Germany\",\"abbreviation\":\"DE\"},{\"name\":\"Ghana\",\"abbreviation\":\"GH\"},{\"name\":\"Gibraltar\",\"abbreviation\":\"GI\"},{\"name\":\"Greece\",\"abbreviation\":\"GR\"},{\"name\":\"Greenland\",\"abbreviation\":\"GL\"},{\"name\":\"Grenada\",\"abbreviation\":\"GD\"},{\"name\":\"Guadeloupe\",\"abbreviation\":\"GP\"},{\"name\":\"Guam\",\"abbreviation\":\"GU\"},{\"name\":\"Guatemala\",\"abbreviation\":\"GT\"},{\"name\":\"Guernsey\",\"abbreviation\":\"GG\"},{\"name\":\"Guinea\",\"abbreviation\":\"GN\"},{\"name\":\"Guinea-Bissau\",\"abbreviation\":\"GW\"},{\"name\":\"Guyana\",\"abbreviation\":\"GY\"},{\"name\":\"Haiti\",\"abbreviation\":\"HT\"},{\"name\":\"Honduras\",\"abbreviation\":\"HN\"},{\"name\":\"Hong Kong SAR China\",\"abbreviation\":\"HK\"},{\"name\":\"Hungary\",\"abbreviation\":\"HU\"},{\"name\":\"Iceland\",\"abbreviation\":\"IS\"},{\"name\":\"India\",\"abbreviation\":\"IN\"},{\"name\":\"Indonesia\",\"abbreviation\":\"ID\"},{\"name\":\"Iran\",\"abbreviation\":\"IR\"},{\"name\":\"Iraq\",\"abbreviation\":\"IQ\"},{\"name\":\"Ireland\",\"abbreviation\":\"IE\"},{\"name\":\"Isle of Man\",\"abbreviation\":\"IM\"},{\"name\":\"Israel\",\"abbreviation\":\"IL\"},{\"name\":\"Italy\",\"abbreviation\":\"IT\"},{\"name\":\"Jamaica\",\"abbreviation\":\"JM\"},{\"name\":\"Japan\",\"abbreviation\":\"JP\"},{\"name\":\"Jersey\",\"abbreviation\":\"JE\"},{\"name\":\"Jordan\",\"abbreviation\":\"JO\"},{\"name\":\"Kazakhstan\",\"abbreviation\":\"KZ\"},{\"name\":\"Kenya\",\"abbreviation\":\"KE\"},{\"name\":\"Kiribati\",\"abbreviation\":\"KI\"},{\"name\":\"Kosovo\",\"abbreviation\":\"XK\"},{\"name\":\"Kuwait\",\"abbreviation\":\"KW\"},{\"name\":\"Kyrgyzstan\",\"abbreviation\":\"KG\"},{\"name\":\"Laos\",\"abbreviation\":\"LA\"},{\"name\":\"Latvia\",\"abbreviation\":\"LV\"},{\"name\":\"Lebanon\",\"abbreviation\":\"LB\"},{\"name\":\"Lesotho\",\"abbreviation\":\"LS\"},{\"name\":\"Liberia\",\"abbreviation\":\"LR\"},{\"name\":\"Libya\",\"abbreviation\":\"LY\"},{\"name\":\"Liechtenstein\",\"abbreviation\":\"LI\"},{\"name\":\"Lithuania\",\"abbreviation\":\"LT\"},{\"name\":\"Luxembourg\",\"abbreviation\":\"LU\"},{\"name\":\"Macau SAR China\",\"abbreviation\":\"MO\"},{\"name\":\"Macedonia\",\"abbreviation\":\"MK\"},{\"name\":\"Madagascar\",\"abbreviation\":\"MG\"},{\"name\":\"Malawi\",\"abbreviation\":\"MW\"},{\"name\":\"Malaysia\",\"abbreviation\":\"MY\"},{\"name\":\"Maldives\",\"abbreviation\":\"MV\"},{\"name\":\"Mali\",\"abbreviation\":\"ML\"},{\"name\":\"Malta\",\"abbreviation\":\"MT\"},{\"name\":\"Marshall Islands\",\"abbreviation\":\"MH\"},{\"name\":\"Martinique\",\"abbreviation\":\"MQ\"},{\"name\":\"Mauritania\",\"abbreviation\":\"MR\"},{\"name\":\"Mauritius\",\"abbreviation\":\"MU\"},{\"name\":\"Mayotte\",\"abbreviation\":\"YT\"},{\"name\":\"Mexico\",\"abbreviation\":\"MX\"},{\"name\":\"Micronesia\",\"abbreviation\":\"FM\"},{\"name\":\"Moldova\",\"abbreviation\":\"MD\"},{\"name\":\"Monaco\",\"abbreviation\":\"MC\"},{\"name\":\"Mongolia\",\"abbreviation\":\"MN\"},{\"name\":\"Montenegro\",\"abbreviation\":\"ME\"},{\"name\":\"Montserrat\",\"abbreviation\":\"MS\"},{\"name\":\"Morocco\",\"abbreviation\":\"MA\"},{\"name\":\"Mozambique\",\"abbreviation\":\"MZ\"},{\"name\":\"Myanmar (Burma)\",\"abbreviation\":\"MM\"},{\"name\":\"Namibia\",\"abbreviation\":\"NA\"},{\"name\":\"Nauru\",\"abbreviation\":\"NR\"},{\"name\":\"Nepal\",\"abbreviation\":\"NP\"},{\"name\":\"Netherlands\",\"abbreviation\":\"NL\"},{\"name\":\"New Caledonia\",\"abbreviation\":\"NC\"},{\"name\":\"New Zealand\",\"abbreviation\":\"NZ\"},{\"name\":\"Nicaragua\",\"abbreviation\":\"NI\"},{\"name\":\"Niger\",\"abbreviation\":\"NE\"},{\"name\":\"Nigeria\",\"abbreviation\":\"NG\"},{\"name\":\"Niue\",\"abbreviation\":\"NU\"},{\"name\":\"Norfolk Island\",\"abbreviation\":\"NF\"},{\"name\":\"North Korea\",\"abbreviation\":\"KP\"},{\"name\":\"Northern Mariana Islands\",\"abbreviation\":\"MP\"},{\"name\":\"Norway\",\"abbreviation\":\"NO\"},{\"name\":\"Oman\",\"abbreviation\":\"OM\"},{\"name\":\"Pakistan\",\"abbreviation\":\"PK\"},{\"name\":\"Palau\",\"abbreviation\":\"PW\"},{\"name\":\"Palestinian Territories\",\"abbreviation\":\"PS\"},{\"name\":\"Panama\",\"abbreviation\":\"PA\"},{\"name\":\"Papua New Guinea\",\"abbreviation\":\"PG\"},{\"name\":\"Paraguay\",\"abbreviation\":\"PY\"},{\"name\":\"Peru\",\"abbreviation\":\"PE\"},{\"name\":\"Philippines\",\"abbreviation\":\"PH\"},{\"name\":\"Pitcairn Islands\",\"abbreviation\":\"PN\"},{\"name\":\"Poland\",\"abbreviation\":\"PL\"},{\"name\":\"Portugal\",\"abbreviation\":\"PT\"},{\"name\":\"Puerto Rico\",\"abbreviation\":\"PR\"},{\"name\":\"Qatar\",\"abbreviation\":\"QA\"},{\"name\":\"Réunion\",\"abbreviation\":\"RE\"},{\"name\":\"Romania\",\"abbreviation\":\"RO\"},{\"name\":\"Russia\",\"abbreviation\":\"RU\"},{\"name\":\"Rwanda\",\"abbreviation\":\"RW\"},{\"name\":\"Samoa\",\"abbreviation\":\"WS\"},{\"name\":\"San Marino\",\"abbreviation\":\"SM\"},{\"name\":\"São Tomé and Príncipe\",\"abbreviation\":\"ST\"},{\"name\":\"Saudi Arabia\",\"abbreviation\":\"SA\"},{\"name\":\"Senegal\",\"abbreviation\":\"SN\"},{\"name\":\"Serbia\",\"abbreviation\":\"RS\"},{\"name\":\"Seychelles\",\"abbreviation\":\"SC\"},{\"name\":\"Sierra Leone\",\"abbreviation\":\"SL\"},{\"name\":\"Singapore\",\"abbreviation\":\"SG\"},{\"name\":\"Sint Maarten\",\"abbreviation\":\"SX\"},{\"name\":\"Slovakia\",\"abbreviation\":\"SK\"},{\"name\":\"Slovenia\",\"abbreviation\":\"SI\"},{\"name\":\"Solomon Islands\",\"abbreviation\":\"SB\"},{\"name\":\"Somalia\",\"abbreviation\":\"SO\"},{\"name\":\"South Africa\",\"abbreviation\":\"ZA\"},{\"name\":\"South Georgia & South Sandwich Islands\",\"abbreviation\":\"GS\"},{\"name\":\"South Korea\",\"abbreviation\":\"KR\"},{\"name\":\"South Sudan\",\"abbreviation\":\"SS\"},{\"name\":\"Spain\",\"abbreviation\":\"ES\"},{\"name\":\"Sri Lanka\",\"abbreviation\":\"LK\"},{\"name\":\"St. Barthélemy\",\"abbreviation\":\"BL\"},{\"name\":\"St. Helena\",\"abbreviation\":\"SH\"},{\"name\":\"St. Kitts & Nevis\",\"abbreviation\":\"KN\"},{\"name\":\"St. Lucia\",\"abbreviation\":\"LC\"},{\"name\":\"St. Martin\",\"abbreviation\":\"MF\"},{\"name\":\"St. Pierre & Miquelon\",\"abbreviation\":\"PM\"},{\"name\":\"St. Vincent & Grenadines\",\"abbreviation\":\"VC\"},{\"name\":\"Sudan\",\"abbreviation\":\"SD\"},{\"name\":\"Suriname\",\"abbreviation\":\"SR\"},{\"name\":\"Svalbard & Jan Mayen\",\"abbreviation\":\"SJ\"},{\"name\":\"Swaziland\",\"abbreviation\":\"SZ\"},{\"name\":\"Sweden\",\"abbreviation\":\"SE\"},{\"name\":\"Switzerland\",\"abbreviation\":\"CH\"},{\"name\":\"Syria\",\"abbreviation\":\"SY\"},{\"name\":\"Taiwan\",\"abbreviation\":\"TW\"},{\"name\":\"Tajikistan\",\"abbreviation\":\"TJ\"},{\"name\":\"Tanzania\",\"abbreviation\":\"TZ\"},{\"name\":\"Thailand\",\"abbreviation\":\"TH\"},{\"name\":\"Timor-Leste\",\"abbreviation\":\"TL\"},{\"name\":\"Togo\",\"abbreviation\":\"TG\"},{\"name\":\"Tokelau\",\"abbreviation\":\"TK\"},{\"name\":\"Tonga\",\"abbreviation\":\"TO\"},{\"name\":\"Trinidad & Tobago\",\"abbreviation\":\"TT\"},{\"name\":\"Tristan da Cunha\",\"abbreviation\":\"TA\"},{\"name\":\"Tunisia\",\"abbreviation\":\"TN\"},{\"name\":\"Turkey\",\"abbreviation\":\"TR\"},{\"name\":\"Turkmenistan\",\"abbreviation\":\"TM\"},{\"name\":\"Turks & Caicos Islands\",\"abbreviation\":\"TC\"},{\"name\":\"Tuvalu\",\"abbreviation\":\"TV\"},{\"name\":\"U.S. Outlying Islands\",\"abbreviation\":\"UM\"},{\"name\":\"U.S. Virgin Islands\",\"abbreviation\":\"VI\"},{\"name\":\"Uganda\",\"abbreviation\":\"UG\"},{\"name\":\"Ukraine\",\"abbreviation\":\"UA\"},{\"name\":\"United Arab Emirates\",\"abbreviation\":\"AE\"},{\"name\":\"United Kingdom\",\"abbreviation\":\"GB\"},{\"name\":\"United States\",\"abbreviation\":\"US\"},{\"name\":\"Uruguay\",\"abbreviation\":\"UY\"},{\"name\":\"Uzbekistan\",\"abbreviation\":\"UZ\"},{\"name\":\"Vanuatu\",\"abbreviation\":\"VU\"},{\"name\":\"Vatican City\",\"abbreviation\":\"VA\"},{\"name\":\"Venezuela\",\"abbreviation\":\"VE\"},{\"name\":\"Vietnam\",\"abbreviation\":\"VN\"},{\"name\":\"Wallis & Futuna\",\"abbreviation\":\"WF\"},{\"name\":\"Western Sahara\",\"abbreviation\":\"EH\"},{\"name\":\"Yemen\",\"abbreviation\":\"YE\"},{\"name\":\"Zambia\",\"abbreviation\":\"ZM\"},{\"name\":\"Zimbabwe\",\"abbreviation\":\"ZW\"}],\n\n                counties: {\n            // Data taken from http://www.downloadexcelfiles.com/gb_en/download-excel-file-list-counties-uk\n            \"uk\": [\n                {name: 'Bath and North East Somerset'},\n                {name: 'Aberdeenshire'},\n                {name: 'Anglesey'},\n                {name: 'Angus'},\n                {name: 'Bedford'},\n                {name: 'Blackburn with Darwen'},\n                {name: 'Blackpool'},\n                {name: 'Bournemouth'},\n                {name: 'Bracknell Forest'},\n                {name: 'Brighton & Hove'},\n                {name: 'Bristol'},\n                {name: 'Buckinghamshire'},\n                {name: 'Cambridgeshire'},\n                {name: 'Carmarthenshire'},\n                {name: 'Central Bedfordshire'},\n                {name: 'Ceredigion'},\n                {name: 'Cheshire East'},\n                {name: 'Cheshire West and Chester'},\n                {name: 'Clackmannanshire'},\n                {name: 'Conwy'},\n                {name: 'Cornwall'},\n                {name: 'County Antrim'},\n                {name: 'County Armagh'},\n                {name: 'County Down'},\n                {name: 'County Durham'},\n                {name: 'County Fermanagh'},\n                {name: 'County Londonderry'},\n                {name: 'County Tyrone'},\n                {name: 'Cumbria'},\n                {name: 'Darlington'},\n                {name: 'Denbighshire'},\n                {name: 'Derby'},\n                {name: 'Derbyshire'},\n                {name: 'Devon'},\n                {name: 'Dorset'},\n                {name: 'Dumfries and Galloway'},\n                {name: 'Dundee'},\n                {name: 'East Lothian'},\n                {name: 'East Riding of Yorkshire'},\n                {name: 'East Sussex'},\n                {name: 'Edinburgh?'},\n                {name: 'Essex'},\n                {name: 'Falkirk'},\n                {name: 'Fife'},\n                {name: 'Flintshire'},\n                {name: 'Gloucestershire'},\n                {name: 'Greater London'},\n                {name: 'Greater Manchester'},\n                {name: 'Gwent'},\n                {name: 'Gwynedd'},\n                {name: 'Halton'},\n                {name: 'Hampshire'},\n                {name: 'Hartlepool'},\n                {name: 'Herefordshire'},\n                {name: 'Hertfordshire'},\n                {name: 'Highlands'},\n                {name: 'Hull'},\n                {name: 'Isle of Wight'},\n                {name: 'Isles of Scilly'},\n                {name: 'Kent'},\n                {name: 'Lancashire'},\n                {name: 'Leicester'},\n                {name: 'Leicestershire'},\n                {name: 'Lincolnshire'},\n                {name: 'Lothian'},\n                {name: 'Luton'},\n                {name: 'Medway'},\n                {name: 'Merseyside'},\n                {name: 'Mid Glamorgan'},\n                {name: 'Middlesbrough'},\n                {name: 'Milton Keynes'},\n                {name: 'Monmouthshire'},\n                {name: 'Moray'},\n                {name: 'Norfolk'},\n                {name: 'North East Lincolnshire'},\n                {name: 'North Lincolnshire'},\n                {name: 'North Somerset'},\n                {name: 'North Yorkshire'},\n                {name: 'Northamptonshire'},\n                {name: 'Northumberland'},\n                {name: 'Nottingham'},\n                {name: 'Nottinghamshire'},\n                {name: 'Oxfordshire'},\n                {name: 'Pembrokeshire'},\n                {name: 'Perth and Kinross'},\n                {name: 'Peterborough'},\n                {name: 'Plymouth'},\n                {name: 'Poole'},\n                {name: 'Portsmouth'},\n                {name: 'Powys'},\n                {name: 'Reading'},\n                {name: 'Redcar and Cleveland'},\n                {name: 'Rutland'},\n                {name: 'Scottish Borders'},\n                {name: 'Shropshire'},\n                {name: 'Slough'},\n                {name: 'Somerset'},\n                {name: 'South Glamorgan'},\n                {name: 'South Gloucestershire'},\n                {name: 'South Yorkshire'},\n                {name: 'Southampton'},\n                {name: 'Southend-on-Sea'},\n                {name: 'Staffordshire'},\n                {name: 'Stirlingshire'},\n                {name: 'Stockton-on-Tees'},\n                {name: 'Stoke-on-Trent'},\n                {name: 'Strathclyde'},\n                {name: 'Suffolk'},\n                {name: 'Surrey'},\n                {name: 'Swindon'},\n                {name: 'Telford and Wrekin'},\n                {name: 'Thurrock'},\n                {name: 'Torbay'},\n                {name: 'Tyne and Wear'},\n                {name: 'Warrington'},\n                {name: 'Warwickshire'},\n                {name: 'West Berkshire'},\n                {name: 'West Glamorgan'},\n                {name: 'West Lothian'},\n                {name: 'West Midlands'},\n                {name: 'West Sussex'},\n                {name: 'West Yorkshire'},\n                {name: 'Western Isles'},\n                {name: 'Wiltshire'},\n                {name: 'Windsor and Maidenhead'},\n                {name: 'Wokingham'},\n                {name: 'Worcestershire'},\n                {name: 'Wrexham'},\n                {name: 'York'}]\n                                },\n        provinces: {\n            \"ca\": [\n                {name: 'Alberta', abbreviation: 'AB'},\n                {name: 'British Columbia', abbreviation: 'BC'},\n                {name: 'Manitoba', abbreviation: 'MB'},\n                {name: 'New Brunswick', abbreviation: 'NB'},\n                {name: 'Newfoundland and Labrador', abbreviation: 'NL'},\n                {name: 'Nova Scotia', abbreviation: 'NS'},\n                {name: 'Ontario', abbreviation: 'ON'},\n                {name: 'Prince Edward Island', abbreviation: 'PE'},\n                {name: 'Quebec', abbreviation: 'QC'},\n                {name: 'Saskatchewan', abbreviation: 'SK'},\n\n                // The case could be made that the following are not actually provinces\n                // since they are technically considered \"territories\" however they all\n                // look the same on an envelope!\n                {name: 'Northwest Territories', abbreviation: 'NT'},\n                {name: 'Nunavut', abbreviation: 'NU'},\n                {name: 'Yukon', abbreviation: 'YT'}\n            ],\n            \"it\": [\n                { name: \"Agrigento\", abbreviation: \"AG\", code: 84 },\n                { name: \"Alessandria\", abbreviation: \"AL\", code: 6 },\n                { name: \"Ancona\", abbreviation: \"AN\", code: 42 },\n                { name: \"Aosta\", abbreviation: \"AO\", code: 7 },\n                { name: \"L'Aquila\", abbreviation: \"AQ\", code: 66 },\n                { name: \"Arezzo\", abbreviation: \"AR\", code: 51 },\n                { name: \"Ascoli-Piceno\", abbreviation: \"AP\", code: 44 },\n                { name: \"Asti\", abbreviation: \"AT\", code: 5 },\n                { name: \"Avellino\", abbreviation: \"AV\", code: 64 },\n                { name: \"Bari\", abbreviation: \"BA\", code: 72 },\n                { name: \"Barletta-Andria-Trani\", abbreviation: \"BT\", code: 72 },\n                { name: \"Belluno\", abbreviation: \"BL\", code: 25 },\n                { name: \"Benevento\", abbreviation: \"BN\", code: 62 },\n                { name: \"Bergamo\", abbreviation: \"BG\", code: 16 },\n                { name: \"Biella\", abbreviation: \"BI\", code: 96 },\n                { name: \"Bologna\", abbreviation: \"BO\", code: 37 },\n                { name: \"Bolzano\", abbreviation: \"BZ\", code: 21 },\n                { name: \"Brescia\", abbreviation: \"BS\", code: 17 },\n                { name: \"Brindisi\", abbreviation: \"BR\", code: 74 },\n                { name: \"Cagliari\", abbreviation: \"CA\", code: 92 },\n                { name: \"Caltanissetta\", abbreviation: \"CL\", code: 85 },\n                { name: \"Campobasso\", abbreviation: \"CB\", code: 70 },\n                { name: \"Carbonia Iglesias\", abbreviation: \"CI\", code: 70 },\n                { name: \"Caserta\", abbreviation: \"CE\", code: 61 },\n                { name: \"Catania\", abbreviation: \"CT\", code: 87 },\n                { name: \"Catanzaro\", abbreviation: \"CZ\", code: 79 },\n                { name: \"Chieti\", abbreviation: \"CH\", code: 69 },\n                { name: \"Como\", abbreviation: \"CO\", code: 13 },\n                { name: \"Cosenza\", abbreviation: \"CS\", code: 78 },\n                { name: \"Cremona\", abbreviation: \"CR\", code: 19 },\n                { name: \"Crotone\", abbreviation: \"KR\", code: 101 },\n                { name: \"Cuneo\", abbreviation: \"CN\", code: 4 },\n                { name: \"Enna\", abbreviation: \"EN\", code: 86 },\n                { name: \"Fermo\", abbreviation: \"FM\", code: 86 },\n                { name: \"Ferrara\", abbreviation: \"FE\", code: 38 },\n                { name: \"Firenze\", abbreviation: \"FI\", code: 48 },\n                { name: \"Foggia\", abbreviation: \"FG\", code: 71 },\n                { name: \"Forli-Cesena\", abbreviation: \"FC\", code: 71 },\n                { name: \"Frosinone\", abbreviation: \"FR\", code: 60 },\n                { name: \"Genova\", abbreviation: \"GE\", code: 10 },\n                { name: \"Gorizia\", abbreviation: \"GO\", code: 31 },\n                { name: \"Grosseto\", abbreviation: \"GR\", code: 53 },\n                { name: \"Imperia\", abbreviation: \"IM\", code: 8 },\n                { name: \"Isernia\", abbreviation: \"IS\", code: 94 },\n                { name: \"La-Spezia\", abbreviation: \"SP\", code: 66 },\n                { name: \"Latina\", abbreviation: \"LT\", code: 59 },\n                { name: \"Lecce\", abbreviation: \"LE\", code: 75 },\n                { name: \"Lecco\", abbreviation: \"LC\", code: 97 },\n                { name: \"Livorno\", abbreviation: \"LI\", code: 49 },\n                { name: \"Lodi\", abbreviation: \"LO\", code: 98 },\n                { name: \"Lucca\", abbreviation: \"LU\", code: 46 },\n                { name: \"Macerata\", abbreviation: \"MC\", code: 43 },\n                { name: \"Mantova\", abbreviation: \"MN\", code: 20 },\n                { name: \"Massa-Carrara\", abbreviation: \"MS\", code: 45 },\n                { name: \"Matera\", abbreviation: \"MT\", code: 77 },\n                { name: \"Medio Campidano\", abbreviation: \"VS\", code: 77 },\n                { name: \"Messina\", abbreviation: \"ME\", code: 83 },\n                { name: \"Milano\", abbreviation: \"MI\", code: 15 },\n                { name: \"Modena\", abbreviation: \"MO\", code: 36 },\n                { name: \"Monza-Brianza\", abbreviation: \"MB\", code: 36 },\n                { name: \"Napoli\", abbreviation: \"NA\", code: 63 },\n                { name: \"Novara\", abbreviation: \"NO\", code: 3 },\n                { name: \"Nuoro\", abbreviation: \"NU\", code: 91 },\n                { name: \"Ogliastra\", abbreviation: \"OG\", code: 91 },\n                { name: \"Olbia Tempio\", abbreviation: \"OT\", code: 91 },\n                { name: \"Oristano\", abbreviation: \"OR\", code: 95 },\n                { name: \"Padova\", abbreviation: \"PD\", code: 28 },\n                { name: \"Palermo\", abbreviation: \"PA\", code: 82 },\n                { name: \"Parma\", abbreviation: \"PR\", code: 34 },\n                { name: \"Pavia\", abbreviation: \"PV\", code: 18 },\n                { name: \"Perugia\", abbreviation: \"PG\", code: 54 },\n                { name: \"Pesaro-Urbino\", abbreviation: \"PU\", code: 41 },\n                { name: \"Pescara\", abbreviation: \"PE\", code: 68 },\n                { name: \"Piacenza\", abbreviation: \"PC\", code: 33 },\n                { name: \"Pisa\", abbreviation: \"PI\", code: 50 },\n                { name: \"Pistoia\", abbreviation: \"PT\", code: 47 },\n                { name: \"Pordenone\", abbreviation: \"PN\", code: 93 },\n                { name: \"Potenza\", abbreviation: \"PZ\", code: 76 },\n                { name: \"Prato\", abbreviation: \"PO\", code: 100 },\n                { name: \"Ragusa\", abbreviation: \"RG\", code: 88 },\n                { name: \"Ravenna\", abbreviation: \"RA\", code: 39 },\n                { name: \"Reggio-Calabria\", abbreviation: \"RC\", code: 35 },\n                { name: \"Reggio-Emilia\", abbreviation: \"RE\", code: 35 },\n                { name: \"Rieti\", abbreviation: \"RI\", code: 57 },\n                { name: \"Rimini\", abbreviation: \"RN\", code: 99 },\n                { name: \"Roma\", abbreviation: \"Roma\", code: 58 },\n                { name: \"Rovigo\", abbreviation: \"RO\", code: 29 },\n                { name: \"Salerno\", abbreviation: \"SA\", code: 65 },\n                { name: \"Sassari\", abbreviation: \"SS\", code: 90 },\n                { name: \"Savona\", abbreviation: \"SV\", code: 9 },\n                { name: \"Siena\", abbreviation: \"SI\", code: 52 },\n                { name: \"Siracusa\", abbreviation: \"SR\", code: 89 },\n                { name: \"Sondrio\", abbreviation: \"SO\", code: 14 },\n                { name: \"Taranto\", abbreviation: \"TA\", code: 73 },\n                { name: \"Teramo\", abbreviation: \"TE\", code: 67 },\n                { name: \"Terni\", abbreviation: \"TR\", code: 55 },\n                { name: \"Torino\", abbreviation: \"TO\", code: 1 },\n                { name: \"Trapani\", abbreviation: \"TP\", code: 81 },\n                { name: \"Trento\", abbreviation: \"TN\", code: 22 },\n                { name: \"Treviso\", abbreviation: \"TV\", code: 26 },\n                { name: \"Trieste\", abbreviation: \"TS\", code: 32 },\n                { name: \"Udine\", abbreviation: \"UD\", code: 30 },\n                { name: \"Varese\", abbreviation: \"VA\", code: 12 },\n                { name: \"Venezia\", abbreviation: \"VE\", code: 27 },\n                { name: \"Verbania\", abbreviation: \"VB\", code: 27 },\n                { name: \"Vercelli\", abbreviation: \"VC\", code: 2 },\n                { name: \"Verona\", abbreviation: \"VR\", code: 23 },\n                { name: \"Vibo-Valentia\", abbreviation: \"VV\", code: 102 },\n                { name: \"Vicenza\", abbreviation: \"VI\", code: 24 },\n                { name: \"Viterbo\", abbreviation: \"VT\", code: 56 }\n            ]\n        },\n\n            // from: https://github.com/samsargent/Useful-Autocomplete-Data/blob/master/data/nationalities.json\n        nationalities: [\n           {name: 'Afghan'},\n           {name: 'Albanian'},\n           {name: 'Algerian'},\n           {name: 'American'},\n           {name: 'Andorran'},\n           {name: 'Angolan'},\n           {name: 'Antiguans'},\n           {name: 'Argentinean'},\n           {name: 'Armenian'},\n           {name: 'Australian'},\n           {name: 'Austrian'},\n           {name: 'Azerbaijani'},\n           {name: 'Bahami'},\n           {name: 'Bahraini'},\n           {name: 'Bangladeshi'},\n           {name: 'Barbadian'},\n           {name: 'Barbudans'},\n           {name: 'Batswana'},\n           {name: 'Belarusian'},\n           {name: 'Belgian'},\n           {name: 'Belizean'},\n           {name: 'Beninese'},\n           {name: 'Bhutanese'},\n           {name: 'Bolivian'},\n           {name: 'Bosnian'},\n           {name: 'Brazilian'},\n           {name: 'British'},\n           {name: 'Bruneian'},\n           {name: 'Bulgarian'},\n           {name: 'Burkinabe'},\n           {name: 'Burmese'},\n           {name: 'Burundian'},\n           {name: 'Cambodian'},\n           {name: 'Cameroonian'},\n           {name: 'Canadian'},\n           {name: 'Cape Verdean'},\n           {name: 'Central African'},\n           {name: 'Chadian'},\n           {name: 'Chilean'},\n           {name: 'Chinese'},\n           {name: 'Colombian'},\n           {name: 'Comoran'},\n           {name: 'Congolese'},\n           {name: 'Costa Rican'},\n           {name: 'Croatian'},\n           {name: 'Cuban'},\n           {name: 'Cypriot'},\n           {name: 'Czech'},\n           {name: 'Danish'},\n           {name: 'Djibouti'},\n           {name: 'Dominican'},\n           {name: 'Dutch'},\n           {name: 'East Timorese'},\n           {name: 'Ecuadorean'},\n           {name: 'Egyptian'},\n           {name: 'Emirian'},\n           {name: 'Equatorial Guinean'},\n           {name: 'Eritrean'},\n           {name: 'Estonian'},\n           {name: 'Ethiopian'},\n           {name: 'Fijian'},\n           {name: 'Filipino'},\n           {name: 'Finnish'},\n           {name: 'French'},\n           {name: 'Gabonese'},\n           {name: 'Gambian'},\n           {name: 'Georgian'},\n           {name: 'German'},\n           {name: 'Ghanaian'},\n           {name: 'Greek'},\n           {name: 'Grenadian'},\n           {name: 'Guatemalan'},\n           {name: 'Guinea-Bissauan'},\n           {name: 'Guinean'},\n           {name: 'Guyanese'},\n           {name: 'Haitian'},\n           {name: 'Herzegovinian'},\n           {name: 'Honduran'},\n           {name: 'Hungarian'},\n           {name: 'I-Kiribati'},\n           {name: 'Icelander'},\n           {name: 'Indian'},\n           {name: 'Indonesian'},\n           {name: 'Iranian'},\n           {name: 'Iraqi'},\n           {name: 'Irish'},\n           {name: 'Israeli'},\n           {name: 'Italian'},\n           {name: 'Ivorian'},\n           {name: 'Jamaican'},\n           {name: 'Japanese'},\n           {name: 'Jordanian'},\n           {name: 'Kazakhstani'},\n           {name: 'Kenyan'},\n           {name: 'Kittian and Nevisian'},\n           {name: 'Kuwaiti'},\n           {name: 'Kyrgyz'},\n           {name: 'Laotian'},\n           {name: 'Latvian'},\n           {name: 'Lebanese'},\n           {name: 'Liberian'},\n           {name: 'Libyan'},\n           {name: 'Liechtensteiner'},\n           {name: 'Lithuanian'},\n           {name: 'Luxembourger'},\n           {name: 'Macedonian'},\n           {name: 'Malagasy'},\n           {name: 'Malawian'},\n           {name: 'Malaysian'},\n           {name: 'Maldivan'},\n           {name: 'Malian'},\n           {name: 'Maltese'},\n           {name: 'Marshallese'},\n           {name: 'Mauritanian'},\n           {name: 'Mauritian'},\n           {name: 'Mexican'},\n           {name: 'Micronesian'},\n           {name: 'Moldovan'},\n           {name: 'Monacan'},\n           {name: 'Mongolian'},\n           {name: 'Moroccan'},\n           {name: 'Mosotho'},\n           {name: 'Motswana'},\n           {name: 'Mozambican'},\n           {name: 'Namibian'},\n           {name: 'Nauruan'},\n           {name: 'Nepalese'},\n           {name: 'New Zealander'},\n           {name: 'Nicaraguan'},\n           {name: 'Nigerian'},\n           {name: 'Nigerien'},\n           {name: 'North Korean'},\n           {name: 'Northern Irish'},\n           {name: 'Norwegian'},\n           {name: 'Omani'},\n           {name: 'Pakistani'},\n           {name: 'Palauan'},\n           {name: 'Panamanian'},\n           {name: 'Papua New Guinean'},\n           {name: 'Paraguayan'},\n           {name: 'Peruvian'},\n           {name: 'Polish'},\n           {name: 'Portuguese'},\n           {name: 'Qatari'},\n           {name: 'Romani'},\n           {name: 'Russian'},\n           {name: 'Rwandan'},\n           {name: 'Saint Lucian'},\n           {name: 'Salvadoran'},\n           {name: 'Samoan'},\n           {name: 'San Marinese'},\n           {name: 'Sao Tomean'},\n           {name: 'Saudi'},\n           {name: 'Scottish'},\n           {name: 'Senegalese'},\n           {name: 'Serbian'},\n           {name: 'Seychellois'},\n           {name: 'Sierra Leonean'},\n           {name: 'Singaporean'},\n           {name: 'Slovakian'},\n           {name: 'Slovenian'},\n           {name: 'Solomon Islander'},\n           {name: 'Somali'},\n           {name: 'South African'},\n           {name: 'South Korean'},\n           {name: 'Spanish'},\n           {name: 'Sri Lankan'},\n           {name: 'Sudanese'},\n           {name: 'Surinamer'},\n           {name: 'Swazi'},\n           {name: 'Swedish'},\n           {name: 'Swiss'},\n           {name: 'Syrian'},\n           {name: 'Taiwanese'},\n           {name: 'Tajik'},\n           {name: 'Tanzanian'},\n           {name: 'Thai'},\n           {name: 'Togolese'},\n           {name: 'Tongan'},\n           {name: 'Trinidadian or Tobagonian'},\n           {name: 'Tunisian'},\n           {name: 'Turkish'},\n           {name: 'Tuvaluan'},\n           {name: 'Ugandan'},\n           {name: 'Ukrainian'},\n           {name: 'Uruguaya'},\n           {name: 'Uzbekistani'},\n           {name: 'Venezuela'},\n           {name: 'Vietnamese'},\n           {name: 'Wels'},\n           {name: 'Yemenit'},\n           {name: 'Zambia'},\n           {name: 'Zimbabwe'},\n        ],\n          // http://www.loc.gov/standards/iso639-2/php/code_list.php (ISO-639-1 codes)\n        locale_languages: [\n          \"aa\",\n          \"ab\",\n          \"ae\",\n          \"af\",\n          \"ak\",\n          \"am\",\n          \"an\",\n          \"ar\",\n          \"as\",\n          \"av\",\n          \"ay\",\n          \"az\",\n          \"ba\",\n          \"be\",\n          \"bg\",\n          \"bh\",\n          \"bi\",\n          \"bm\",\n          \"bn\",\n          \"bo\",\n          \"br\",\n          \"bs\",\n          \"ca\",\n          \"ce\",\n          \"ch\",\n          \"co\",\n          \"cr\",\n          \"cs\",\n          \"cu\",\n          \"cv\",\n          \"cy\",\n          \"da\",\n          \"de\",\n          \"dv\",\n          \"dz\",\n          \"ee\",\n          \"el\",\n          \"en\",\n          \"eo\",\n          \"es\",\n          \"et\",\n          \"eu\",\n          \"fa\",\n          \"ff\",\n          \"fi\",\n          \"fj\",\n          \"fo\",\n          \"fr\",\n          \"fy\",\n          \"ga\",\n          \"gd\",\n          \"gl\",\n          \"gn\",\n          \"gu\",\n          \"gv\",\n          \"ha\",\n          \"he\",\n          \"hi\",\n          \"ho\",\n          \"hr\",\n          \"ht\",\n          \"hu\",\n          \"hy\",\n          \"hz\",\n          \"ia\",\n          \"id\",\n          \"ie\",\n          \"ig\",\n          \"ii\",\n          \"ik\",\n          \"io\",\n          \"is\",\n          \"it\",\n          \"iu\",\n          \"ja\",\n          \"jv\",\n          \"ka\",\n          \"kg\",\n          \"ki\",\n          \"kj\",\n          \"kk\",\n          \"kl\",\n          \"km\",\n          \"kn\",\n          \"ko\",\n          \"kr\",\n          \"ks\",\n          \"ku\",\n          \"kv\",\n          \"kw\",\n          \"ky\",\n          \"la\",\n          \"lb\",\n          \"lg\",\n          \"li\",\n          \"ln\",\n          \"lo\",\n          \"lt\",\n          \"lu\",\n          \"lv\",\n          \"mg\",\n          \"mh\",\n          \"mi\",\n          \"mk\",\n          \"ml\",\n          \"mn\",\n          \"mr\",\n          \"ms\",\n          \"mt\",\n          \"my\",\n          \"na\",\n          \"nb\",\n          \"nd\",\n          \"ne\",\n          \"ng\",\n          \"nl\",\n          \"nn\",\n          \"no\",\n          \"nr\",\n          \"nv\",\n          \"ny\",\n          \"oc\",\n          \"oj\",\n          \"om\",\n          \"or\",\n          \"os\",\n          \"pa\",\n          \"pi\",\n          \"pl\",\n          \"ps\",\n          \"pt\",\n          \"qu\",\n          \"rm\",\n          \"rn\",\n          \"ro\",\n          \"ru\",\n          \"rw\",\n          \"sa\",\n          \"sc\",\n          \"sd\",\n          \"se\",\n          \"sg\",\n          \"si\",\n          \"sk\",\n          \"sl\",\n          \"sm\",\n          \"sn\",\n          \"so\",\n          \"sq\",\n          \"sr\",\n          \"ss\",\n          \"st\",\n          \"su\",\n          \"sv\",\n          \"sw\",\n          \"ta\",\n          \"te\",\n          \"tg\",\n          \"th\",\n          \"ti\",\n          \"tk\",\n          \"tl\",\n          \"tn\",\n          \"to\",\n          \"tr\",\n          \"ts\",\n          \"tt\",\n          \"tw\",\n          \"ty\",\n          \"ug\",\n          \"uk\",\n          \"ur\",\n          \"uz\",\n          \"ve\",\n          \"vi\",\n          \"vo\",\n          \"wa\",\n          \"wo\",\n          \"xh\",\n          \"yi\",\n          \"yo\",\n          \"za\",\n          \"zh\",\n          \"zu\"\n        ],\n\n        // From http://data.okfn.org/data/core/language-codes#resource-language-codes-full (IETF language tags)\n        locale_regions: [\n          \"agq-CM\",\n          \"asa-TZ\",\n          \"ast-ES\",\n          \"bas-CM\",\n          \"bem-ZM\",\n          \"bez-TZ\",\n          \"brx-IN\",\n          \"cgg-UG\",\n          \"chr-US\",\n          \"dav-KE\",\n          \"dje-NE\",\n          \"dsb-DE\",\n          \"dua-CM\",\n          \"dyo-SN\",\n          \"ebu-KE\",\n          \"ewo-CM\",\n          \"fil-PH\",\n          \"fur-IT\",\n          \"gsw-CH\",\n          \"gsw-FR\",\n          \"gsw-LI\",\n          \"guz-KE\",\n          \"haw-US\",\n          \"hsb-DE\",\n          \"jgo-CM\",\n          \"jmc-TZ\",\n          \"kab-DZ\",\n          \"kam-KE\",\n          \"kde-TZ\",\n          \"kea-CV\",\n          \"khq-ML\",\n          \"kkj-CM\",\n          \"kln-KE\",\n          \"kok-IN\",\n          \"ksb-TZ\",\n          \"ksf-CM\",\n          \"ksh-DE\",\n          \"lag-TZ\",\n          \"lkt-US\",\n          \"luo-KE\",\n          \"luy-KE\",\n          \"mas-KE\",\n          \"mas-TZ\",\n          \"mer-KE\",\n          \"mfe-MU\",\n          \"mgh-MZ\",\n          \"mgo-CM\",\n          \"mua-CM\",\n          \"naq-NA\",\n          \"nmg-CM\",\n          \"nnh-CM\",\n          \"nus-SD\",\n          \"nyn-UG\",\n          \"rof-TZ\",\n          \"rwk-TZ\",\n          \"sah-RU\",\n          \"saq-KE\",\n          \"sbp-TZ\",\n          \"seh-MZ\",\n          \"ses-ML\",\n          \"shi-Latn\",\n          \"shi-Latn-MA\",\n          \"shi-Tfng\",\n          \"shi-Tfng-MA\",\n          \"smn-FI\",\n          \"teo-KE\",\n          \"teo-UG\",\n          \"twq-NE\",\n          \"tzm-Latn\",\n          \"tzm-Latn-MA\",\n          \"vai-Latn\",\n          \"vai-Latn-LR\",\n          \"vai-Vaii\",\n          \"vai-Vaii-LR\",\n          \"vun-TZ\",\n          \"wae-CH\",\n          \"xog-UG\",\n          \"yav-CM\",\n          \"zgh-MA\",\n          \"af-NA\",\n          \"af-ZA\",\n          \"ak-GH\",\n          \"am-ET\",\n          \"ar-001\",\n          \"ar-AE\",\n          \"ar-BH\",\n          \"ar-DJ\",\n          \"ar-DZ\",\n          \"ar-EG\",\n          \"ar-EH\",\n          \"ar-ER\",\n          \"ar-IL\",\n          \"ar-IQ\",\n          \"ar-JO\",\n          \"ar-KM\",\n          \"ar-KW\",\n          \"ar-LB\",\n          \"ar-LY\",\n          \"ar-MA\",\n          \"ar-MR\",\n          \"ar-OM\",\n          \"ar-PS\",\n          \"ar-QA\",\n          \"ar-SA\",\n          \"ar-SD\",\n          \"ar-SO\",\n          \"ar-SS\",\n          \"ar-SY\",\n          \"ar-TD\",\n          \"ar-TN\",\n          \"ar-YE\",\n          \"as-IN\",\n          \"az-Cyrl\",\n          \"az-Cyrl-AZ\",\n          \"az-Latn\",\n          \"az-Latn-AZ\",\n          \"be-BY\",\n          \"bg-BG\",\n          \"bm-Latn\",\n          \"bm-Latn-ML\",\n          \"bn-BD\",\n          \"bn-IN\",\n          \"bo-CN\",\n          \"bo-IN\",\n          \"br-FR\",\n          \"bs-Cyrl\",\n          \"bs-Cyrl-BA\",\n          \"bs-Latn\",\n          \"bs-Latn-BA\",\n          \"ca-AD\",\n          \"ca-ES\",\n          \"ca-ES-VALENCIA\",\n          \"ca-FR\",\n          \"ca-IT\",\n          \"cs-CZ\",\n          \"cy-GB\",\n          \"da-DK\",\n          \"da-GL\",\n          \"de-AT\",\n          \"de-BE\",\n          \"de-CH\",\n          \"de-DE\",\n          \"de-LI\",\n          \"de-LU\",\n          \"dz-BT\",\n          \"ee-GH\",\n          \"ee-TG\",\n          \"el-CY\",\n          \"el-GR\",\n          \"en-001\",\n          \"en-150\",\n          \"en-AG\",\n          \"en-AI\",\n          \"en-AS\",\n          \"en-AU\",\n          \"en-BB\",\n          \"en-BE\",\n          \"en-BM\",\n          \"en-BS\",\n          \"en-BW\",\n          \"en-BZ\",\n          \"en-CA\",\n          \"en-CC\",\n          \"en-CK\",\n          \"en-CM\",\n          \"en-CX\",\n          \"en-DG\",\n          \"en-DM\",\n          \"en-ER\",\n          \"en-FJ\",\n          \"en-FK\",\n          \"en-FM\",\n          \"en-GB\",\n          \"en-GD\",\n          \"en-GG\",\n          \"en-GH\",\n          \"en-GI\",\n          \"en-GM\",\n          \"en-GU\",\n          \"en-GY\",\n          \"en-HK\",\n          \"en-IE\",\n          \"en-IM\",\n          \"en-IN\",\n          \"en-IO\",\n          \"en-JE\",\n          \"en-JM\",\n          \"en-KE\",\n          \"en-KI\",\n          \"en-KN\",\n          \"en-KY\",\n          \"en-LC\",\n          \"en-LR\",\n          \"en-LS\",\n          \"en-MG\",\n          \"en-MH\",\n          \"en-MO\",\n          \"en-MP\",\n          \"en-MS\",\n          \"en-MT\",\n          \"en-MU\",\n          \"en-MW\",\n          \"en-MY\",\n          \"en-NA\",\n          \"en-NF\",\n          \"en-NG\",\n          \"en-NR\",\n          \"en-NU\",\n          \"en-NZ\",\n          \"en-PG\",\n          \"en-PH\",\n          \"en-PK\",\n          \"en-PN\",\n          \"en-PR\",\n          \"en-PW\",\n          \"en-RW\",\n          \"en-SB\",\n          \"en-SC\",\n          \"en-SD\",\n          \"en-SG\",\n          \"en-SH\",\n          \"en-SL\",\n          \"en-SS\",\n          \"en-SX\",\n          \"en-SZ\",\n          \"en-TC\",\n          \"en-TK\",\n          \"en-TO\",\n          \"en-TT\",\n          \"en-TV\",\n          \"en-TZ\",\n          \"en-UG\",\n          \"en-UM\",\n          \"en-US\",\n          \"en-US-POSIX\",\n          \"en-VC\",\n          \"en-VG\",\n          \"en-VI\",\n          \"en-VU\",\n          \"en-WS\",\n          \"en-ZA\",\n          \"en-ZM\",\n          \"en-ZW\",\n          \"eo-001\",\n          \"es-419\",\n          \"es-AR\",\n          \"es-BO\",\n          \"es-CL\",\n          \"es-CO\",\n          \"es-CR\",\n          \"es-CU\",\n          \"es-DO\",\n          \"es-EA\",\n          \"es-EC\",\n          \"es-ES\",\n          \"es-GQ\",\n          \"es-GT\",\n          \"es-HN\",\n          \"es-IC\",\n          \"es-MX\",\n          \"es-NI\",\n          \"es-PA\",\n          \"es-PE\",\n          \"es-PH\",\n          \"es-PR\",\n          \"es-PY\",\n          \"es-SV\",\n          \"es-US\",\n          \"es-UY\",\n          \"es-VE\",\n          \"et-EE\",\n          \"eu-ES\",\n          \"fa-AF\",\n          \"fa-IR\",\n          \"ff-CM\",\n          \"ff-GN\",\n          \"ff-MR\",\n          \"ff-SN\",\n          \"fi-FI\",\n          \"fo-FO\",\n          \"fr-BE\",\n          \"fr-BF\",\n          \"fr-BI\",\n          \"fr-BJ\",\n          \"fr-BL\",\n          \"fr-CA\",\n          \"fr-CD\",\n          \"fr-CF\",\n          \"fr-CG\",\n          \"fr-CH\",\n          \"fr-CI\",\n          \"fr-CM\",\n          \"fr-DJ\",\n          \"fr-DZ\",\n          \"fr-FR\",\n          \"fr-GA\",\n          \"fr-GF\",\n          \"fr-GN\",\n          \"fr-GP\",\n          \"fr-GQ\",\n          \"fr-HT\",\n          \"fr-KM\",\n          \"fr-LU\",\n          \"fr-MA\",\n          \"fr-MC\",\n          \"fr-MF\",\n          \"fr-MG\",\n          \"fr-ML\",\n          \"fr-MQ\",\n          \"fr-MR\",\n          \"fr-MU\",\n          \"fr-NC\",\n          \"fr-NE\",\n          \"fr-PF\",\n          \"fr-PM\",\n          \"fr-RE\",\n          \"fr-RW\",\n          \"fr-SC\",\n          \"fr-SN\",\n          \"fr-SY\",\n          \"fr-TD\",\n          \"fr-TG\",\n          \"fr-TN\",\n          \"fr-VU\",\n          \"fr-WF\",\n          \"fr-YT\",\n          \"fy-NL\",\n          \"ga-IE\",\n          \"gd-GB\",\n          \"gl-ES\",\n          \"gu-IN\",\n          \"gv-IM\",\n          \"ha-Latn\",\n          \"ha-Latn-GH\",\n          \"ha-Latn-NE\",\n          \"ha-Latn-NG\",\n          \"he-IL\",\n          \"hi-IN\",\n          \"hr-BA\",\n          \"hr-HR\",\n          \"hu-HU\",\n          \"hy-AM\",\n          \"id-ID\",\n          \"ig-NG\",\n          \"ii-CN\",\n          \"is-IS\",\n          \"it-CH\",\n          \"it-IT\",\n          \"it-SM\",\n          \"ja-JP\",\n          \"ka-GE\",\n          \"ki-KE\",\n          \"kk-Cyrl\",\n          \"kk-Cyrl-KZ\",\n          \"kl-GL\",\n          \"km-KH\",\n          \"kn-IN\",\n          \"ko-KP\",\n          \"ko-KR\",\n          \"ks-Arab\",\n          \"ks-Arab-IN\",\n          \"kw-GB\",\n          \"ky-Cyrl\",\n          \"ky-Cyrl-KG\",\n          \"lb-LU\",\n          \"lg-UG\",\n          \"ln-AO\",\n          \"ln-CD\",\n          \"ln-CF\",\n          \"ln-CG\",\n          \"lo-LA\",\n          \"lt-LT\",\n          \"lu-CD\",\n          \"lv-LV\",\n          \"mg-MG\",\n          \"mk-MK\",\n          \"ml-IN\",\n          \"mn-Cyrl\",\n          \"mn-Cyrl-MN\",\n          \"mr-IN\",\n          \"ms-Latn\",\n          \"ms-Latn-BN\",\n          \"ms-Latn-MY\",\n          \"ms-Latn-SG\",\n          \"mt-MT\",\n          \"my-MM\",\n          \"nb-NO\",\n          \"nb-SJ\",\n          \"nd-ZW\",\n          \"ne-IN\",\n          \"ne-NP\",\n          \"nl-AW\",\n          \"nl-BE\",\n          \"nl-BQ\",\n          \"nl-CW\",\n          \"nl-NL\",\n          \"nl-SR\",\n          \"nl-SX\",\n          \"nn-NO\",\n          \"om-ET\",\n          \"om-KE\",\n          \"or-IN\",\n          \"os-GE\",\n          \"os-RU\",\n          \"pa-Arab\",\n          \"pa-Arab-PK\",\n          \"pa-Guru\",\n          \"pa-Guru-IN\",\n          \"pl-PL\",\n          \"ps-AF\",\n          \"pt-AO\",\n          \"pt-BR\",\n          \"pt-CV\",\n          \"pt-GW\",\n          \"pt-MO\",\n          \"pt-MZ\",\n          \"pt-PT\",\n          \"pt-ST\",\n          \"pt-TL\",\n          \"qu-BO\",\n          \"qu-EC\",\n          \"qu-PE\",\n          \"rm-CH\",\n          \"rn-BI\",\n          \"ro-MD\",\n          \"ro-RO\",\n          \"ru-BY\",\n          \"ru-KG\",\n          \"ru-KZ\",\n          \"ru-MD\",\n          \"ru-RU\",\n          \"ru-UA\",\n          \"rw-RW\",\n          \"se-FI\",\n          \"se-NO\",\n          \"se-SE\",\n          \"sg-CF\",\n          \"si-LK\",\n          \"sk-SK\",\n          \"sl-SI\",\n          \"sn-ZW\",\n          \"so-DJ\",\n          \"so-ET\",\n          \"so-KE\",\n          \"so-SO\",\n          \"sq-AL\",\n          \"sq-MK\",\n          \"sq-XK\",\n          \"sr-Cyrl\",\n          \"sr-Cyrl-BA\",\n          \"sr-Cyrl-ME\",\n          \"sr-Cyrl-RS\",\n          \"sr-Cyrl-XK\",\n          \"sr-Latn\",\n          \"sr-Latn-BA\",\n          \"sr-Latn-ME\",\n          \"sr-Latn-RS\",\n          \"sr-Latn-XK\",\n          \"sv-AX\",\n          \"sv-FI\",\n          \"sv-SE\",\n          \"sw-CD\",\n          \"sw-KE\",\n          \"sw-TZ\",\n          \"sw-UG\",\n          \"ta-IN\",\n          \"ta-LK\",\n          \"ta-MY\",\n          \"ta-SG\",\n          \"te-IN\",\n          \"th-TH\",\n          \"ti-ER\",\n          \"ti-ET\",\n          \"to-TO\",\n          \"tr-CY\",\n          \"tr-TR\",\n          \"ug-Arab\",\n          \"ug-Arab-CN\",\n          \"uk-UA\",\n          \"ur-IN\",\n          \"ur-PK\",\n          \"uz-Arab\",\n          \"uz-Arab-AF\",\n          \"uz-Cyrl\",\n          \"uz-Cyrl-UZ\",\n          \"uz-Latn\",\n          \"uz-Latn-UZ\",\n          \"vi-VN\",\n          \"yi-001\",\n          \"yo-BJ\",\n          \"yo-NG\",\n          \"zh-Hans\",\n          \"zh-Hans-CN\",\n          \"zh-Hans-HK\",\n          \"zh-Hans-MO\",\n          \"zh-Hans-SG\",\n          \"zh-Hant\",\n          \"zh-Hant-HK\",\n          \"zh-Hant-MO\",\n          \"zh-Hant-TW\",\n          \"zu-ZA\"\n        ],\n\n        us_states_and_dc: [\n            {name: 'Alabama', abbreviation: 'AL'},\n            {name: 'Alaska', abbreviation: 'AK'},\n            {name: 'Arizona', abbreviation: 'AZ'},\n            {name: 'Arkansas', abbreviation: 'AR'},\n            {name: 'California', abbreviation: 'CA'},\n            {name: 'Colorado', abbreviation: 'CO'},\n            {name: 'Connecticut', abbreviation: 'CT'},\n            {name: 'Delaware', abbreviation: 'DE'},\n            {name: 'District of Columbia', abbreviation: 'DC'},\n            {name: 'Florida', abbreviation: 'FL'},\n            {name: 'Georgia', abbreviation: 'GA'},\n            {name: 'Hawaii', abbreviation: 'HI'},\n            {name: 'Idaho', abbreviation: 'ID'},\n            {name: 'Illinois', abbreviation: 'IL'},\n            {name: 'Indiana', abbreviation: 'IN'},\n            {name: 'Iowa', abbreviation: 'IA'},\n            {name: 'Kansas', abbreviation: 'KS'},\n            {name: 'Kentucky', abbreviation: 'KY'},\n            {name: 'Louisiana', abbreviation: 'LA'},\n            {name: 'Maine', abbreviation: 'ME'},\n            {name: 'Maryland', abbreviation: 'MD'},\n            {name: 'Massachusetts', abbreviation: 'MA'},\n            {name: 'Michigan', abbreviation: 'MI'},\n            {name: 'Minnesota', abbreviation: 'MN'},\n            {name: 'Mississippi', abbreviation: 'MS'},\n            {name: 'Missouri', abbreviation: 'MO'},\n            {name: 'Montana', abbreviation: 'MT'},\n            {name: 'Nebraska', abbreviation: 'NE'},\n            {name: 'Nevada', abbreviation: 'NV'},\n            {name: 'New Hampshire', abbreviation: 'NH'},\n            {name: 'New Jersey', abbreviation: 'NJ'},\n            {name: 'New Mexico', abbreviation: 'NM'},\n            {name: 'New York', abbreviation: 'NY'},\n            {name: 'North Carolina', abbreviation: 'NC'},\n            {name: 'North Dakota', abbreviation: 'ND'},\n            {name: 'Ohio', abbreviation: 'OH'},\n            {name: 'Oklahoma', abbreviation: 'OK'},\n            {name: 'Oregon', abbreviation: 'OR'},\n            {name: 'Pennsylvania', abbreviation: 'PA'},\n            {name: 'Rhode Island', abbreviation: 'RI'},\n            {name: 'South Carolina', abbreviation: 'SC'},\n            {name: 'South Dakota', abbreviation: 'SD'},\n            {name: 'Tennessee', abbreviation: 'TN'},\n            {name: 'Texas', abbreviation: 'TX'},\n            {name: 'Utah', abbreviation: 'UT'},\n            {name: 'Vermont', abbreviation: 'VT'},\n            {name: 'Virginia', abbreviation: 'VA'},\n            {name: 'Washington', abbreviation: 'WA'},\n            {name: 'West Virginia', abbreviation: 'WV'},\n            {name: 'Wisconsin', abbreviation: 'WI'},\n            {name: 'Wyoming', abbreviation: 'WY'}\n        ],\n\n        territories: [\n            {name: 'American Samoa', abbreviation: 'AS'},\n            {name: 'Federated States of Micronesia', abbreviation: 'FM'},\n            {name: 'Guam', abbreviation: 'GU'},\n            {name: 'Marshall Islands', abbreviation: 'MH'},\n            {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n            {name: 'Puerto Rico', abbreviation: 'PR'},\n            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}\n        ],\n\n        armed_forces: [\n            {name: 'Armed Forces Europe', abbreviation: 'AE'},\n            {name: 'Armed Forces Pacific', abbreviation: 'AP'},\n            {name: 'Armed Forces the Americas', abbreviation: 'AA'}\n        ],\n\n        country_regions: {\n            it: [\n                { name: \"Valle d'Aosta\", abbreviation: \"VDA\" },\n                { name: \"Piemonte\", abbreviation: \"PIE\" },\n                { name: \"Lombardia\", abbreviation: \"LOM\" },\n                { name: \"Veneto\", abbreviation: \"VEN\" },\n                { name: \"Trentino Alto Adige\", abbreviation: \"TAA\" },\n                { name: \"Friuli Venezia Giulia\", abbreviation: \"FVG\" },\n                { name: \"Liguria\", abbreviation: \"LIG\" },\n                { name: \"Emilia Romagna\", abbreviation: \"EMR\" },\n                { name: \"Toscana\", abbreviation: \"TOS\" },\n                { name: \"Umbria\", abbreviation: \"UMB\" },\n                { name: \"Marche\", abbreviation: \"MAR\" },\n                { name: \"Abruzzo\", abbreviation: \"ABR\" },\n                { name: \"Lazio\", abbreviation: \"LAZ\" },\n                { name: \"Campania\", abbreviation: \"CAM\" },\n                { name: \"Puglia\", abbreviation: \"PUG\" },\n                { name: \"Basilicata\", abbreviation: \"BAS\" },\n                { name: \"Molise\", abbreviation: \"MOL\" },\n                { name: \"Calabria\", abbreviation: \"CAL\" },\n                { name: \"Sicilia\", abbreviation: \"SIC\" },\n                { name: \"Sardegna\", abbreviation: \"SAR\" }\n            ],\n            mx: [\n                { name: 'Aguascalientes', abbreviation: 'AGU' },\n                { name: 'Baja California', abbreviation: 'BCN' },\n                { name: 'Baja California Sur', abbreviation: 'BCS' },\n                { name: 'Campeche', abbreviation: 'CAM' },\n                { name: 'Chiapas', abbreviation: 'CHP' },\n                { name: 'Chihuahua', abbreviation: 'CHH' },\n                { name: 'Ciudad de México', abbreviation: 'DIF' },\n                { name: 'Coahuila', abbreviation: 'COA' },\n                { name: 'Colima', abbreviation: 'COL' },\n                { name: 'Durango', abbreviation: 'DUR' },\n                { name: 'Guanajuato', abbreviation: 'GUA' },\n                { name: 'Guerrero', abbreviation: 'GRO' },\n                { name: 'Hidalgo', abbreviation: 'HID' },\n                { name: 'Jalisco', abbreviation: 'JAL' },\n                { name: 'México', abbreviation: 'MEX' },\n                { name: 'Michoacán', abbreviation: 'MIC' },\n                { name: 'Morelos', abbreviation: 'MOR' },\n                { name: 'Nayarit', abbreviation: 'NAY' },\n                { name: 'Nuevo León', abbreviation: 'NLE' },\n                { name: 'Oaxaca', abbreviation: 'OAX' },\n                { name: 'Puebla', abbreviation: 'PUE' },\n                { name: 'Querétaro', abbreviation: 'QUE' },\n                { name: 'Quintana Roo', abbreviation: 'ROO' },\n                { name: 'San Luis Potosí', abbreviation: 'SLP' },\n                { name: 'Sinaloa', abbreviation: 'SIN' },\n                { name: 'Sonora', abbreviation: 'SON' },\n                { name: 'Tabasco', abbreviation: 'TAB' },\n                { name: 'Tamaulipas', abbreviation: 'TAM' },\n                { name: 'Tlaxcala', abbreviation: 'TLA' },\n                { name: 'Veracruz', abbreviation: 'VER' },\n                { name: 'Yucatán', abbreviation: 'YUC' },\n                { name: 'Zacatecas', abbreviation: 'ZAC' }\n            ]\n        },\n\n        street_suffixes: {\n            'us': [\n                {name: 'Avenue', abbreviation: 'Ave'},\n                {name: 'Boulevard', abbreviation: 'Blvd'},\n                {name: 'Center', abbreviation: 'Ctr'},\n                {name: 'Circle', abbreviation: 'Cir'},\n                {name: 'Court', abbreviation: 'Ct'},\n                {name: 'Drive', abbreviation: 'Dr'},\n                {name: 'Extension', abbreviation: 'Ext'},\n                {name: 'Glen', abbreviation: 'Gln'},\n                {name: 'Grove', abbreviation: 'Grv'},\n                {name: 'Heights', abbreviation: 'Hts'},\n                {name: 'Highway', abbreviation: 'Hwy'},\n                {name: 'Junction', abbreviation: 'Jct'},\n                {name: 'Key', abbreviation: 'Key'},\n                {name: 'Lane', abbreviation: 'Ln'},\n                {name: 'Loop', abbreviation: 'Loop'},\n                {name: 'Manor', abbreviation: 'Mnr'},\n                {name: 'Mill', abbreviation: 'Mill'},\n                {name: 'Park', abbreviation: 'Park'},\n                {name: 'Parkway', abbreviation: 'Pkwy'},\n                {name: 'Pass', abbreviation: 'Pass'},\n                {name: 'Path', abbreviation: 'Path'},\n                {name: 'Pike', abbreviation: 'Pike'},\n                {name: 'Place', abbreviation: 'Pl'},\n                {name: 'Plaza', abbreviation: 'Plz'},\n                {name: 'Point', abbreviation: 'Pt'},\n                {name: 'Ridge', abbreviation: 'Rdg'},\n                {name: 'River', abbreviation: 'Riv'},\n                {name: 'Road', abbreviation: 'Rd'},\n                {name: 'Square', abbreviation: 'Sq'},\n                {name: 'Street', abbreviation: 'St'},\n                {name: 'Terrace', abbreviation: 'Ter'},\n                {name: 'Trail', abbreviation: 'Trl'},\n                {name: 'Turnpike', abbreviation: 'Tpke'},\n                {name: 'View', abbreviation: 'Vw'},\n                {name: 'Way', abbreviation: 'Way'}\n            ],\n            'it': [\n                { name: 'Accesso', abbreviation: 'Acc.' },\n                { name: 'Alzaia', abbreviation: 'Alz.' },\n                { name: 'Arco', abbreviation: 'Arco' },\n                { name: 'Archivolto', abbreviation: 'Acv.' },\n                { name: 'Arena', abbreviation: 'Arena' },\n                { name: 'Argine', abbreviation: 'Argine' },\n                { name: 'Bacino', abbreviation: 'Bacino' },\n                { name: 'Banchi', abbreviation: 'Banchi' },\n                { name: 'Banchina', abbreviation: 'Ban.' },\n                { name: 'Bastioni', abbreviation: 'Bas.' },\n                { name: 'Belvedere', abbreviation: 'Belv.' },\n                { name: 'Borgata', abbreviation: 'B.ta' },\n                { name: 'Borgo', abbreviation: 'B.go' },\n                { name: 'Calata', abbreviation: 'Cal.' },\n                { name: 'Calle', abbreviation: 'Calle' },\n                { name: 'Campiello', abbreviation: 'Cam.' },\n                { name: 'Campo', abbreviation: 'Cam.' },\n                { name: 'Canale', abbreviation: 'Can.' },\n                { name: 'Carraia', abbreviation: 'Carr.' },\n                { name: 'Cascina', abbreviation: 'Cascina' },\n                { name: 'Case sparse', abbreviation: 'c.s.' },\n                { name: 'Cavalcavia', abbreviation: 'Cv.' },\n                { name: 'Circonvallazione', abbreviation: 'Cv.' },\n                { name: 'Complanare', abbreviation: 'C.re' },\n                { name: 'Contrada', abbreviation: 'C.da' },\n                { name: 'Corso', abbreviation: 'C.so' },\n                { name: 'Corte', abbreviation: 'C.te' },\n                { name: 'Cortile', abbreviation: 'C.le' },\n                { name: 'Diramazione', abbreviation: 'Dir.' },\n                { name: 'Fondaco', abbreviation: 'F.co' },\n                { name: 'Fondamenta', abbreviation: 'F.ta' },\n                { name: 'Fondo', abbreviation: 'F.do' },\n                { name: 'Frazione', abbreviation: 'Fr.' },\n                { name: 'Isola', abbreviation: 'Is.' },\n                { name: 'Largo', abbreviation: 'L.go' },\n                { name: 'Litoranea', abbreviation: 'Lit.' },\n                { name: 'Lungolago', abbreviation: 'L.go lago' },\n                { name: 'Lungo Po', abbreviation: 'l.go Po' },\n                { name: 'Molo', abbreviation: 'Molo' },\n                { name: 'Mura', abbreviation: 'Mura' },\n                { name: 'Passaggio privato', abbreviation: 'pass. priv.' },\n                { name: 'Passeggiata', abbreviation: 'Pass.' },\n                { name: 'Piazza', abbreviation: 'P.zza' },\n                { name: 'Piazzale', abbreviation: 'P.le' },\n                { name: 'Ponte', abbreviation: 'P.te' },\n                { name: 'Portico', abbreviation: 'P.co' },\n                { name: 'Rampa', abbreviation: 'Rampa' },\n                { name: 'Regione', abbreviation: 'Reg.' },\n                { name: 'Rione', abbreviation: 'R.ne' },\n                { name: 'Rio', abbreviation: 'Rio' },\n                { name: 'Ripa', abbreviation: 'Ripa' },\n                { name: 'Riva', abbreviation: 'Riva' },\n                { name: 'Rondò', abbreviation: 'Rondò' },\n                { name: 'Rotonda', abbreviation: 'Rot.' },\n                { name: 'Sagrato', abbreviation: 'Sagr.' },\n                { name: 'Salita', abbreviation: 'Sal.' },\n                { name: 'Scalinata', abbreviation: 'Scal.' },\n                { name: 'Scalone', abbreviation: 'Scal.' },\n                { name: 'Slargo', abbreviation: 'Sl.' },\n                { name: 'Sottoportico', abbreviation: 'Sott.' },\n                { name: 'Strada', abbreviation: 'Str.' },\n                { name: 'Stradale', abbreviation: 'Str.le' },\n                { name: 'Strettoia', abbreviation: 'Strett.' },\n                { name: 'Traversa', abbreviation: 'Trav.' },\n                { name: 'Via', abbreviation: 'V.' },\n                { name: 'Viale', abbreviation: 'V.le' },\n                { name: 'Vicinale', abbreviation: 'Vic.le' },\n                { name: 'Vicolo', abbreviation: 'Vic.' }\n            ],\n            'uk' : [\n                {name: 'Avenue', abbreviation: 'Ave'},\n                {name: 'Close', abbreviation: 'Cl'},\n                {name: 'Court', abbreviation: 'Ct'},\n                {name: 'Crescent', abbreviation: 'Cr'},\n                {name: 'Drive', abbreviation: 'Dr'},\n                {name: 'Garden', abbreviation: 'Gdn'},\n                {name: 'Gardens', abbreviation: 'Gdns'},\n                {name: 'Green', abbreviation: 'Gn'},\n                {name: 'Grove', abbreviation: 'Gr'},\n                {name: 'Lane', abbreviation: 'Ln'},\n                {name: 'Mount', abbreviation: 'Mt'},\n                {name: 'Place', abbreviation: 'Pl'},\n                {name: 'Park', abbreviation: 'Pk'},\n                {name: 'Ridge', abbreviation: 'Rdg'},\n                {name: 'Road', abbreviation: 'Rd'},\n                {name: 'Square', abbreviation: 'Sq'},\n                {name: 'Street', abbreviation: 'St'},\n                {name: 'Terrace', abbreviation: 'Ter'},\n                {name: 'Valley', abbreviation: 'Val'}\n            ]\n        },\n\n        months: [\n            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},\n            // Not messing with leap years...\n            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},\n            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},\n            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},\n            {name: 'May', short_name: 'May', numeric: '05', days: 31},\n            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},\n            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},\n            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},\n            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},\n            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},\n            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},\n            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}\n        ],\n\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        cc_types: [\n            {name: \"American Express\", short_name: 'amex', prefix: '34', length: 15},\n            {name: \"Bankcard\", short_name: 'bankcard', prefix: '5610', length: 16},\n            {name: \"China UnionPay\", short_name: 'chinaunion', prefix: '62', length: 16},\n            {name: \"Diners Club Carte Blanche\", short_name: 'dccarte', prefix: '300', length: 14},\n            {name: \"Diners Club enRoute\", short_name: 'dcenroute', prefix: '2014', length: 15},\n            {name: \"Diners Club International\", short_name: 'dcintl', prefix: '36', length: 14},\n            {name: \"Diners Club United States & Canada\", short_name: 'dcusc', prefix: '54', length: 16},\n            {name: \"Discover Card\", short_name: 'discover', prefix: '6011', length: 16},\n            {name: \"InstaPayment\", short_name: 'instapay', prefix: '637', length: 16},\n            {name: \"JCB\", short_name: 'jcb', prefix: '3528', length: 16},\n            {name: \"Laser\", short_name: 'laser', prefix: '6304', length: 16},\n            {name: \"Maestro\", short_name: 'maestro', prefix: '5018', length: 16},\n            {name: \"Mastercard\", short_name: 'mc', prefix: '51', length: 16},\n            {name: \"Solo\", short_name: 'solo', prefix: '6334', length: 16},\n            {name: \"Switch\", short_name: 'switch', prefix: '4903', length: 16},\n            {name: \"Visa\", short_name: 'visa', prefix: '4', length: 16},\n            {name: \"Visa Electron\", short_name: 'electron', prefix: '4026', length: 16}\n        ],\n\n        //return all world currency by ISO 4217\n        currency_types: [\n            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},\n            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},\n            {'code' : 'ALL', 'name' : 'Albania Lek'},\n            {'code' : 'AMD', 'name' : 'Armenia Dram'},\n            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},\n            {'code' : 'AOA', 'name' : 'Angola Kwanza'},\n            {'code' : 'ARS', 'name' : 'Argentina Peso'},\n            {'code' : 'AUD', 'name' : 'Australia Dollar'},\n            {'code' : 'AWG', 'name' : 'Aruba Guilder'},\n            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},\n            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},\n            {'code' : 'BBD', 'name' : 'Barbados Dollar'},\n            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},\n            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},\n            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},\n            {'code' : 'BIF', 'name' : 'Burundi Franc'},\n            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},\n            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},\n            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},\n            {'code' : 'BRL', 'name' : 'Brazil Real'},\n            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},\n            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},\n            {'code' : 'BWP', 'name' : 'Botswana Pula'},\n            {'code' : 'BYR', 'name' : 'Belarus Ruble'},\n            {'code' : 'BZD', 'name' : 'Belize Dollar'},\n            {'code' : 'CAD', 'name' : 'Canada Dollar'},\n            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},\n            {'code' : 'CHF', 'name' : 'Switzerland Franc'},\n            {'code' : 'CLP', 'name' : 'Chile Peso'},\n            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},\n            {'code' : 'COP', 'name' : 'Colombia Peso'},\n            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},\n            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},\n            {'code' : 'CUP', 'name' : 'Cuba Peso'},\n            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},\n            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},\n            {'code' : 'DJF', 'name' : 'Djibouti Franc'},\n            {'code' : 'DKK', 'name' : 'Denmark Krone'},\n            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},\n            {'code' : 'DZD', 'name' : 'Algeria Dinar'},\n            {'code' : 'EGP', 'name' : 'Egypt Pound'},\n            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},\n            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},\n            {'code' : 'EUR', 'name' : 'Euro Member Countries'},\n            {'code' : 'FJD', 'name' : 'Fiji Dollar'},\n            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},\n            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},\n            {'code' : 'GEL', 'name' : 'Georgia Lari'},\n            {'code' : 'GGP', 'name' : 'Guernsey Pound'},\n            {'code' : 'GHS', 'name' : 'Ghana Cedi'},\n            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},\n            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},\n            {'code' : 'GNF', 'name' : 'Guinea Franc'},\n            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},\n            {'code' : 'GYD', 'name' : 'Guyana Dollar'},\n            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},\n            {'code' : 'HNL', 'name' : 'Honduras Lempira'},\n            {'code' : 'HRK', 'name' : 'Croatia Kuna'},\n            {'code' : 'HTG', 'name' : 'Haiti Gourde'},\n            {'code' : 'HUF', 'name' : 'Hungary Forint'},\n            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},\n            {'code' : 'ILS', 'name' : 'Israel Shekel'},\n            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},\n            {'code' : 'INR', 'name' : 'India Rupee'},\n            {'code' : 'IQD', 'name' : 'Iraq Dinar'},\n            {'code' : 'IRR', 'name' : 'Iran Rial'},\n            {'code' : 'ISK', 'name' : 'Iceland Krona'},\n            {'code' : 'JEP', 'name' : 'Jersey Pound'},\n            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},\n            {'code' : 'JOD', 'name' : 'Jordan Dinar'},\n            {'code' : 'JPY', 'name' : 'Japan Yen'},\n            {'code' : 'KES', 'name' : 'Kenya Shilling'},\n            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},\n            {'code' : 'KHR', 'name' : 'Cambodia Riel'},\n            {'code' : 'KMF', 'name' : 'Comoros Franc'},\n            {'code' : 'KPW', 'name' : 'Korea (North) Won'},\n            {'code' : 'KRW', 'name' : 'Korea (South) Won'},\n            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},\n            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},\n            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},\n            {'code' : 'LAK', 'name' : 'Laos Kip'},\n            {'code' : 'LBP', 'name' : 'Lebanon Pound'},\n            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},\n            {'code' : 'LRD', 'name' : 'Liberia Dollar'},\n            {'code' : 'LSL', 'name' : 'Lesotho Loti'},\n            {'code' : 'LTL', 'name' : 'Lithuania Litas'},\n            {'code' : 'LYD', 'name' : 'Libya Dinar'},\n            {'code' : 'MAD', 'name' : 'Morocco Dirham'},\n            {'code' : 'MDL', 'name' : 'Moldova Leu'},\n            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},\n            {'code' : 'MKD', 'name' : 'Macedonia Denar'},\n            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},\n            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},\n            {'code' : 'MOP', 'name' : 'Macau Pataca'},\n            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},\n            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},\n            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},\n            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},\n            {'code' : 'MXN', 'name' : 'Mexico Peso'},\n            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},\n            {'code' : 'MZN', 'name' : 'Mozambique Metical'},\n            {'code' : 'NAD', 'name' : 'Namibia Dollar'},\n            {'code' : 'NGN', 'name' : 'Nigeria Naira'},\n            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},\n            {'code' : 'NOK', 'name' : 'Norway Krone'},\n            {'code' : 'NPR', 'name' : 'Nepal Rupee'},\n            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},\n            {'code' : 'OMR', 'name' : 'Oman Rial'},\n            {'code' : 'PAB', 'name' : 'Panama Balboa'},\n            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},\n            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},\n            {'code' : 'PHP', 'name' : 'Philippines Peso'},\n            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},\n            {'code' : 'PLN', 'name' : 'Poland Zloty'},\n            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},\n            {'code' : 'QAR', 'name' : 'Qatar Riyal'},\n            {'code' : 'RON', 'name' : 'Romania New Leu'},\n            {'code' : 'RSD', 'name' : 'Serbia Dinar'},\n            {'code' : 'RUB', 'name' : 'Russia Ruble'},\n            {'code' : 'RWF', 'name' : 'Rwanda Franc'},\n            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},\n            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},\n            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},\n            {'code' : 'SDG', 'name' : 'Sudan Pound'},\n            {'code' : 'SEK', 'name' : 'Sweden Krona'},\n            {'code' : 'SGD', 'name' : 'Singapore Dollar'},\n            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},\n            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},\n            {'code' : 'SOS', 'name' : 'Somalia Shilling'},\n            {'code' : 'SPL', 'name' : 'Seborga Luigino'},\n            {'code' : 'SRD', 'name' : 'Suriname Dollar'},\n            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},\n            {'code' : 'SVC', 'name' : 'El Salvador Colon'},\n            {'code' : 'SYP', 'name' : 'Syria Pound'},\n            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},\n            {'code' : 'THB', 'name' : 'Thailand Baht'},\n            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},\n            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},\n            {'code' : 'TND', 'name' : 'Tunisia Dinar'},\n            {'code' : 'TOP', 'name' : 'Tonga Pa\\'anga'},\n            {'code' : 'TRY', 'name' : 'Turkey Lira'},\n            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},\n            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},\n            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},\n            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},\n            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},\n            {'code' : 'UGX', 'name' : 'Uganda Shilling'},\n            {'code' : 'USD', 'name' : 'United States Dollar'},\n            {'code' : 'UYU', 'name' : 'Uruguay Peso'},\n            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},\n            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},\n            {'code' : 'VND', 'name' : 'Viet Nam Dong'},\n            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},\n            {'code' : 'WST', 'name' : 'Samoa Tala'},\n            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},\n            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},\n            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},\n            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},\n            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},\n            {'code' : 'YER', 'name' : 'Yemen Rial'},\n            {'code' : 'ZAR', 'name' : 'South Africa Rand'},\n            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},\n            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}\n        ],\n\n        // return the names of all valide colors\n        colorNames : [  \"AliceBlue\", \"Black\", \"Navy\", \"DarkBlue\", \"MediumBlue\", \"Blue\", \"DarkGreen\", \"Green\", \"Teal\", \"DarkCyan\", \"DeepSkyBlue\", \"DarkTurquoise\", \"MediumSpringGreen\", \"Lime\", \"SpringGreen\",\n            \"Aqua\", \"Cyan\", \"MidnightBlue\", \"DodgerBlue\", \"LightSeaGreen\", \"ForestGreen\", \"SeaGreen\", \"DarkSlateGray\", \"LimeGreen\", \"MediumSeaGreen\", \"Turquoise\", \"RoyalBlue\", \"SteelBlue\", \"DarkSlateBlue\", \"MediumTurquoise\",\n            \"Indigo\", \"DarkOliveGreen\", \"CadetBlue\", \"CornflowerBlue\", \"RebeccaPurple\", \"MediumAquaMarine\", \"DimGray\", \"SlateBlue\", \"OliveDrab\", \"SlateGray\", \"LightSlateGray\", \"MediumSlateBlue\", \"LawnGreen\", \"Chartreuse\",\n            \"Aquamarine\", \"Maroon\", \"Purple\", \"Olive\", \"Gray\", \"SkyBlue\", \"LightSkyBlue\", \"BlueViolet\", \"DarkRed\", \"DarkMagenta\", \"SaddleBrown\", \"Ivory\", \"White\",\n            \"DarkSeaGreen\", \"LightGreen\", \"MediumPurple\", \"DarkViolet\", \"PaleGreen\", \"DarkOrchid\", \"YellowGreen\", \"Sienna\", \"Brown\", \"DarkGray\", \"LightBlue\", \"GreenYellow\", \"PaleTurquoise\", \"LightSteelBlue\", \"PowderBlue\",\n            \"FireBrick\", \"DarkGoldenRod\", \"MediumOrchid\", \"RosyBrown\", \"DarkKhaki\", \"Silver\", \"MediumVioletRed\", \"IndianRed\", \"Peru\", \"Chocolate\", \"Tan\", \"LightGray\", \"Thistle\", \"Orchid\", \"GoldenRod\", \"PaleVioletRed\",\n            \"Crimson\", \"Gainsboro\", \"Plum\", \"BurlyWood\", \"LightCyan\", \"Lavender\", \"DarkSalmon\", \"Violet\", \"PaleGoldenRod\", \"LightCoral\", \"Khaki\", \"AliceBlue\", \"HoneyDew\", \"Azure\", \"SandyBrown\", \"Wheat\", \"Beige\", \"WhiteSmoke\",\n            \"MintCream\", \"GhostWhite\", \"Salmon\", \"AntiqueWhite\", \"Linen\", \"LightGoldenRodYellow\", \"OldLace\", \"Red\", \"Fuchsia\", \"Magenta\", \"DeepPink\", \"OrangeRed\", \"Tomato\", \"HotPink\", \"Coral\", \"DarkOrange\", \"LightSalmon\", \"Orange\",\n            \"LightPink\", \"Pink\", \"Gold\", \"PeachPuff\", \"NavajoWhite\", \"Moccasin\", \"Bisque\", \"MistyRose\", \"BlanchedAlmond\", \"PapayaWhip\", \"LavenderBlush\", \"SeaShell\", \"Cornsilk\", \"LemonChiffon\", \"FloralWhite\", \"Snow\", \"Yellow\", \"LightYellow\"\n        ],\n\n        // Data taken from https://www.sec.gov/rules/other/4-460list.htm\n        company: [ \"3Com Corp\",\n        \"3M Company\",\n        \"A.G. Edwards Inc.\",\n        \"Abbott Laboratories\",\n        \"Abercrombie & Fitch Co.\",\n        \"ABM Industries Incorporated\",\n        \"Ace Hardware Corporation\",\n        \"ACT Manufacturing Inc.\",\n        \"Acterna Corp.\",\n        \"Adams Resources & Energy, Inc.\",\n        \"ADC Telecommunications, Inc.\",\n        \"Adelphia Communications Corporation\",\n        \"Administaff, Inc.\",\n        \"Adobe Systems Incorporated\",\n        \"Adolph Coors Company\",\n        \"Advance Auto Parts, Inc.\",\n        \"Advanced Micro Devices, Inc.\",\n        \"AdvancePCS, Inc.\",\n        \"Advantica Restaurant Group, Inc.\",\n        \"The AES Corporation\",\n        \"Aetna Inc.\",\n        \"Affiliated Computer Services, Inc.\",\n        \"AFLAC Incorporated\",\n        \"AGCO Corporation\",\n        \"Agilent Technologies, Inc.\",\n        \"Agway Inc.\",\n        \"Apartment Investment and Management Company\",\n        \"Air Products and Chemicals, Inc.\",\n        \"Airborne, Inc.\",\n        \"Airgas, Inc.\",\n        \"AK Steel Holding Corporation\",\n        \"Alaska Air Group, Inc.\",\n        \"Alberto-Culver Company\",\n        \"Albertson's, Inc.\",\n        \"Alcoa Inc.\",\n        \"Alleghany Corporation\",\n        \"Allegheny Energy, Inc.\",\n        \"Allegheny Technologies Incorporated\",\n        \"Allergan, Inc.\",\n        \"ALLETE, Inc.\",\n        \"Alliant Energy Corporation\",\n        \"Allied Waste Industries, Inc.\",\n        \"Allmerica Financial Corporation\",\n        \"The Allstate Corporation\",\n        \"ALLTEL Corporation\",\n        \"The Alpine Group, Inc.\",\n        \"Amazon.com, Inc.\",\n        \"AMC Entertainment Inc.\",\n        \"American Power Conversion Corporation\",\n        \"Amerada Hess Corporation\",\n        \"AMERCO\",\n        \"Ameren Corporation\",\n        \"America West Holdings Corporation\",\n        \"American Axle & Manufacturing Holdings, Inc.\",\n        \"American Eagle Outfitters, Inc.\",\n        \"American Electric Power Company, Inc.\",\n        \"American Express Company\",\n        \"American Financial Group, Inc.\",\n        \"American Greetings Corporation\",\n        \"American International Group, Inc.\",\n        \"American Standard Companies Inc.\",\n        \"American Water Works Company, Inc.\",\n        \"AmerisourceBergen Corporation\",\n        \"Ames Department Stores, Inc.\",\n        \"Amgen Inc.\",\n        \"Amkor Technology, Inc.\",\n        \"AMR Corporation\",\n        \"AmSouth Bancorp.\",\n        \"Amtran, Inc.\",\n        \"Anadarko Petroleum Corporation\",\n        \"Analog Devices, Inc.\",\n        \"Anheuser-Busch Companies, Inc.\",\n        \"Anixter International Inc.\",\n        \"AnnTaylor Inc.\",\n        \"Anthem, Inc.\",\n        \"AOL Time Warner Inc.\",\n        \"Aon Corporation\",\n        \"Apache Corporation\",\n        \"Apple Computer, Inc.\",\n        \"Applera Corporation\",\n        \"Applied Industrial Technologies, Inc.\",\n        \"Applied Materials, Inc.\",\n        \"Aquila, Inc.\",\n        \"ARAMARK Corporation\",\n        \"Arch Coal, Inc.\",\n        \"Archer Daniels Midland Company\",\n        \"Arkansas Best Corporation\",\n        \"Armstrong Holdings, Inc.\",\n        \"Arrow Electronics, Inc.\",\n        \"ArvinMeritor, Inc.\",\n        \"Ashland Inc.\",\n        \"Astoria Financial Corporation\",\n        \"AT&T Corp.\",\n        \"Atmel Corporation\",\n        \"Atmos Energy Corporation\",\n        \"Audiovox Corporation\",\n        \"Autoliv, Inc.\",\n        \"Automatic Data Processing, Inc.\",\n        \"AutoNation, Inc.\",\n        \"AutoZone, Inc.\",\n        \"Avaya Inc.\",\n        \"Avery Dennison Corporation\",\n        \"Avista Corporation\",\n        \"Avnet, Inc.\",\n        \"Avon Products, Inc.\",\n        \"Baker Hughes Incorporated\",\n        \"Ball Corporation\",\n        \"Bank of America Corporation\",\n        \"The Bank of New York Company, Inc.\",\n        \"Bank One Corporation\",\n        \"Banknorth Group, Inc.\",\n        \"Banta Corporation\",\n        \"Barnes & Noble, Inc.\",\n        \"Bausch & Lomb Incorporated\",\n        \"Baxter International Inc.\",\n        \"BB&T Corporation\",\n        \"The Bear Stearns Companies Inc.\",\n        \"Beazer Homes USA, Inc.\",\n        \"Beckman Coulter, Inc.\",\n        \"Becton, Dickinson and Company\",\n        \"Bed Bath & Beyond Inc.\",\n        \"Belk, Inc.\",\n        \"Bell Microproducts Inc.\",\n        \"BellSouth Corporation\",\n        \"Belo Corp.\",\n        \"Bemis Company, Inc.\",\n        \"Benchmark Electronics, Inc.\",\n        \"Berkshire Hathaway Inc.\",\n        \"Best Buy Co., Inc.\",\n        \"Bethlehem Steel Corporation\",\n        \"Beverly Enterprises, Inc.\",\n        \"Big Lots, Inc.\",\n        \"BJ Services Company\",\n        \"BJ's Wholesale Club, Inc.\",\n        \"The Black & Decker Corporation\",\n        \"Black Hills Corporation\",\n        \"BMC Software, Inc.\",\n        \"The Boeing Company\",\n        \"Boise Cascade Corporation\",\n        \"Borders Group, Inc.\",\n        \"BorgWarner Inc.\",\n        \"Boston Scientific Corporation\",\n        \"Bowater Incorporated\",\n        \"Briggs & Stratton Corporation\",\n        \"Brightpoint, Inc.\",\n        \"Brinker International, Inc.\",\n        \"Bristol-Myers Squibb Company\",\n        \"Broadwing, Inc.\",\n        \"Brown Shoe Company, Inc.\",\n        \"Brown-Forman Corporation\",\n        \"Brunswick Corporation\",\n        \"Budget Group, Inc.\",\n        \"Burlington Coat Factory Warehouse Corporation\",\n        \"Burlington Industries, Inc.\",\n        \"Burlington Northern Santa Fe Corporation\",\n        \"Burlington Resources Inc.\",\n        \"C. H. Robinson Worldwide Inc.\",\n        \"Cablevision Systems Corp\",\n        \"Cabot Corp\",\n        \"Cadence Design Systems, Inc.\",\n        \"Calpine Corp.\",\n        \"Campbell Soup Co.\",\n        \"Capital One Financial Corp.\",\n        \"Cardinal Health Inc.\",\n        \"Caremark Rx Inc.\",\n        \"Carlisle Cos. Inc.\",\n        \"Carpenter Technology Corp.\",\n        \"Casey's General Stores Inc.\",\n        \"Caterpillar Inc.\",\n        \"CBRL Group Inc.\",\n        \"CDI Corp.\",\n        \"CDW Computer Centers Inc.\",\n        \"CellStar Corp.\",\n        \"Cendant Corp\",\n        \"Cenex Harvest States Cooperatives\",\n        \"Centex Corp.\",\n        \"CenturyTel Inc.\",\n        \"Ceridian Corp.\",\n        \"CH2M Hill Cos. Ltd.\",\n        \"Champion Enterprises Inc.\",\n        \"Charles Schwab Corp.\",\n        \"Charming Shoppes Inc.\",\n        \"Charter Communications Inc.\",\n        \"Charter One Financial Inc.\",\n        \"ChevronTexaco Corp.\",\n        \"Chiquita Brands International Inc.\",\n        \"Chubb Corp\",\n        \"Ciena Corp.\",\n        \"Cigna Corp\",\n        \"Cincinnati Financial Corp.\",\n        \"Cinergy Corp.\",\n        \"Cintas Corp.\",\n        \"Circuit City Stores Inc.\",\n        \"Cisco Systems Inc.\",\n        \"Citigroup, Inc\",\n        \"Citizens Communications Co.\",\n        \"CKE Restaurants Inc.\",\n        \"Clear Channel Communications Inc.\",\n        \"The Clorox Co.\",\n        \"CMGI Inc.\",\n        \"CMS Energy Corp.\",\n        \"CNF Inc.\",\n        \"Coca-Cola Co.\",\n        \"Coca-Cola Enterprises Inc.\",\n        \"Colgate-Palmolive Co.\",\n        \"Collins & Aikman Corp.\",\n        \"Comcast Corp.\",\n        \"Comdisco Inc.\",\n        \"Comerica Inc.\",\n        \"Comfort Systems USA Inc.\",\n        \"Commercial Metals Co.\",\n        \"Community Health Systems Inc.\",\n        \"Compass Bancshares Inc\",\n        \"Computer Associates International Inc.\",\n        \"Computer Sciences Corp.\",\n        \"Compuware Corp.\",\n        \"Comverse Technology Inc.\",\n        \"ConAgra Foods Inc.\",\n        \"Concord EFS Inc.\",\n        \"Conectiv, Inc\",\n        \"Conoco Inc\",\n        \"Conseco Inc.\",\n        \"Consolidated Freightways Corp.\",\n        \"Consolidated Edison Inc.\",\n        \"Constellation Brands Inc.\",\n        \"Constellation Emergy Group Inc.\",\n        \"Continental Airlines Inc.\",\n        \"Convergys Corp.\",\n        \"Cooper Cameron Corp.\",\n        \"Cooper Industries Ltd.\",\n        \"Cooper Tire & Rubber Co.\",\n        \"Corn Products International Inc.\",\n        \"Corning Inc.\",\n        \"Costco Wholesale Corp.\",\n        \"Countrywide Credit Industries Inc.\",\n        \"Coventry Health Care Inc.\",\n        \"Cox Communications Inc.\",\n        \"Crane Co.\",\n        \"Crompton Corp.\",\n        \"Crown Cork & Seal Co. Inc.\",\n        \"CSK Auto Corp.\",\n        \"CSX Corp.\",\n        \"Cummins Inc.\",\n        \"CVS Corp.\",\n        \"Cytec Industries Inc.\",\n        \"D&K Healthcare Resources, Inc.\",\n        \"D.R. Horton Inc.\",\n        \"Dana Corporation\",\n        \"Danaher Corporation\",\n        \"Darden Restaurants Inc.\",\n        \"DaVita Inc.\",\n        \"Dean Foods Company\",\n        \"Deere & Company\",\n        \"Del Monte Foods Co\",\n        \"Dell Computer Corporation\",\n        \"Delphi Corp.\",\n        \"Delta Air Lines Inc.\",\n        \"Deluxe Corporation\",\n        \"Devon Energy Corporation\",\n        \"Di Giorgio Corporation\",\n        \"Dial Corporation\",\n        \"Diebold Incorporated\",\n        \"Dillard's Inc.\",\n        \"DIMON Incorporated\",\n        \"Dole Food Company, Inc.\",\n        \"Dollar General Corporation\",\n        \"Dollar Tree Stores, Inc.\",\n        \"Dominion Resources, Inc.\",\n        \"Domino's Pizza LLC\",\n        \"Dover Corporation, Inc.\",\n        \"Dow Chemical Company\",\n        \"Dow Jones & Company, Inc.\",\n        \"DPL Inc.\",\n        \"DQE Inc.\",\n        \"Dreyer's Grand Ice Cream, Inc.\",\n        \"DST Systems, Inc.\",\n        \"DTE Energy Co.\",\n        \"E.I. Du Pont de Nemours and Company\",\n        \"Duke Energy Corp\",\n        \"Dun & Bradstreet Inc.\",\n        \"DURA Automotive Systems Inc.\",\n        \"DynCorp\",\n        \"Dynegy Inc.\",\n        \"E*Trade Group, Inc.\",\n        \"E.W. Scripps Company\",\n        \"Earthlink, Inc.\",\n        \"Eastman Chemical Company\",\n        \"Eastman Kodak Company\",\n        \"Eaton Corporation\",\n        \"Echostar Communications Corporation\",\n        \"Ecolab Inc.\",\n        \"Edison International\",\n        \"EGL Inc.\",\n        \"El Paso Corporation\",\n        \"Electronic Arts Inc.\",\n        \"Electronic Data Systems Corp.\",\n        \"Eli Lilly and Company\",\n        \"EMC Corporation\",\n        \"Emcor Group Inc.\",\n        \"Emerson Electric Co.\",\n        \"Encompass Services Corporation\",\n        \"Energizer Holdings Inc.\",\n        \"Energy East Corporation\",\n        \"Engelhard Corporation\",\n        \"Enron Corp.\",\n        \"Entergy Corporation\",\n        \"Enterprise Products Partners L.P.\",\n        \"EOG Resources, Inc.\",\n        \"Equifax Inc.\",\n        \"Equitable Resources Inc.\",\n        \"Equity Office Properties Trust\",\n        \"Equity Residential Properties Trust\",\n        \"Estee Lauder Companies Inc.\",\n        \"Exelon Corporation\",\n        \"Exide Technologies\",\n        \"Expeditors International of Washington Inc.\",\n        \"Express Scripts Inc.\",\n        \"ExxonMobil Corporation\",\n        \"Fairchild Semiconductor International Inc.\",\n        \"Family Dollar Stores Inc.\",\n        \"Farmland Industries Inc.\",\n        \"Federal Mogul Corp.\",\n        \"Federated Department Stores Inc.\",\n        \"Federal Express Corp.\",\n        \"Felcor Lodging Trust Inc.\",\n        \"Ferro Corp.\",\n        \"Fidelity National Financial Inc.\",\n        \"Fifth Third Bancorp\",\n        \"First American Financial Corp.\",\n        \"First Data Corp.\",\n        \"First National of Nebraska Inc.\",\n        \"First Tennessee National Corp.\",\n        \"FirstEnergy Corp.\",\n        \"Fiserv Inc.\",\n        \"Fisher Scientific International Inc.\",\n        \"FleetBoston Financial Co.\",\n        \"Fleetwood Enterprises Inc.\",\n        \"Fleming Companies Inc.\",\n        \"Flowers Foods Inc.\",\n        \"Flowserv Corp\",\n        \"Fluor Corp\",\n        \"FMC Corp\",\n        \"Foamex International Inc\",\n        \"Foot Locker Inc\",\n        \"Footstar Inc.\",\n        \"Ford Motor Co\",\n        \"Forest Laboratories Inc.\",\n        \"Fortune Brands Inc.\",\n        \"Foster Wheeler Ltd.\",\n        \"FPL Group Inc.\",\n        \"Franklin Resources Inc.\",\n        \"Freeport McMoran Copper & Gold Inc.\",\n        \"Frontier Oil Corp\",\n        \"Furniture Brands International Inc.\",\n        \"Gannett Co., Inc.\",\n        \"Gap Inc.\",\n        \"Gateway Inc.\",\n        \"GATX Corporation\",\n        \"Gemstar-TV Guide International Inc.\",\n        \"GenCorp Inc.\",\n        \"General Cable Corporation\",\n        \"General Dynamics Corporation\",\n        \"General Electric Company\",\n        \"General Mills Inc\",\n        \"General Motors Corporation\",\n        \"Genesis Health Ventures Inc.\",\n        \"Gentek Inc.\",\n        \"Gentiva Health Services Inc.\",\n        \"Genuine Parts Company\",\n        \"Genuity Inc.\",\n        \"Genzyme Corporation\",\n        \"Georgia Gulf Corporation\",\n        \"Georgia-Pacific Corporation\",\n        \"Gillette Company\",\n        \"Gold Kist Inc.\",\n        \"Golden State Bancorp Inc.\",\n        \"Golden West Financial Corporation\",\n        \"Goldman Sachs Group Inc.\",\n        \"Goodrich Corporation\",\n        \"The Goodyear Tire & Rubber Company\",\n        \"Granite Construction Incorporated\",\n        \"Graybar Electric Company Inc.\",\n        \"Great Lakes Chemical Corporation\",\n        \"Great Plains Energy Inc.\",\n        \"GreenPoint Financial Corp.\",\n        \"Greif Bros. Corporation\",\n        \"Grey Global Group Inc.\",\n        \"Group 1 Automotive Inc.\",\n        \"Guidant Corporation\",\n        \"H&R Block Inc.\",\n        \"H.B. Fuller Company\",\n        \"H.J. Heinz Company\",\n        \"Halliburton Co.\",\n        \"Harley-Davidson Inc.\",\n        \"Harman International Industries Inc.\",\n        \"Harrah's Entertainment Inc.\",\n        \"Harris Corp.\",\n        \"Harsco Corp.\",\n        \"Hartford Financial Services Group Inc.\",\n        \"Hasbro Inc.\",\n        \"Hawaiian Electric Industries Inc.\",\n        \"HCA Inc.\",\n        \"Health Management Associates Inc.\",\n        \"Health Net Inc.\",\n        \"Healthsouth Corp\",\n        \"Henry Schein Inc.\",\n        \"Hercules Inc.\",\n        \"Herman Miller Inc.\",\n        \"Hershey Foods Corp.\",\n        \"Hewlett-Packard Company\",\n        \"Hibernia Corp.\",\n        \"Hillenbrand Industries Inc.\",\n        \"Hilton Hotels Corp.\",\n        \"Hollywood Entertainment Corp.\",\n        \"Home Depot Inc.\",\n        \"Hon Industries Inc.\",\n        \"Honeywell International Inc.\",\n        \"Hormel Foods Corp.\",\n        \"Host Marriott Corp.\",\n        \"Household International Corp.\",\n        \"Hovnanian Enterprises Inc.\",\n        \"Hub Group Inc.\",\n        \"Hubbell Inc.\",\n        \"Hughes Supply Inc.\",\n        \"Humana Inc.\",\n        \"Huntington Bancshares Inc.\",\n        \"Idacorp Inc.\",\n        \"IDT Corporation\",\n        \"IKON Office Solutions Inc.\",\n        \"Illinois Tool Works Inc.\",\n        \"IMC Global Inc.\",\n        \"Imperial Sugar Company\",\n        \"IMS Health Inc.\",\n        \"Ingles Market Inc\",\n        \"Ingram Micro Inc.\",\n        \"Insight Enterprises Inc.\",\n        \"Integrated Electrical Services Inc.\",\n        \"Intel Corporation\",\n        \"International Paper Co.\",\n        \"Interpublic Group of Companies Inc.\",\n        \"Interstate Bakeries Corporation\",\n        \"International Business Machines Corp.\",\n        \"International Flavors & Fragrances Inc.\",\n        \"International Multifoods Corporation\",\n        \"Intuit Inc.\",\n        \"IT Group Inc.\",\n        \"ITT Industries Inc.\",\n        \"Ivax Corp.\",\n        \"J.B. Hunt Transport Services Inc.\",\n        \"J.C. Penny Co.\",\n        \"J.P. Morgan Chase & Co.\",\n        \"Jabil Circuit Inc.\",\n        \"Jack In The Box Inc.\",\n        \"Jacobs Engineering Group Inc.\",\n        \"JDS Uniphase Corp.\",\n        \"Jefferson-Pilot Co.\",\n        \"John Hancock Financial Services Inc.\",\n        \"Johnson & Johnson\",\n        \"Johnson Controls Inc.\",\n        \"Jones Apparel Group Inc.\",\n        \"KB Home\",\n        \"Kellogg Company\",\n        \"Kellwood Company\",\n        \"Kelly Services Inc.\",\n        \"Kemet Corp.\",\n        \"Kennametal Inc.\",\n        \"Kerr-McGee Corporation\",\n        \"KeyCorp\",\n        \"KeySpan Corp.\",\n        \"Kimball International Inc.\",\n        \"Kimberly-Clark Corporation\",\n        \"Kindred Healthcare Inc.\",\n        \"KLA-Tencor Corporation\",\n        \"K-Mart Corp.\",\n        \"Knight-Ridder Inc.\",\n        \"Kohl's Corp.\",\n        \"KPMG Consulting Inc.\",\n        \"Kroger Co.\",\n        \"L-3 Communications Holdings Inc.\",\n        \"Laboratory Corporation of America Holdings\",\n        \"Lam Research Corporation\",\n        \"LandAmerica Financial Group Inc.\",\n        \"Lands' End Inc.\",\n        \"Landstar System Inc.\",\n        \"La-Z-Boy Inc.\",\n        \"Lear Corporation\",\n        \"Legg Mason Inc.\",\n        \"Leggett & Platt Inc.\",\n        \"Lehman Brothers Holdings Inc.\",\n        \"Lennar Corporation\",\n        \"Lennox International Inc.\",\n        \"Level 3 Communications Inc.\",\n        \"Levi Strauss & Co.\",\n        \"Lexmark International Inc.\",\n        \"Limited Inc.\",\n        \"Lincoln National Corporation\",\n        \"Linens 'n Things Inc.\",\n        \"Lithia Motors Inc.\",\n        \"Liz Claiborne Inc.\",\n        \"Lockheed Martin Corporation\",\n        \"Loews Corporation\",\n        \"Longs Drug Stores Corporation\",\n        \"Louisiana-Pacific Corporation\",\n        \"Lowe's Companies Inc.\",\n        \"LSI Logic Corporation\",\n        \"The LTV Corporation\",\n        \"The Lubrizol Corporation\",\n        \"Lucent Technologies Inc.\",\n        \"Lyondell Chemical Company\",\n        \"M & T Bank Corporation\",\n        \"Magellan Health Services Inc.\",\n        \"Mail-Well Inc.\",\n        \"Mandalay Resort Group\",\n        \"Manor Care Inc.\",\n        \"Manpower Inc.\",\n        \"Marathon Oil Corporation\",\n        \"Mariner Health Care Inc.\",\n        \"Markel Corporation\",\n        \"Marriott International Inc.\",\n        \"Marsh & McLennan Companies Inc.\",\n        \"Marsh Supermarkets Inc.\",\n        \"Marshall & Ilsley Corporation\",\n        \"Martin Marietta Materials Inc.\",\n        \"Masco Corporation\",\n        \"Massey Energy Company\",\n        \"MasTec Inc.\",\n        \"Mattel Inc.\",\n        \"Maxim Integrated Products Inc.\",\n        \"Maxtor Corporation\",\n        \"Maxxam Inc.\",\n        \"The May Department Stores Company\",\n        \"Maytag Corporation\",\n        \"MBNA Corporation\",\n        \"McCormick & Company Incorporated\",\n        \"McDonald's Corporation\",\n        \"The McGraw-Hill Companies Inc.\",\n        \"McKesson Corporation\",\n        \"McLeodUSA Incorporated\",\n        \"M.D.C. Holdings Inc.\",\n        \"MDU Resources Group Inc.\",\n        \"MeadWestvaco Corporation\",\n        \"Medtronic Inc.\",\n        \"Mellon Financial Corporation\",\n        \"The Men's Wearhouse Inc.\",\n        \"Merck & Co., Inc.\",\n        \"Mercury General Corporation\",\n        \"Merrill Lynch & Co. Inc.\",\n        \"Metaldyne Corporation\",\n        \"Metals USA Inc.\",\n        \"MetLife Inc.\",\n        \"Metris Companies Inc\",\n        \"MGIC Investment Corporation\",\n        \"MGM Mirage\",\n        \"Michaels Stores Inc.\",\n        \"Micron Technology Inc.\",\n        \"Microsoft Corporation\",\n        \"Milacron Inc.\",\n        \"Millennium Chemicals Inc.\",\n        \"Mirant Corporation\",\n        \"Mohawk Industries Inc.\",\n        \"Molex Incorporated\",\n        \"The MONY Group Inc.\",\n        \"Morgan Stanley Dean Witter & Co.\",\n        \"Motorola Inc.\",\n        \"MPS Group Inc.\",\n        \"Murphy Oil Corporation\",\n        \"Nabors Industries Inc\",\n        \"Nacco Industries Inc\",\n        \"Nash Finch Company\",\n        \"National City Corp.\",\n        \"National Commerce Financial Corporation\",\n        \"National Fuel Gas Company\",\n        \"National Oilwell Inc\",\n        \"National Rural Utilities Cooperative Finance Corporation\",\n        \"National Semiconductor Corporation\",\n        \"National Service Industries Inc\",\n        \"Navistar International Corporation\",\n        \"NCR Corporation\",\n        \"The Neiman Marcus Group Inc.\",\n        \"New Jersey Resources Corporation\",\n        \"New York Times Company\",\n        \"Newell Rubbermaid Inc\",\n        \"Newmont Mining Corporation\",\n        \"Nextel Communications Inc\",\n        \"Nicor Inc\",\n        \"Nike Inc\",\n        \"NiSource Inc\",\n        \"Noble Energy Inc\",\n        \"Nordstrom Inc\",\n        \"Norfolk Southern Corporation\",\n        \"Nortek Inc\",\n        \"North Fork Bancorporation Inc\",\n        \"Northeast Utilities System\",\n        \"Northern Trust Corporation\",\n        \"Northrop Grumman Corporation\",\n        \"NorthWestern Corporation\",\n        \"Novellus Systems Inc\",\n        \"NSTAR\",\n        \"NTL Incorporated\",\n        \"Nucor Corp\",\n        \"Nvidia Corp\",\n        \"NVR Inc\",\n        \"Northwest Airlines Corp\",\n        \"Occidental Petroleum Corp\",\n        \"Ocean Energy Inc\",\n        \"Office Depot Inc.\",\n        \"OfficeMax Inc\",\n        \"OGE Energy Corp\",\n        \"Oglethorpe Power Corp.\",\n        \"Ohio Casualty Corp.\",\n        \"Old Republic International Corp.\",\n        \"Olin Corp.\",\n        \"OM Group Inc\",\n        \"Omnicare Inc\",\n        \"Omnicom Group\",\n        \"On Semiconductor Corp\",\n        \"ONEOK Inc\",\n        \"Oracle Corp\",\n        \"Oshkosh Truck Corp\",\n        \"Outback Steakhouse Inc.\",\n        \"Owens & Minor Inc.\",\n        \"Owens Corning\",\n        \"Owens-Illinois Inc\",\n        \"Oxford Health Plans Inc\",\n        \"Paccar Inc\",\n        \"PacifiCare Health Systems Inc\",\n        \"Packaging Corp. of America\",\n        \"Pactiv Corp\",\n        \"Pall Corp\",\n        \"Pantry Inc\",\n        \"Park Place Entertainment Corp\",\n        \"Parker Hannifin Corp.\",\n        \"Pathmark Stores Inc.\",\n        \"Paychex Inc\",\n        \"Payless Shoesource Inc\",\n        \"Penn Traffic Co.\",\n        \"Pennzoil-Quaker State Company\",\n        \"Pentair Inc\",\n        \"Peoples Energy Corp.\",\n        \"PeopleSoft Inc\",\n        \"Pep Boys Manny, Moe & Jack\",\n        \"Potomac Electric Power Co.\",\n        \"Pepsi Bottling Group Inc.\",\n        \"PepsiAmericas Inc.\",\n        \"PepsiCo Inc.\",\n        \"Performance Food Group Co.\",\n        \"Perini Corp\",\n        \"PerkinElmer Inc\",\n        \"Perot Systems Corp\",\n        \"Petco Animal Supplies Inc.\",\n        \"Peter Kiewit Sons', Inc.\",\n        \"PETsMART Inc\",\n        \"Pfizer Inc\",\n        \"Pacific Gas & Electric Corp.\",\n        \"Pharmacia Corp\",\n        \"Phar Mor Inc.\",\n        \"Phelps Dodge Corp.\",\n        \"Philip Morris Companies Inc.\",\n        \"Phillips Petroleum Co\",\n        \"Phillips Van Heusen Corp.\",\n        \"Phoenix Companies Inc\",\n        \"Pier 1 Imports Inc.\",\n        \"Pilgrim's Pride Corporation\",\n        \"Pinnacle West Capital Corp\",\n        \"Pioneer-Standard Electronics Inc.\",\n        \"Pitney Bowes Inc.\",\n        \"Pittston Brinks Group\",\n        \"Plains All American Pipeline LP\",\n        \"PNC Financial Services Group Inc.\",\n        \"PNM Resources Inc\",\n        \"Polaris Industries Inc.\",\n        \"Polo Ralph Lauren Corp\",\n        \"PolyOne Corp\",\n        \"Popular Inc\",\n        \"Potlatch Corp\",\n        \"PPG Industries Inc\",\n        \"PPL Corp\",\n        \"Praxair Inc\",\n        \"Precision Castparts Corp\",\n        \"Premcor Inc.\",\n        \"Pride International Inc\",\n        \"Primedia Inc\",\n        \"Principal Financial Group Inc.\",\n        \"Procter & Gamble Co.\",\n        \"Pro-Fac Cooperative Inc.\",\n        \"Progress Energy Inc\",\n        \"Progressive Corporation\",\n        \"Protective Life Corp\",\n        \"Provident Financial Group\",\n        \"Providian Financial Corp.\",\n        \"Prudential Financial Inc.\",\n        \"PSS World Medical Inc\",\n        \"Public Service Enterprise Group Inc.\",\n        \"Publix Super Markets Inc.\",\n        \"Puget Energy Inc.\",\n        \"Pulte Homes Inc\",\n        \"Qualcomm Inc\",\n        \"Quanta Services Inc.\",\n        \"Quantum Corp\",\n        \"Quest Diagnostics Inc.\",\n        \"Questar Corp\",\n        \"Quintiles Transnational\",\n        \"Qwest Communications Intl Inc\",\n        \"R.J. Reynolds Tobacco Company\",\n        \"R.R. Donnelley & Sons Company\",\n        \"Radio Shack Corporation\",\n        \"Raymond James Financial Inc.\",\n        \"Raytheon Company\",\n        \"Reader's Digest Association Inc.\",\n        \"Reebok International Ltd.\",\n        \"Regions Financial Corp.\",\n        \"Regis Corporation\",\n        \"Reliance Steel & Aluminum Co.\",\n        \"Reliant Energy Inc.\",\n        \"Rent A Center Inc\",\n        \"Republic Services Inc\",\n        \"Revlon Inc\",\n        \"RGS Energy Group Inc\",\n        \"Rite Aid Corp\",\n        \"Riverwood Holding Inc.\",\n        \"RoadwayCorp\",\n        \"Robert Half International Inc.\",\n        \"Rock-Tenn Co\",\n        \"Rockwell Automation Inc\",\n        \"Rockwell Collins Inc\",\n        \"Rohm & Haas Co.\",\n        \"Ross Stores Inc\",\n        \"RPM Inc.\",\n        \"Ruddick Corp\",\n        \"Ryder System Inc\",\n        \"Ryerson Tull Inc\",\n        \"Ryland Group Inc.\",\n        \"Sabre Holdings Corp\",\n        \"Safeco Corp\",\n        \"Safeguard Scientifics Inc.\",\n        \"Safeway Inc\",\n        \"Saks Inc\",\n        \"Sanmina-SCI Inc\",\n        \"Sara Lee Corp\",\n        \"SBC Communications Inc\",\n        \"Scana Corp.\",\n        \"Schering-Plough Corp\",\n        \"Scholastic Corp\",\n        \"SCI Systems Onc.\",\n        \"Science Applications Intl. Inc.\",\n        \"Scientific-Atlanta Inc\",\n        \"Scotts Company\",\n        \"Seaboard Corp\",\n        \"Sealed Air Corp\",\n        \"Sears Roebuck & Co\",\n        \"Sempra Energy\",\n        \"Sequa Corp\",\n        \"Service Corp. International\",\n        \"ServiceMaster Co\",\n        \"Shaw Group Inc\",\n        \"Sherwin-Williams Company\",\n        \"Shopko Stores Inc\",\n        \"Siebel Systems Inc\",\n        \"Sierra Health Services Inc\",\n        \"Sierra Pacific Resources\",\n        \"Silgan Holdings Inc.\",\n        \"Silicon Graphics Inc\",\n        \"Simon Property Group Inc\",\n        \"SLM Corporation\",\n        \"Smith International Inc\",\n        \"Smithfield Foods Inc\",\n        \"Smurfit-Stone Container Corp\",\n        \"Snap-On Inc\",\n        \"Solectron Corp\",\n        \"Solutia Inc\",\n        \"Sonic Automotive Inc.\",\n        \"Sonoco Products Co.\",\n        \"Southern Company\",\n        \"Southern Union Company\",\n        \"SouthTrust Corp.\",\n        \"Southwest Airlines Co\",\n        \"Southwest Gas Corp\",\n        \"Sovereign Bancorp Inc.\",\n        \"Spartan Stores Inc\",\n        \"Spherion Corp\",\n        \"Sports Authority Inc\",\n        \"Sprint Corp.\",\n        \"SPX Corp\",\n        \"St. Jude Medical Inc\",\n        \"St. Paul Cos.\",\n        \"Staff Leasing Inc.\",\n        \"StanCorp Financial Group Inc\",\n        \"Standard Pacific Corp.\",\n        \"Stanley Works\",\n        \"Staples Inc\",\n        \"Starbucks Corp\",\n        \"Starwood Hotels & Resorts Worldwide Inc\",\n        \"State Street Corp.\",\n        \"Stater Bros. Holdings Inc.\",\n        \"Steelcase Inc\",\n        \"Stein Mart Inc\",\n        \"Stewart & Stevenson Services Inc\",\n        \"Stewart Information Services Corp\",\n        \"Stilwell Financial Inc\",\n        \"Storage Technology Corporation\",\n        \"Stryker Corp\",\n        \"Sun Healthcare Group Inc.\",\n        \"Sun Microsystems Inc.\",\n        \"SunGard Data Systems Inc.\",\n        \"Sunoco Inc.\",\n        \"SunTrust Banks Inc\",\n        \"Supervalu Inc\",\n        \"Swift Transportation, Co., Inc\",\n        \"Symbol Technologies Inc\",\n        \"Synovus Financial Corp.\",\n        \"Sysco Corp\",\n        \"Systemax Inc.\",\n        \"Target Corp.\",\n        \"Tech Data Corporation\",\n        \"TECO Energy Inc\",\n        \"Tecumseh Products Company\",\n        \"Tektronix Inc\",\n        \"Teleflex Incorporated\",\n        \"Telephone & Data Systems Inc\",\n        \"Tellabs Inc.\",\n        \"Temple-Inland Inc\",\n        \"Tenet Healthcare Corporation\",\n        \"Tenneco Automotive Inc.\",\n        \"Teradyne Inc\",\n        \"Terex Corp\",\n        \"Tesoro Petroleum Corp.\",\n        \"Texas Industries Inc.\",\n        \"Texas Instruments Incorporated\",\n        \"Textron Inc\",\n        \"Thermo Electron Corporation\",\n        \"Thomas & Betts Corporation\",\n        \"Tiffany & Co\",\n        \"Timken Company\",\n        \"TJX Companies Inc\",\n        \"TMP Worldwide Inc\",\n        \"Toll Brothers Inc\",\n        \"Torchmark Corporation\",\n        \"Toro Company\",\n        \"Tower Automotive Inc.\",\n        \"Toys 'R' Us Inc\",\n        \"Trans World Entertainment Corp.\",\n        \"TransMontaigne Inc\",\n        \"Transocean Inc\",\n        \"TravelCenters of America Inc.\",\n        \"Triad Hospitals Inc\",\n        \"Tribune Company\",\n        \"Trigon Healthcare Inc.\",\n        \"Trinity Industries Inc\",\n        \"Trump Hotels & Casino Resorts Inc.\",\n        \"TruServ Corporation\",\n        \"TRW Inc\",\n        \"TXU Corp\",\n        \"Tyson Foods Inc\",\n        \"U.S. Bancorp\",\n        \"U.S. Industries Inc.\",\n        \"UAL Corporation\",\n        \"UGI Corporation\",\n        \"Unified Western Grocers Inc\",\n        \"Union Pacific Corporation\",\n        \"Union Planters Corp\",\n        \"Unisource Energy Corp\",\n        \"Unisys Corporation\",\n        \"United Auto Group Inc\",\n        \"United Defense Industries Inc.\",\n        \"United Parcel Service Inc\",\n        \"United Rentals Inc\",\n        \"United Stationers Inc\",\n        \"United Technologies Corporation\",\n        \"UnitedHealth Group Incorporated\",\n        \"Unitrin Inc\",\n        \"Universal Corporation\",\n        \"Universal Forest Products Inc\",\n        \"Universal Health Services Inc\",\n        \"Unocal Corporation\",\n        \"Unova Inc\",\n        \"UnumProvident Corporation\",\n        \"URS Corporation\",\n        \"US Airways Group Inc\",\n        \"US Oncology Inc\",\n        \"USA Interactive\",\n        \"USFreighways Corporation\",\n        \"USG Corporation\",\n        \"UST Inc\",\n        \"Valero Energy Corporation\",\n        \"Valspar Corporation\",\n        \"Value City Department Stores Inc\",\n        \"Varco International Inc\",\n        \"Vectren Corporation\",\n        \"Veritas Software Corporation\",\n        \"Verizon Communications Inc\",\n        \"VF Corporation\",\n        \"Viacom Inc\",\n        \"Viad Corp\",\n        \"Viasystems Group Inc\",\n        \"Vishay Intertechnology Inc\",\n        \"Visteon Corporation\",\n        \"Volt Information Sciences Inc\",\n        \"Vulcan Materials Company\",\n        \"W.R. Berkley Corporation\",\n        \"W.R. Grace & Co\",\n        \"W.W. Grainger Inc\",\n        \"Wachovia Corporation\",\n        \"Wakenhut Corporation\",\n        \"Walgreen Co\",\n        \"Wallace Computer Services Inc\",\n        \"Wal-Mart Stores Inc\",\n        \"Walt Disney Co\",\n        \"Walter Industries Inc\",\n        \"Washington Mutual Inc\",\n        \"Washington Post Co.\",\n        \"Waste Management Inc\",\n        \"Watsco Inc\",\n        \"Weatherford International Inc\",\n        \"Weis Markets Inc.\",\n        \"Wellpoint Health Networks Inc\",\n        \"Wells Fargo & Company\",\n        \"Wendy's International Inc\",\n        \"Werner Enterprises Inc\",\n        \"WESCO International Inc\",\n        \"Western Digital Inc\",\n        \"Western Gas Resources Inc\",\n        \"WestPoint Stevens Inc\",\n        \"Weyerhauser Company\",\n        \"WGL Holdings Inc\",\n        \"Whirlpool Corporation\",\n        \"Whole Foods Market Inc\",\n        \"Willamette Industries Inc.\",\n        \"Williams Companies Inc\",\n        \"Williams Sonoma Inc\",\n        \"Winn Dixie Stores Inc\",\n        \"Wisconsin Energy Corporation\",\n        \"Wm Wrigley Jr Company\",\n        \"World Fuel Services Corporation\",\n        \"WorldCom Inc\",\n        \"Worthington Industries Inc\",\n        \"WPS Resources Corporation\",\n        \"Wyeth\",\n        \"Wyndham International Inc\",\n        \"Xcel Energy Inc\",\n        \"Xerox Corp\",\n        \"Xilinx Inc\",\n        \"XO Communications Inc\",\n        \"Yellow Corporation\",\n        \"York International Corp\",\n        \"Yum Brands Inc.\",\n        \"Zale Corporation\",\n        \"Zions Bancorporation\"\n      ],\n\n        fileExtension : {\n            \"raster\"    : [\"bmp\", \"gif\", \"gpl\", \"ico\", \"jpeg\", \"psd\", \"png\", \"psp\", \"raw\", \"tiff\"],\n            \"vector\"    : [\"3dv\", \"amf\", \"awg\", \"ai\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"odg\", \"svg\", \"xar\"],\n            \"3d\"        : [\"3dmf\", \"3dm\", \"3mf\", \"3ds\", \"an8\", \"aoi\", \"blend\", \"cal3d\", \"cob\", \"ctm\", \"iob\", \"jas\", \"max\", \"mb\", \"mdx\", \"obj\", \"x\", \"x3d\"],\n            \"document\"  : [\"doc\", \"docx\", \"dot\", \"html\", \"xml\", \"odt\", \"odm\", \"ott\", \"csv\", \"rtf\", \"tex\", \"xhtml\", \"xps\"]\n        },\n\n        // Data taken from https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json\n        timezones: [\n                  {\n                    \"name\": \"Dateline Standard Time\",\n                    \"abbr\": \"DST\",\n                    \"offset\": -12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-12:00) International Date Line West\",\n                    \"utc\": [\n                      \"Etc/GMT+12\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC-11\",\n                    \"abbr\": \"U\",\n                    \"offset\": -11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n                    \"utc\": [\n                      \"Etc/GMT+11\",\n                      \"Pacific/Midway\",\n                      \"Pacific/Niue\",\n                      \"Pacific/Pago_Pago\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Hawaiian Standard Time\",\n                    \"abbr\": \"HST\",\n                    \"offset\": -10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-10:00) Hawaii\",\n                    \"utc\": [\n                      \"Etc/GMT+10\",\n                      \"Pacific/Honolulu\",\n                      \"Pacific/Johnston\",\n                      \"Pacific/Rarotonga\",\n                      \"Pacific/Tahiti\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Alaskan Standard Time\",\n                    \"abbr\": \"AKDT\",\n                    \"offset\": -8,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-09:00) Alaska\",\n                    \"utc\": [\n                      \"America/Anchorage\",\n                      \"America/Juneau\",\n                      \"America/Nome\",\n                      \"America/Sitka\",\n                      \"America/Yakutat\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Standard Time (Mexico)\",\n                    \"abbr\": \"PDT\",\n                    \"offset\": -7,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-08:00) Baja California\",\n                    \"utc\": [\n                      \"America/Santa_Isabel\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Daylight Time\",\n                    \"abbr\": \"PDT\",\n                    \"offset\": -7,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Dawson\",\n                      \"America/Los_Angeles\",\n                      \"America/Tijuana\",\n                      \"America/Vancouver\",\n                      \"America/Whitehorse\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Standard Time\",\n                    \"abbr\": \"PST\",\n                    \"offset\": -8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Dawson\",\n                      \"America/Los_Angeles\",\n                      \"America/Tijuana\",\n                      \"America/Vancouver\",\n                      \"America/Whitehorse\",\n                      \"PST8PDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"US Mountain Standard Time\",\n                    \"abbr\": \"UMST\",\n                    \"offset\": -7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-07:00) Arizona\",\n                    \"utc\": [\n                      \"America/Creston\",\n                      \"America/Dawson_Creek\",\n                      \"America/Hermosillo\",\n                      \"America/Phoenix\",\n                      \"Etc/GMT+7\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mountain Standard Time (Mexico)\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -6,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n                    \"utc\": [\n                      \"America/Chihuahua\",\n                      \"America/Mazatlan\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mountain Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -6,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Boise\",\n                      \"America/Cambridge_Bay\",\n                      \"America/Denver\",\n                      \"America/Edmonton\",\n                      \"America/Inuvik\",\n                      \"America/Ojinaga\",\n                      \"America/Yellowknife\",\n                      \"MST7MDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central America Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": -6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-06:00) Central America\",\n                    \"utc\": [\n                      \"America/Belize\",\n                      \"America/Costa_Rica\",\n                      \"America/El_Salvador\",\n                      \"America/Guatemala\",\n                      \"America/Managua\",\n                      \"America/Tegucigalpa\",\n                      \"Etc/GMT+6\",\n                      \"Pacific/Galapagos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Standard Time\",\n                    \"abbr\": \"CDT\",\n                    \"offset\": -5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Chicago\",\n                      \"America/Indiana/Knox\",\n                      \"America/Indiana/Tell_City\",\n                      \"America/Matamoros\",\n                      \"America/Menominee\",\n                      \"America/North_Dakota/Beulah\",\n                      \"America/North_Dakota/Center\",\n                      \"America/North_Dakota/New_Salem\",\n                      \"America/Rainy_River\",\n                      \"America/Rankin_Inlet\",\n                      \"America/Resolute\",\n                      \"America/Winnipeg\",\n                      \"CST6CDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Standard Time (Mexico)\",\n                    \"abbr\": \"CDT\",\n                    \"offset\": -5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n                    \"utc\": [\n                      \"America/Bahia_Banderas\",\n                      \"America/Cancun\",\n                      \"America/Merida\",\n                      \"America/Mexico_City\",\n                      \"America/Monterrey\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Canada Central Standard Time\",\n                    \"abbr\": \"CCST\",\n                    \"offset\": -6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-06:00) Saskatchewan\",\n                    \"utc\": [\n                      \"America/Regina\",\n                      \"America/Swift_Current\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Pacific Standard Time\",\n                    \"abbr\": \"SPST\",\n                    \"offset\": -5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n                    \"utc\": [\n                      \"America/Bogota\",\n                      \"America/Cayman\",\n                      \"America/Coral_Harbour\",\n                      \"America/Eirunepe\",\n                      \"America/Guayaquil\",\n                      \"America/Jamaica\",\n                      \"America/Lima\",\n                      \"America/Panama\",\n                      \"America/Rio_Branco\",\n                      \"Etc/GMT+5\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Eastern Standard Time\",\n                    \"abbr\": \"EDT\",\n                    \"offset\": -4,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Detroit\",\n                      \"America/Havana\",\n                      \"America/Indiana/Petersburg\",\n                      \"America/Indiana/Vincennes\",\n                      \"America/Indiana/Winamac\",\n                      \"America/Iqaluit\",\n                      \"America/Kentucky/Monticello\",\n                      \"America/Louisville\",\n                      \"America/Montreal\",\n                      \"America/Nassau\",\n                      \"America/New_York\",\n                      \"America/Nipigon\",\n                      \"America/Pangnirtung\",\n                      \"America/Port-au-Prince\",\n                      \"America/Thunder_Bay\",\n                      \"America/Toronto\",\n                      \"EST5EDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"US Eastern Standard Time\",\n                    \"abbr\": \"UEDT\",\n                    \"offset\": -4,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-05:00) Indiana (East)\",\n                    \"utc\": [\n                      \"America/Indiana/Marengo\",\n                      \"America/Indiana/Vevay\",\n                      \"America/Indianapolis\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Venezuela Standard Time\",\n                    \"abbr\": \"VST\",\n                    \"offset\": -4.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:30) Caracas\",\n                    \"utc\": [\n                      \"America/Caracas\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Paraguay Standard Time\",\n                    \"abbr\": \"PYT\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Asuncion\",\n                    \"utc\": [\n                      \"America/Asuncion\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Atlantic Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": -3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n                    \"utc\": [\n                      \"America/Glace_Bay\",\n                      \"America/Goose_Bay\",\n                      \"America/Halifax\",\n                      \"America/Moncton\",\n                      \"America/Thule\",\n                      \"Atlantic/Bermuda\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Brazilian Standard Time\",\n                    \"abbr\": \"CBST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Cuiaba\",\n                    \"utc\": [\n                      \"America/Campo_Grande\",\n                      \"America/Cuiaba\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Western Standard Time\",\n                    \"abbr\": \"SWST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n                    \"utc\": [\n                      \"America/Anguilla\",\n                      \"America/Antigua\",\n                      \"America/Aruba\",\n                      \"America/Barbados\",\n                      \"America/Blanc-Sablon\",\n                      \"America/Boa_Vista\",\n                      \"America/Curacao\",\n                      \"America/Dominica\",\n                      \"America/Grand_Turk\",\n                      \"America/Grenada\",\n                      \"America/Guadeloupe\",\n                      \"America/Guyana\",\n                      \"America/Kralendijk\",\n                      \"America/La_Paz\",\n                      \"America/Lower_Princes\",\n                      \"America/Manaus\",\n                      \"America/Marigot\",\n                      \"America/Martinique\",\n                      \"America/Montserrat\",\n                      \"America/Port_of_Spain\",\n                      \"America/Porto_Velho\",\n                      \"America/Puerto_Rico\",\n                      \"America/Santo_Domingo\",\n                      \"America/St_Barthelemy\",\n                      \"America/St_Kitts\",\n                      \"America/St_Lucia\",\n                      \"America/St_Thomas\",\n                      \"America/St_Vincent\",\n                      \"America/Tortola\",\n                      \"Etc/GMT+4\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific SA Standard Time\",\n                    \"abbr\": \"PSST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Santiago\",\n                    \"utc\": [\n                      \"America/Santiago\",\n                      \"Antarctica/Palmer\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Newfoundland Standard Time\",\n                    \"abbr\": \"NDT\",\n                    \"offset\": -2.5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-03:30) Newfoundland\",\n                    \"utc\": [\n                      \"America/St_Johns\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. South America Standard Time\",\n                    \"abbr\": \"ESAST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Brasilia\",\n                    \"utc\": [\n                      \"America/Sao_Paulo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Argentina Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Buenos Aires\",\n                    \"utc\": [\n                      \"America/Argentina/La_Rioja\",\n                      \"America/Argentina/Rio_Gallegos\",\n                      \"America/Argentina/Salta\",\n                      \"America/Argentina/San_Juan\",\n                      \"America/Argentina/San_Luis\",\n                      \"America/Argentina/Tucuman\",\n                      \"America/Argentina/Ushuaia\",\n                      \"America/Buenos_Aires\",\n                      \"America/Catamarca\",\n                      \"America/Cordoba\",\n                      \"America/Jujuy\",\n                      \"America/Mendoza\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Eastern Standard Time\",\n                    \"abbr\": \"SEST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n                    \"utc\": [\n                      \"America/Araguaina\",\n                      \"America/Belem\",\n                      \"America/Cayenne\",\n                      \"America/Fortaleza\",\n                      \"America/Maceio\",\n                      \"America/Paramaribo\",\n                      \"America/Recife\",\n                      \"America/Santarem\",\n                      \"Antarctica/Rothera\",\n                      \"Atlantic/Stanley\",\n                      \"Etc/GMT+3\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Greenland Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": -3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-03:00) Greenland\",\n                    \"utc\": [\n                      \"America/Godthab\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Montevideo Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Montevideo\",\n                    \"utc\": [\n                      \"America/Montevideo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Bahia Standard Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Salvador\",\n                    \"utc\": [\n                      \"America/Bahia\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC-02\",\n                    \"abbr\": \"U\",\n                    \"offset\": -2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n                    \"utc\": [\n                      \"America/Noronha\",\n                      \"Atlantic/South_Georgia\",\n                      \"Etc/GMT+2\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mid-Atlantic Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n                    \"utc\": []\n                  },\n                  {\n                    \"name\": \"Azores Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": 0,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-01:00) Azores\",\n                    \"utc\": [\n                      \"America/Scoresbysund\",\n                      \"Atlantic/Azores\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Cape Verde Standard Time\",\n                    \"abbr\": \"CVST\",\n                    \"offset\": -1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-01:00) Cape Verde Is.\",\n                    \"utc\": [\n                      \"Atlantic/Cape_Verde\",\n                      \"Etc/GMT+1\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Morocco Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC) Casablanca\",\n                    \"utc\": [\n                      \"Africa/Casablanca\",\n                      \"Africa/El_Aaiun\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC\",\n                    \"abbr\": \"UTC\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Coordinated Universal Time\",\n                    \"utc\": [\n                      \"America/Danmarkshavn\",\n                      \"Etc/GMT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GMT Standard Time\",\n                    \"abbr\": \"GMT\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Edinburgh, London\",\n                    \"utc\": [\n                      \"Europe/Isle_of_Man\",\n                      \"Europe/Guernsey\",\n                      \"Europe/Jersey\",\n                      \"Europe/London\"\n                    ]\n                  },\n                  {\n                    \"name\": \"British Summer Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Edinburgh, London\",\n                    \"utc\": [\n                      \"Europe/Isle_of_Man\",\n                      \"Europe/Guernsey\",\n                      \"Europe/Jersey\",\n                      \"Europe/London\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GMT Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC) Dublin, Lisbon\",\n                    \"utc\": [\n                      \"Atlantic/Canary\",\n                      \"Atlantic/Faeroe\",\n                      \"Atlantic/Madeira\",\n                      \"Europe/Dublin\",\n                      \"Europe/Lisbon\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Greenwich Standard Time\",\n                    \"abbr\": \"GST\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Monrovia, Reykjavik\",\n                    \"utc\": [\n                      \"Africa/Abidjan\",\n                      \"Africa/Accra\",\n                      \"Africa/Bamako\",\n                      \"Africa/Banjul\",\n                      \"Africa/Bissau\",\n                      \"Africa/Conakry\",\n                      \"Africa/Dakar\",\n                      \"Africa/Freetown\",\n                      \"Africa/Lome\",\n                      \"Africa/Monrovia\",\n                      \"Africa/Nouakchott\",\n                      \"Africa/Ouagadougou\",\n                      \"Africa/Sao_Tome\",\n                      \"Atlantic/Reykjavik\",\n                      \"Atlantic/St_Helena\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Europe Standard Time\",\n                    \"abbr\": \"WEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n                    \"utc\": [\n                      \"Arctic/Longyearbyen\",\n                      \"Europe/Amsterdam\",\n                      \"Europe/Andorra\",\n                      \"Europe/Berlin\",\n                      \"Europe/Busingen\",\n                      \"Europe/Gibraltar\",\n                      \"Europe/Luxembourg\",\n                      \"Europe/Malta\",\n                      \"Europe/Monaco\",\n                      \"Europe/Oslo\",\n                      \"Europe/Rome\",\n                      \"Europe/San_Marino\",\n                      \"Europe/Stockholm\",\n                      \"Europe/Vaduz\",\n                      \"Europe/Vatican\",\n                      \"Europe/Vienna\",\n                      \"Europe/Zurich\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Europe Standard Time\",\n                    \"abbr\": \"CEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n                    \"utc\": [\n                      \"Europe/Belgrade\",\n                      \"Europe/Bratislava\",\n                      \"Europe/Budapest\",\n                      \"Europe/Ljubljana\",\n                      \"Europe/Podgorica\",\n                      \"Europe/Prague\",\n                      \"Europe/Tirane\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Romance Standard Time\",\n                    \"abbr\": \"RDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n                    \"utc\": [\n                      \"Africa/Ceuta\",\n                      \"Europe/Brussels\",\n                      \"Europe/Copenhagen\",\n                      \"Europe/Madrid\",\n                      \"Europe/Paris\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central European Standard Time\",\n                    \"abbr\": \"CEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n                    \"utc\": [\n                      \"Europe/Sarajevo\",\n                      \"Europe/Skopje\",\n                      \"Europe/Warsaw\",\n                      \"Europe/Zagreb\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Central Africa Standard Time\",\n                    \"abbr\": \"WCAST\",\n                    \"offset\": 1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+01:00) West Central Africa\",\n                    \"utc\": [\n                      \"Africa/Algiers\",\n                      \"Africa/Bangui\",\n                      \"Africa/Brazzaville\",\n                      \"Africa/Douala\",\n                      \"Africa/Kinshasa\",\n                      \"Africa/Lagos\",\n                      \"Africa/Libreville\",\n                      \"Africa/Luanda\",\n                      \"Africa/Malabo\",\n                      \"Africa/Ndjamena\",\n                      \"Africa/Niamey\",\n                      \"Africa/Porto-Novo\",\n                      \"Africa/Tunis\",\n                      \"Etc/GMT-1\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Namibia Standard Time\",\n                    \"abbr\": \"NST\",\n                    \"offset\": 1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+01:00) Windhoek\",\n                    \"utc\": [\n                      \"Africa/Windhoek\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GTB Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Athens, Bucharest\",\n                    \"utc\": [\n                      \"Asia/Nicosia\",\n                      \"Europe/Athens\",\n                      \"Europe/Bucharest\",\n                      \"Europe/Chisinau\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Middle East Standard Time\",\n                    \"abbr\": \"MEDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Beirut\",\n                    \"utc\": [\n                      \"Asia/Beirut\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Egypt Standard Time\",\n                    \"abbr\": \"EST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Cairo\",\n                    \"utc\": [\n                      \"Africa/Cairo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Syria Standard Time\",\n                    \"abbr\": \"SDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Damascus\",\n                    \"utc\": [\n                      \"Asia/Damascus\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Europe Standard Time\",\n                    \"abbr\": \"EEDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) E. Europe\",\n                    \"utc\": [\n                      \"Asia/Nicosia\",\n                      \"Europe/Athens\",\n                      \"Europe/Bucharest\",\n                      \"Europe/Chisinau\",\n                      \"Europe/Helsinki\",\n                      \"Europe/Kiev\",\n                      \"Europe/Mariehamn\",\n                      \"Europe/Nicosia\",\n                      \"Europe/Riga\",\n                      \"Europe/Sofia\",\n                      \"Europe/Tallinn\",\n                      \"Europe/Uzhgorod\",\n                      \"Europe/Vilnius\",\n                      \"Europe/Zaporozhye\"\n                    ]\n                  },\n                  {\n                    \"name\": \"South Africa Standard Time\",\n                    \"abbr\": \"SAST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Harare, Pretoria\",\n                    \"utc\": [\n                      \"Africa/Blantyre\",\n                      \"Africa/Bujumbura\",\n                      \"Africa/Gaborone\",\n                      \"Africa/Harare\",\n                      \"Africa/Johannesburg\",\n                      \"Africa/Kigali\",\n                      \"Africa/Lubumbashi\",\n                      \"Africa/Lusaka\",\n                      \"Africa/Maputo\",\n                      \"Africa/Maseru\",\n                      \"Africa/Mbabane\",\n                      \"Etc/GMT-2\"\n                    ]\n                  },\n                  {\n                    \"name\": \"FLE Standard Time\",\n                    \"abbr\": \"FDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n                    \"utc\": [\n                      \"Europe/Helsinki\",\n                      \"Europe/Kiev\",\n                      \"Europe/Mariehamn\",\n                      \"Europe/Riga\",\n                      \"Europe/Sofia\",\n                      \"Europe/Tallinn\",\n                      \"Europe/Uzhgorod\",\n                      \"Europe/Vilnius\",\n                      \"Europe/Zaporozhye\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Turkey Standard Time\",\n                    \"abbr\": \"TDT\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Istanbul\",\n                    \"utc\": [\n                      \"Europe/Istanbul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Israel Standard Time\",\n                    \"abbr\": \"JDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Jerusalem\",\n                    \"utc\": [\n                      \"Asia/Jerusalem\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Libya Standard Time\",\n                    \"abbr\": \"LST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Tripoli\",\n                    \"utc\": [\n                      \"Africa/Tripoli\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Jordan Standard Time\",\n                    \"abbr\": \"JST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Amman\",\n                    \"utc\": [\n                      \"Asia/Amman\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arabic Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Baghdad\",\n                    \"utc\": [\n                      \"Asia/Baghdad\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Kaliningrad Standard Time\",\n                    \"abbr\": \"KST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Kaliningrad\",\n                    \"utc\": [\n                      \"Europe/Kaliningrad\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arab Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n                    \"utc\": [\n                      \"Asia/Aden\",\n                      \"Asia/Bahrain\",\n                      \"Asia/Kuwait\",\n                      \"Asia/Qatar\",\n                      \"Asia/Riyadh\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Africa Standard Time\",\n                    \"abbr\": \"EAST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Nairobi\",\n                    \"utc\": [\n                      \"Africa/Addis_Ababa\",\n                      \"Africa/Asmera\",\n                      \"Africa/Dar_es_Salaam\",\n                      \"Africa/Djibouti\",\n                      \"Africa/Juba\",\n                      \"Africa/Kampala\",\n                      \"Africa/Khartoum\",\n                      \"Africa/Mogadishu\",\n                      \"Africa/Nairobi\",\n                      \"Antarctica/Syowa\",\n                      \"Etc/GMT-3\",\n                      \"Indian/Antananarivo\",\n                      \"Indian/Comoro\",\n                      \"Indian/Mayotte\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Moscow Standard Time\",\n                    \"abbr\": \"MSK\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n                    \"utc\": [\n                        \"Europe/Kirov\",\n                      \"Europe/Moscow\",\n                      \"Europe/Simferopol\",\n                      \"Europe/Volgograd\",\n                      \"Europe/Minsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Samara Time\",\n                    \"abbr\": \"SAMT\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n                    \"utc\": [\n                        \"Europe/Astrakhan\",\n                      \"Europe/Samara\",\n                        \"Europe/Ulyanovsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Iran Standard Time\",\n                    \"abbr\": \"IDT\",\n                    \"offset\": 4.5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+03:30) Tehran\",\n                    \"utc\": [\n                      \"Asia/Tehran\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arabian Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n                    \"utc\": [\n                      \"Asia/Dubai\",\n                      \"Asia/Muscat\",\n                      \"Etc/GMT-4\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Azerbaijan Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": 5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+04:00) Baku\",\n                    \"utc\": [\n                      \"Asia/Baku\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mauritius Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Port Louis\",\n                    \"utc\": [\n                      \"Indian/Mahe\",\n                      \"Indian/Mauritius\",\n                      \"Indian/Reunion\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Georgian Standard Time\",\n                    \"abbr\": \"GET\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Tbilisi\",\n                    \"utc\": [\n                      \"Asia/Tbilisi\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Caucasus Standard Time\",\n                    \"abbr\": \"CST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Yerevan\",\n                    \"utc\": [\n                      \"Asia/Yerevan\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Afghanistan Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 4.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:30) Kabul\",\n                    \"utc\": [\n                      \"Asia/Kabul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"West Asia Standard Time\",\n                    \"abbr\": \"WAST\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n                    \"utc\": [\n                      \"Antarctica/Mawson\",\n                      \"Asia/Aqtau\",\n                      \"Asia/Aqtobe\",\n                      \"Asia/Ashgabat\",\n                      \"Asia/Dushanbe\",\n                      \"Asia/Oral\",\n                      \"Asia/Samarkand\",\n                      \"Asia/Tashkent\",\n                      \"Etc/GMT-5\",\n                      \"Indian/Kerguelen\",\n                      \"Indian/Maldives\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Yekaterinburg Time\",\n                    \"abbr\": \"YEKT\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Yekaterinburg\",\n                    \"utc\": [\n                      \"Asia/Yekaterinburg\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pakistan Standard Time\",\n                    \"abbr\": \"PKT\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n                    \"utc\": [\n                      \"Asia/Karachi\"\n                    ]\n                  },\n                  {\n                    \"name\": \"India Standard Time\",\n                    \"abbr\": \"IST\",\n                    \"offset\": 5.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n                    \"utc\": [\n                      \"Asia/Kolkata\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Sri Lanka Standard Time\",\n                    \"abbr\": \"SLST\",\n                    \"offset\": 5.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n                    \"utc\": [\n                      \"Asia/Colombo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Nepal Standard Time\",\n                    \"abbr\": \"NST\",\n                    \"offset\": 5.75,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:45) Kathmandu\",\n                    \"utc\": [\n                      \"Asia/Kathmandu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Asia Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": 6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n                    \"utc\": [\n                      \"Antarctica/Vostok\",\n                      \"Asia/Almaty\",\n                      \"Asia/Bishkek\",\n                      \"Asia/Qyzylorda\",\n                      \"Asia/Urumqi\",\n                      \"Etc/GMT-6\",\n                      \"Indian/Chagos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Bangladesh Standard Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": 6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:00) Dhaka\",\n                    \"utc\": [\n                      \"Asia/Dhaka\",\n                      \"Asia/Thimphu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Myanmar Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 6.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n                    \"utc\": [\n                      \"Asia/Rangoon\",\n                      \"Indian/Cocos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SE Asia Standard Time\",\n                    \"abbr\": \"SAST\",\n                    \"offset\": 7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n                    \"utc\": [\n                      \"Antarctica/Davis\",\n                      \"Asia/Bangkok\",\n                      \"Asia/Hovd\",\n                      \"Asia/Jakarta\",\n                      \"Asia/Phnom_Penh\",\n                      \"Asia/Pontianak\",\n                      \"Asia/Saigon\",\n                      \"Asia/Vientiane\",\n                      \"Etc/GMT-7\",\n                      \"Indian/Christmas\"\n                    ]\n                  },\n                  {\n                    \"name\": \"N. Central Asia Standard Time\",\n                    \"abbr\": \"NCAST\",\n                    \"offset\": 7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+07:00) Novosibirsk\",\n                    \"utc\": [\n                      \"Asia/Novokuznetsk\",\n                      \"Asia/Novosibirsk\",\n                      \"Asia/Omsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"China Standard Time\",\n                    \"abbr\": \"CST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n                    \"utc\": [\n                      \"Asia/Hong_Kong\",\n                      \"Asia/Macau\",\n                      \"Asia/Shanghai\"\n                    ]\n                  },\n                  {\n                    \"name\": \"North Asia Standard Time\",\n                    \"abbr\": \"NAST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Krasnoyarsk\",\n                    \"utc\": [\n                      \"Asia/Krasnoyarsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Singapore Standard Time\",\n                    \"abbr\": \"MPST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n                    \"utc\": [\n                      \"Asia/Brunei\",\n                      \"Asia/Kuala_Lumpur\",\n                      \"Asia/Kuching\",\n                      \"Asia/Makassar\",\n                      \"Asia/Manila\",\n                      \"Asia/Singapore\",\n                      \"Etc/GMT-8\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Australia Standard Time\",\n                    \"abbr\": \"WAST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Perth\",\n                    \"utc\": [\n                      \"Antarctica/Casey\",\n                      \"Australia/Perth\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Taipei Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Taipei\",\n                    \"utc\": [\n                      \"Asia/Taipei\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Ulaanbaatar Standard Time\",\n                    \"abbr\": \"UST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Ulaanbaatar\",\n                    \"utc\": [\n                      \"Asia/Choibalsan\",\n                      \"Asia/Ulaanbaatar\"\n                    ]\n                  },\n                  {\n                    \"name\": \"North Asia East Standard Time\",\n                    \"abbr\": \"NAEST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Irkutsk\",\n                    \"utc\": [\n                      \"Asia/Irkutsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Japan Standard Time\",\n                    \"abbr\": \"JST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n                    \"utc\": [\n                      \"Asia/Dili\",\n                      \"Asia/Jayapura\",\n                      \"Asia/Tokyo\",\n                      \"Etc/GMT-9\",\n                      \"Pacific/Palau\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Korea Standard Time\",\n                    \"abbr\": \"KST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Seoul\",\n                    \"utc\": [\n                      \"Asia/Pyongyang\",\n                      \"Asia/Seoul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Cen. Australia Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": 9.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:30) Adelaide\",\n                    \"utc\": [\n                      \"Australia/Adelaide\",\n                      \"Australia/Broken_Hill\"\n                    ]\n                  },\n                  {\n                    \"name\": \"AUS Central Standard Time\",\n                    \"abbr\": \"ACST\",\n                    \"offset\": 9.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:30) Darwin\",\n                    \"utc\": [\n                      \"Australia/Darwin\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Australia Standard Time\",\n                    \"abbr\": \"EAST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Brisbane\",\n                    \"utc\": [\n                      \"Australia/Brisbane\",\n                      \"Australia/Lindeman\"\n                    ]\n                  },\n                  {\n                    \"name\": \"AUS Eastern Standard Time\",\n                    \"abbr\": \"AEST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n                    \"utc\": [\n                      \"Australia/Melbourne\",\n                      \"Australia/Sydney\"\n                    ]\n                  },\n                  {\n                    \"name\": \"West Pacific Standard Time\",\n                    \"abbr\": \"WPST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n                    \"utc\": [\n                      \"Antarctica/DumontDUrville\",\n                      \"Etc/GMT-10\",\n                      \"Pacific/Guam\",\n                      \"Pacific/Port_Moresby\",\n                      \"Pacific/Saipan\",\n                      \"Pacific/Truk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Tasmania Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Hobart\",\n                    \"utc\": [\n                      \"Australia/Currie\",\n                      \"Australia/Hobart\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Yakutsk Standard Time\",\n                    \"abbr\": \"YST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Yakutsk\",\n                    \"utc\": [\n                      \"Asia/Chita\",\n                      \"Asia/Khandyga\",\n                      \"Asia/Yakutsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Pacific Standard Time\",\n                    \"abbr\": \"CPST\",\n                    \"offset\": 11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n                    \"utc\": [\n                      \"Antarctica/Macquarie\",\n                      \"Etc/GMT-11\",\n                      \"Pacific/Efate\",\n                      \"Pacific/Guadalcanal\",\n                      \"Pacific/Kosrae\",\n                      \"Pacific/Noumea\",\n                      \"Pacific/Ponape\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Vladivostok Standard Time\",\n                    \"abbr\": \"VST\",\n                    \"offset\": 11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+11:00) Vladivostok\",\n                    \"utc\": [\n                      \"Asia/Sakhalin\",\n                      \"Asia/Ust-Nera\",\n                      \"Asia/Vladivostok\"\n                    ]\n                  },\n                  {\n                    \"name\": \"New Zealand Standard Time\",\n                    \"abbr\": \"NZST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Auckland, Wellington\",\n                    \"utc\": [\n                      \"Antarctica/McMurdo\",\n                      \"Pacific/Auckland\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC+12\",\n                    \"abbr\": \"U\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n                    \"utc\": [\n                      \"Etc/GMT-12\",\n                      \"Pacific/Funafuti\",\n                      \"Pacific/Kwajalein\",\n                      \"Pacific/Majuro\",\n                      \"Pacific/Nauru\",\n                      \"Pacific/Tarawa\",\n                      \"Pacific/Wake\",\n                      \"Pacific/Wallis\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Fiji Standard Time\",\n                    \"abbr\": \"FST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Fiji\",\n                    \"utc\": [\n                      \"Pacific/Fiji\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Magadan Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Magadan\",\n                    \"utc\": [\n                      \"Asia/Anadyr\",\n                      \"Asia/Kamchatka\",\n                      \"Asia/Magadan\",\n                      \"Asia/Srednekolymsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Kamchatka Standard Time\",\n                    \"abbr\": \"KDT\",\n                    \"offset\": 13,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n                    \"utc\": [\n                      \"Asia/Kamchatka\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Tonga Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 13,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+13:00) Nuku'alofa\",\n                    \"utc\": [\n                      \"Etc/GMT-13\",\n                      \"Pacific/Enderbury\",\n                      \"Pacific/Fakaofo\",\n                      \"Pacific/Tongatapu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Samoa Standard Time\",\n                    \"abbr\": \"SST\",\n                    \"offset\": 13,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+13:00) Samoa\",\n                    \"utc\": [\n                      \"Pacific/Apia\"\n                    ]\n                  }\n                ],\n        //List source: http://answers.google.com/answers/threadview/id/589312.html\n        profession: [\n            \"Airline Pilot\",\n            \"Academic Team\",\n            \"Accountant\",\n            \"Account Executive\",\n            \"Actor\",\n            \"Actuary\",\n            \"Acquisition Analyst\",\n            \"Administrative Asst.\",\n            \"Administrative Analyst\",\n            \"Administrator\",\n            \"Advertising Director\",\n            \"Aerospace Engineer\",\n            \"Agent\",\n            \"Agricultural Inspector\",\n            \"Agricultural Scientist\",\n            \"Air Traffic Controller\",\n            \"Animal Trainer\",\n            \"Anthropologist\",\n            \"Appraiser\",\n            \"Architect\",\n            \"Art Director\",\n            \"Artist\",\n            \"Astronomer\",\n            \"Athletic Coach\",\n            \"Auditor\",\n            \"Author\",\n            \"Baker\",\n            \"Banker\",\n            \"Bankruptcy Attorney\",\n            \"Benefits Manager\",\n            \"Biologist\",\n            \"Bio-feedback Specialist\",\n            \"Biomedical Engineer\",\n            \"Biotechnical Researcher\",\n            \"Broadcaster\",\n            \"Broker\",\n            \"Building Manager\",\n            \"Building Contractor\",\n            \"Building Inspector\",\n            \"Business Analyst\",\n            \"Business Planner\",\n            \"Business Manager\",\n            \"Buyer\",\n            \"Call Center Manager\",\n            \"Career Counselor\",\n            \"Cash Manager\",\n            \"Ceramic Engineer\",\n            \"Chief Executive Officer\",\n            \"Chief Operation Officer\",\n            \"Chef\",\n            \"Chemical Engineer\",\n            \"Chemist\",\n            \"Child Care Manager\",\n            \"Chief Medical Officer\",\n            \"Chiropractor\",\n            \"Cinematographer\",\n            \"City Housing Manager\",\n            \"City Manager\",\n            \"Civil Engineer\",\n            \"Claims Manager\",\n            \"Clinical Research Assistant\",\n            \"Collections Manager\",\n            \"Compliance Manager\",\n            \"Comptroller\",\n            \"Computer Manager\",\n            \"Commercial Artist\",\n            \"Communications Affairs Director\",\n            \"Communications Director\",\n            \"Communications Engineer\",\n            \"Compensation Analyst\",\n            \"Computer Programmer\",\n            \"Computer Ops. Manager\",\n            \"Computer Engineer\",\n            \"Computer Operator\",\n            \"Computer Graphics Specialist\",\n            \"Construction Engineer\",\n            \"Construction Manager\",\n            \"Consultant\",\n            \"Consumer Relations Manager\",\n            \"Contract Administrator\",\n            \"Copyright Attorney\",\n            \"Copywriter\",\n            \"Corporate Planner\",\n            \"Corrections Officer\",\n            \"Cosmetologist\",\n            \"Credit Analyst\",\n            \"Cruise Director\",\n            \"Chief Information Officer\",\n            \"Chief Technology Officer\",\n            \"Customer Service Manager\",\n            \"Cryptologist\",\n            \"Dancer\",\n            \"Data Security Manager\",\n            \"Database Manager\",\n            \"Day Care Instructor\",\n            \"Dentist\",\n            \"Designer\",\n            \"Design Engineer\",\n            \"Desktop Publisher\",\n            \"Developer\",\n            \"Development Officer\",\n            \"Diamond Merchant\",\n            \"Dietitian\",\n            \"Direct Marketer\",\n            \"Director\",\n            \"Distribution Manager\",\n            \"Diversity Manager\",\n            \"Economist\",\n            \"EEO Compliance Manager\",\n            \"Editor\",\n            \"Education Adminator\",\n            \"Electrical Engineer\",\n            \"Electro Optical Engineer\",\n            \"Electronics Engineer\",\n            \"Embassy Management\",\n            \"Employment Agent\",\n            \"Engineer Technician\",\n            \"Entrepreneur\",\n            \"Environmental Analyst\",\n            \"Environmental Attorney\",\n            \"Environmental Engineer\",\n            \"Environmental Specialist\",\n            \"Escrow Officer\",\n            \"Estimator\",\n            \"Executive Assistant\",\n            \"Executive Director\",\n            \"Executive Recruiter\",\n            \"Facilities Manager\",\n            \"Family Counselor\",\n            \"Fashion Events Manager\",\n            \"Fashion Merchandiser\",\n            \"Fast Food Manager\",\n            \"Film Producer\",\n            \"Film Production Assistant\",\n            \"Financial Analyst\",\n            \"Financial Planner\",\n            \"Financier\",\n            \"Fine Artist\",\n            \"Wildlife Specialist\",\n            \"Fitness Consultant\",\n            \"Flight Attendant\",\n            \"Flight Engineer\",\n            \"Floral Designer\",\n            \"Food & Beverage Director\",\n            \"Food Service Manager\",\n            \"Forestry Technician\",\n            \"Franchise Management\",\n            \"Franchise Sales\",\n            \"Fraud Investigator\",\n            \"Freelance Writer\",\n            \"Fund Raiser\",\n            \"General Manager\",\n            \"Geologist\",\n            \"General Counsel\",\n            \"Geriatric Specialist\",\n            \"Gerontologist\",\n            \"Glamour Photographer\",\n            \"Golf Club Manager\",\n            \"Gourmet Chef\",\n            \"Graphic Designer\",\n            \"Grounds Keeper\",\n            \"Hazardous Waste Manager\",\n            \"Health Care Manager\",\n            \"Health Therapist\",\n            \"Health Service Administrator\",\n            \"Hearing Officer\",\n            \"Home Economist\",\n            \"Horticulturist\",\n            \"Hospital Administrator\",\n            \"Hotel Manager\",\n            \"Human Resources Manager\",\n            \"Importer\",\n            \"Industrial Designer\",\n            \"Industrial Engineer\",\n            \"Information Director\",\n            \"Inside Sales\",\n            \"Insurance Adjuster\",\n            \"Interior Decorator\",\n            \"Internal Controls Director\",\n            \"International Acct.\",\n            \"International Courier\",\n            \"International Lawyer\",\n            \"Interpreter\",\n            \"Investigator\",\n            \"Investment Banker\",\n            \"Investment Manager\",\n            \"IT Architect\",\n            \"IT Project Manager\",\n            \"IT Systems Analyst\",\n            \"Jeweler\",\n            \"Joint Venture Manager\",\n            \"Journalist\",\n            \"Labor Negotiator\",\n            \"Labor Organizer\",\n            \"Labor Relations Manager\",\n            \"Lab Services Director\",\n            \"Lab Technician\",\n            \"Land Developer\",\n            \"Landscape Architect\",\n            \"Law Enforcement Officer\",\n            \"Lawyer\",\n            \"Lead Software Engineer\",\n            \"Lead Software Test Engineer\",\n            \"Leasing Manager\",\n            \"Legal Secretary\",\n            \"Library Manager\",\n            \"Litigation Attorney\",\n            \"Loan Officer\",\n            \"Lobbyist\",\n            \"Logistics Manager\",\n            \"Maintenance Manager\",\n            \"Management Consultant\",\n            \"Managed Care Director\",\n            \"Managing Partner\",\n            \"Manufacturing Director\",\n            \"Manpower Planner\",\n            \"Marine Biologist\",\n            \"Market Res. Analyst\",\n            \"Marketing Director\",\n            \"Materials Manager\",\n            \"Mathematician\",\n            \"Membership Chairman\",\n            \"Mechanic\",\n            \"Mechanical Engineer\",\n            \"Media Buyer\",\n            \"Medical Investor\",\n            \"Medical Secretary\",\n            \"Medical Technician\",\n            \"Mental Health Counselor\",\n            \"Merchandiser\",\n            \"Metallurgical Engineering\",\n            \"Meteorologist\",\n            \"Microbiologist\",\n            \"MIS Manager\",\n            \"Motion Picture Director\",\n            \"Multimedia Director\",\n            \"Musician\",\n            \"Network Administrator\",\n            \"Network Specialist\",\n            \"Network Operator\",\n            \"New Product Manager\",\n            \"Novelist\",\n            \"Nuclear Engineer\",\n            \"Nuclear Specialist\",\n            \"Nutritionist\",\n            \"Nursing Administrator\",\n            \"Occupational Therapist\",\n            \"Oceanographer\",\n            \"Office Manager\",\n            \"Operations Manager\",\n            \"Operations Research Director\",\n            \"Optical Technician\",\n            \"Optometrist\",\n            \"Organizational Development Manager\",\n            \"Outplacement Specialist\",\n            \"Paralegal\",\n            \"Park Ranger\",\n            \"Patent Attorney\",\n            \"Payroll Specialist\",\n            \"Personnel Specialist\",\n            \"Petroleum Engineer\",\n            \"Pharmacist\",\n            \"Photographer\",\n            \"Physical Therapist\",\n            \"Physician\",\n            \"Physician Assistant\",\n            \"Physicist\",\n            \"Planning Director\",\n            \"Podiatrist\",\n            \"Political Analyst\",\n            \"Political Scientist\",\n            \"Politician\",\n            \"Portfolio Manager\",\n            \"Preschool Management\",\n            \"Preschool Teacher\",\n            \"Principal\",\n            \"Private Banker\",\n            \"Private Investigator\",\n            \"Probation Officer\",\n            \"Process Engineer\",\n            \"Producer\",\n            \"Product Manager\",\n            \"Product Engineer\",\n            \"Production Engineer\",\n            \"Production Planner\",\n            \"Professional Athlete\",\n            \"Professional Coach\",\n            \"Professor\",\n            \"Project Engineer\",\n            \"Project Manager\",\n            \"Program Manager\",\n            \"Property Manager\",\n            \"Public Administrator\",\n            \"Public Safety Director\",\n            \"PR Specialist\",\n            \"Publisher\",\n            \"Purchasing Agent\",\n            \"Publishing Director\",\n            \"Quality Assurance Specialist\",\n            \"Quality Control Engineer\",\n            \"Quality Control Inspector\",\n            \"Radiology Manager\",\n            \"Railroad Engineer\",\n            \"Real Estate Broker\",\n            \"Recreational Director\",\n            \"Recruiter\",\n            \"Redevelopment Specialist\",\n            \"Regulatory Affairs Manager\",\n            \"Registered Nurse\",\n            \"Rehabilitation Counselor\",\n            \"Relocation Manager\",\n            \"Reporter\",\n            \"Research Specialist\",\n            \"Restaurant Manager\",\n            \"Retail Store Manager\",\n            \"Risk Analyst\",\n            \"Safety Engineer\",\n            \"Sales Engineer\",\n            \"Sales Trainer\",\n            \"Sales Promotion Manager\",\n            \"Sales Representative\",\n            \"Sales Manager\",\n            \"Service Manager\",\n            \"Sanitation Engineer\",\n            \"Scientific Programmer\",\n            \"Scientific Writer\",\n            \"Securities Analyst\",\n            \"Security Consultant\",\n            \"Security Director\",\n            \"Seminar Presenter\",\n            \"Ship's Officer\",\n            \"Singer\",\n            \"Social Director\",\n            \"Social Program Planner\",\n            \"Social Research\",\n            \"Social Scientist\",\n            \"Social Worker\",\n            \"Sociologist\",\n            \"Software Developer\",\n            \"Software Engineer\",\n            \"Software Test Engineer\",\n            \"Soil Scientist\",\n            \"Special Events Manager\",\n            \"Special Education Teacher\",\n            \"Special Projects Director\",\n            \"Speech Pathologist\",\n            \"Speech Writer\",\n            \"Sports Event Manager\",\n            \"Statistician\",\n            \"Store Manager\",\n            \"Strategic Alliance Director\",\n            \"Strategic Planning Director\",\n            \"Stress Reduction Specialist\",\n            \"Stockbroker\",\n            \"Surveyor\",\n            \"Structural Engineer\",\n            \"Superintendent\",\n            \"Supply Chain Director\",\n            \"System Engineer\",\n            \"Systems Analyst\",\n            \"Systems Programmer\",\n            \"System Administrator\",\n            \"Tax Specialist\",\n            \"Teacher\",\n            \"Technical Support Specialist\",\n            \"Technical Illustrator\",\n            \"Technical Writer\",\n            \"Technology Director\",\n            \"Telecom Analyst\",\n            \"Telemarketer\",\n            \"Theatrical Director\",\n            \"Title Examiner\",\n            \"Tour Escort\",\n            \"Tour Guide Director\",\n            \"Traffic Manager\",\n            \"Trainer Translator\",\n            \"Transportation Manager\",\n            \"Travel Agent\",\n            \"Treasurer\",\n            \"TV Programmer\",\n            \"Underwriter\",\n            \"Union Representative\",\n            \"University Administrator\",\n            \"University Dean\",\n            \"Urban Planner\",\n            \"Veterinarian\",\n            \"Vendor Relations Director\",\n            \"Viticulturist\",\n            \"Warehouse Manager\"\n        ],\n        animals : {\n          //list of ocean animals comes from https://owlcation.com/stem/list-of-ocean-animals\n          \"ocean\" : [\"Acantharea\",\"Anemone\",\"Angelfish King\",\"Ahi Tuna\",\"Albacore\",\"American Oyster\",\"Anchovy\",\"Armored Snail\",\"Arctic Char\",\"Atlantic Bluefin Tuna\",\"Atlantic Cod\",\"Atlantic Goliath Grouper\",\"Atlantic Trumpetfish\",\"Atlantic Wolffish\",\"Baleen Whale\",\"Banded Butterflyfish\",\"Banded Coral Shrimp\",\"Banded Sea Krait\",\"Barnacle\",\"Barndoor Skate\",\"Barracuda\",\"Basking Shark\",\"Bass\",\"Beluga Whale\",\"Bluebanded Goby\",\"Bluehead Wrasse\",\"Bluefish\",\"Bluestreak Cleaner-Wrasse\",\"Blue Marlin\",\"Blue Shark\",\"Blue Spiny Lobster\",\"Blue Tang\",\"Blue Whale\",\"Broadclub Cuttlefish\",\"Bull Shark\",\"Chambered Nautilus\",\"Chilean Basket Star\",\"Chilean Jack Mackerel\",\"Chinook Salmon\",\"Christmas Tree Worm\",\"Clam\",\"Clown Anemonefish\",\"Clown Triggerfish\",\"Cod\",\"Coelacanth\",\"Cockscomb Cup Coral\",\"Common Fangtooth\",\"Conch\",\"Cookiecutter Shark\",\"Copepod\",\"Coral\",\"Corydoras\",\"Cownose Ray\",\"Crab\",\"Crown-of-Thorns Starfish\",\"Cushion Star\",\"Cuttlefish\",\"California Sea Otters\",\"Dolphin\",\"Dolphinfish\",\"Dory\",\"Devil Fish\",\"Dugong\",\"Dumbo Octopus\",\"Dungeness Crab\",\"Eccentric Sand Dollar\",\"Edible Sea Cucumber\",\"Eel\",\"Elephant Seal\",\"Elkhorn Coral\",\"Emperor Shrimp\",\"Estuarine Crocodile\",\"Fathead Sculpin\",\"Fiddler Crab\",\"Fin Whale\",\"Flameback\",\"Flamingo Tongue Snail\",\"Flashlight Fish\",\"Flatback Turtle\",\"Flatfish\",\"Flying Fish\",\"Flounder\",\"Fluke\",\"French Angelfish\",\"Frilled Shark\",\"Fugu (also called Pufferfish)\",\"Gar\",\"Geoduck\",\"Giant Barrel Sponge\",\"Giant Caribbean Sea Anemone\",\"Giant Clam\",\"Giant Isopod\",\"Giant Kingfish\",\"Giant Oarfish\",\"Giant Pacific Octopus\",\"Giant Pyrosome\",\"Giant Sea Star\",\"Giant Squid\",\"Glowing Sucker Octopus\",\"Giant Tube Worm\",\"Goblin Shark\",\"Goosefish\",\"Great White Shark\",\"Greenland Shark\",\"Grey Atlantic Seal\",\"Grouper\",\"Grunion\",\"Guineafowl Puffer\",\"Haddock\",\"Hake\",\"Halibut\",\"Hammerhead Shark\",\"Hapuka\",\"Harbor Porpoise\",\"Harbor Seal\",\"Hatchetfish\",\"Hawaiian Monk Seal\",\"Hawksbill Turtle\",\"Hector's Dolphin\",\"Hermit Crab\",\"Herring\",\"Hoki\",\"Horn Shark\",\"Horseshoe Crab\",\"Humpback Anglerfish\",\"Humpback Whale\",\"Icefish\",\"Imperator Angelfish\",\"Irukandji Jellyfish\",\"Isopod\",\"Ivory Bush Coral\",\"Japanese Spider Crab\",\"Jellyfish\",\"John Dory\",\"Juan Fernandez Fur Seal\",\"Killer Whale\",\"Kiwa Hirsuta\",\"Krill\",\"Lagoon Triggerfish\",\"Lamprey\",\"Leafy Seadragon\",\"Leopard Seal\",\"Limpet\",\"Ling\",\"Lionfish\",\"Lions Mane Jellyfish\",\"Lobe Coral\",\"Lobster\",\"Loggerhead Turtle\",\"Longnose Sawshark\",\"Longsnout Seahorse\",\"Lophelia Coral\",\"Marrus Orthocanna\",\"Manatee\",\"Manta Ray\",\"Marlin\",\"Megamouth Shark\",\"Mexican Lookdown\",\"Mimic Octopus\",\"Moon Jelly\",\"Mollusk\",\"Monkfish\",\"Moray Eel\",\"Mullet\",\"Mussel\",\"Megaladon\",\"Napoleon Wrasse\",\"Nassau Grouper\",\"Narwhal\",\"Nautilus\",\"Needlefish\",\"Northern Seahorse\",\"North Atlantic Right Whale\",\"Northern Red Snapper\",\"Norway Lobster\",\"Nudibranch\",\"Nurse Shark\",\"Oarfish\",\"Ocean Sunfish\",\"Oceanic Whitetip Shark\",\"Octopus\",\"Olive Sea Snake\",\"Orange Roughy\",\"Ostracod\",\"Otter\",\"Oyster\",\"Pacific Angelshark\",\"Pacific Blackdragon\",\"Pacific Halibut\",\"Pacific Sardine\",\"Pacific Sea Nettle Jellyfish\",\"Pacific White Sided Dolphin\",\"Pantropical Spotted Dolphin\",\"Patagonian Toothfish\",\"Peacock Mantis Shrimp\",\"Pelagic Thresher Shark\",\"Penguin\",\"Peruvian Anchoveta\",\"Pilchard\",\"Pink Salmon\",\"Pinniped\",\"Plankton\",\"Porpoise\",\"Polar Bear\",\"Portuguese Man o' War\",\"Pycnogonid Sea Spider\",\"Quahog\",\"Queen Angelfish\",\"Queen Conch\",\"Queen Parrotfish\",\"Queensland Grouper\",\"Ragfish\",\"Ratfish\",\"Rattail Fish\",\"Ray\",\"Red Drum\",\"Red King Crab\",\"Ringed Seal\",\"Risso's Dolphin\",\"Ross Seals\",\"Sablefish\",\"Salmon\",\"Sand Dollar\",\"Sandbar Shark\",\"Sawfish\",\"Sarcastic Fringehead\",\"Scalloped Hammerhead Shark\",\"Seahorse\",\"Sea Cucumber\",\"Sea Lion\",\"Sea Urchin\",\"Seal\",\"Shark\",\"Shortfin Mako Shark\",\"Shovelnose Guitarfish\",\"Shrimp\",\"Silverside Fish\",\"Skipjack Tuna\",\"Slender Snipe Eel\",\"Smalltooth Sawfish\",\"Smelts\",\"Sockeye Salmon\",\"Southern Stingray\",\"Sponge\",\"Spotted Porcupinefish\",\"Spotted Dolphin\",\"Spotted Eagle Ray\",\"Spotted Moray\",\"Squid\",\"Squidworm\",\"Starfish\",\"Stickleback\",\"Stonefish\",\"Stoplight Loosejaw\",\"Sturgeon\",\"Swordfish\",\"Tan Bristlemouth\",\"Tasseled Wobbegong\",\"Terrible Claw Lobster\",\"Threespot Damselfish\",\"Tiger Prawn\",\"Tiger Shark\",\"Tilefish\",\"Toadfish\",\"Tropical Two-Wing Flyfish\",\"Tuna\",\"Umbrella Squid\",\"Velvet Crab\",\"Venus Flytrap Sea Anemone\",\"Vigtorniella Worm\",\"Viperfish\",\"Vampire Squid\",\"Vaquita\",\"Wahoo\",\"Walrus\",\"West Indian Manatee\",\"Whale\",\"Whale Shark\",\"Whiptail Gulper\",\"White-Beaked Dolphin\",\"White-Ring Garden Eel\",\"White Shrimp\",\"Wobbegong\",\"Wrasse\",\"Wreckfish\",\"Xiphosura\",\"Yellowtail Damselfish\",\"Yelloweye Rockfish\",\"Yellow Cup Black Coral\",\"Yellow Tube Sponge\",\"Yellowfin Tuna\",\"Zebrashark\",\"Zooplankton\"],\n          //list of desert, grassland, and forest animals comes from http://www.skyenimals.com/\n          \"desert\" : [\"Aardwolf\",\"Addax\",\"African Wild Ass\",\"Ant\",\"Antelope\",\"Armadillo\",\"Baboon\",\"Badger\",\"Bat\",\"Bearded Dragon\",\"Beetle\",\"Bird\",\"Black-footed Cat\",\"Boa\",\"Brown Bear\",\"Bustard\",\"Butterfly\",\"Camel\",\"Caracal\",\"Caracara\",\"Caterpillar\",\"Centipede\",\"Cheetah\",\"Chipmunk\",\"Chuckwalla\",\"Climbing Mouse\",\"Coati\",\"Cobra\",\"Cotton Rat\",\"Cougar\",\"Courser\",\"Crane Fly\",\"Crow\",\"Dassie Rat\",\"Dove\",\"Dunnart\",\"Eagle\",\"Echidna\",\"Elephant\",\"Emu\",\"Falcon\",\"Fly\",\"Fox\",\"Frogmouth\",\"Gecko\",\"Geoffroy's Cat\",\"Gerbil\",\"Grasshopper\",\"Guanaco\",\"Gundi\",\"Hamster\",\"Hawk\",\"Hedgehog\",\"Hyena\",\"Hyrax\",\"Jackal\",\"Kangaroo\",\"Kangaroo Rat\",\"Kestrel\",\"Kowari\",\"Kultarr\",\"Leopard\",\"Lion\",\"Macaw\",\"Meerkat\",\"Mouse\",\"Oryx\",\"Ostrich\",\"Owl\",\"Pronghorn\",\"Python\",\"Rabbit\",\"Raccoon\",\"Rattlesnake\",\"Rhinoceros\",\"Sand Cat\",\"Spectacled Bear\",\"Spiny Mouse\",\"Starling\",\"Stick Bug\",\"Tarantula\",\"Tit\",\"Toad\",\"Tortoise\",\"Tyrant Flycatcher\",\"Viper\",\"Vulture\",\"Waxwing\",\"Xerus\",\"Zebra\"],\n          \"grassland\" : [\"Aardvark\",\"Aardwolf\",\"Accentor\",\"African Buffalo\",\"African Wild Dog\",\"Alpaca\",\"Anaconda\",\"Ant\",\"Anteater\",\"Antelope\",\"Armadillo\",\"Baboon\",\"Badger\",\"Bandicoot\",\"Barbet\",\"Bat\",\"Bee\",\"Bee-eater\",\"Beetle\",\"Bird\",\"Bison\",\"Black-footed Cat\",\"Black-footed Ferret\",\"Bluebird\",\"Boa\",\"Bowerbird\",\"Brown Bear\",\"Bush Dog\",\"Bushshrike\",\"Bustard\",\"Butterfly\",\"Buzzard\",\"Caracal\",\"Caracara\",\"Cardinal\",\"Caterpillar\",\"Cheetah\",\"Chipmunk\",\"Civet\",\"Climbing Mouse\",\"Clouded Leopard\",\"Coati\",\"Cobra\",\"Cockatoo\",\"Cockroach\",\"Common Genet\",\"Cotton Rat\",\"Cougar\",\"Courser\",\"Coyote\",\"Crane\",\"Crane Fly\",\"Cricket\",\"Crow\",\"Culpeo\",\"Death Adder\",\"Deer\",\"Deer Mouse\",\"Dingo\",\"Dinosaur\",\"Dove\",\"Drongo\",\"Duck\",\"Duiker\",\"Dunnart\",\"Eagle\",\"Echidna\",\"Elephant\",\"Elk\",\"Emu\",\"Falcon\",\"Finch\",\"Flea\",\"Fly\",\"Flying Frog\",\"Fox\",\"Frog\",\"Frogmouth\",\"Garter Snake\",\"Gazelle\",\"Gecko\",\"Geoffroy's Cat\",\"Gerbil\",\"Giant Tortoise\",\"Giraffe\",\"Grasshopper\",\"Grison\",\"Groundhog\",\"Grouse\",\"Guanaco\",\"Guinea Pig\",\"Hamster\",\"Harrier\",\"Hartebeest\",\"Hawk\",\"Hedgehog\",\"Helmetshrike\",\"Hippopotamus\",\"Hornbill\",\"Hyena\",\"Hyrax\",\"Impala\",\"Jackal\",\"Jaguar\",\"Jaguarundi\",\"Kangaroo\",\"Kangaroo Rat\",\"Kestrel\",\"Kultarr\",\"Ladybug\",\"Leopard\",\"Lion\",\"Macaw\",\"Meerkat\",\"Mouse\",\"Newt\",\"Oryx\",\"Ostrich\",\"Owl\",\"Pangolin\",\"Pheasant\",\"Prairie Dog\",\"Pronghorn\",\"Przewalski's Horse\",\"Python\",\"Quoll\",\"Rabbit\",\"Raven\",\"Rhinoceros\",\"Shelduck\",\"Sloth Bear\",\"Spectacled Bear\",\"Squirrel\",\"Starling\",\"Stick Bug\",\"Tamandua\",\"Tasmanian Devil\",\"Thornbill\",\"Thrush\",\"Toad\",\"Tortoise\"],\n          \"forest\" : [\"Agouti\",\"Anaconda\",\"Anoa\",\"Ant\",\"Anteater\",\"Antelope\",\"Armadillo\",\"Asian Black Bear\",\"Aye-aye\",\"Babirusa\",\"Baboon\",\"Badger\",\"Bandicoot\",\"Banteng\",\"Barbet\",\"Basilisk\",\"Bat\",\"Bearded Dragon\",\"Bee\",\"Bee-eater\",\"Beetle\",\"Bettong\",\"Binturong\",\"Bird-of-paradise\",\"Bongo\",\"Bowerbird\",\"Bulbul\",\"Bush Dog\",\"Bushbaby\",\"Bushshrike\",\"Butterfly\",\"Buzzard\",\"Caecilian\",\"Cardinal\",\"Cassowary\",\"Caterpillar\",\"Centipede\",\"Chameleon\",\"Chimpanzee\",\"Cicada\",\"Civet\",\"Clouded Leopard\",\"Coati\",\"Cobra\",\"Cockatoo\",\"Cockroach\",\"Colugo\",\"Cotinga\",\"Cotton Rat\",\"Cougar\",\"Crane Fly\",\"Cricket\",\"Crocodile\",\"Crow\",\"Cuckoo\",\"Cuscus\",\"Death Adder\",\"Deer\",\"Dhole\",\"Dingo\",\"Dinosaur\",\"Drongo\",\"Duck\",\"Duiker\",\"Eagle\",\"Echidna\",\"Elephant\",\"Finch\",\"Flat-headed Cat\",\"Flea\",\"Flowerpecker\",\"Fly\",\"Flying Frog\",\"Fossa\",\"Frog\",\"Frogmouth\",\"Gaur\",\"Gecko\",\"Gorilla\",\"Grison\",\"Hawaiian Honeycreeper\",\"Hawk\",\"Hedgehog\",\"Helmetshrike\",\"Hornbill\",\"Hyrax\",\"Iguana\",\"Jackal\",\"Jaguar\",\"Jaguarundi\",\"Kestrel\",\"Ladybug\",\"Lemur\",\"Leopard\",\"Lion\",\"Macaw\",\"Mandrill\",\"Margay\",\"Monkey\",\"Mouse\",\"Mouse Deer\",\"Newt\",\"Okapi\",\"Old World Flycatcher\",\"Orangutan\",\"Owl\",\"Pangolin\",\"Peafowl\",\"Pheasant\",\"Possum\",\"Python\",\"Quokka\",\"Rabbit\",\"Raccoon\",\"Red Panda\",\"Red River Hog\",\"Rhinoceros\",\"Sloth Bear\",\"Spectacled Bear\",\"Squirrel\",\"Starling\",\"Stick Bug\",\"Sun Bear\",\"Tamandua\",\"Tamarin\",\"Tapir\",\"Tarantula\",\"Thrush\",\"Tiger\",\"Tit\",\"Toad\",\"Tortoise\",\"Toucan\",\"Trogon\",\"Trumpeter\",\"Turaco\",\"Turtle\",\"Tyrant Flycatcher\",\"Viper\",\"Vulture\",\"Wallaby\",\"Warbler\",\"Wasp\",\"Waxwing\",\"Weaver\",\"Weaver-finch\",\"Whistler\",\"White-eye\",\"Whydah\",\"Woodswallow\",\"Worm\",\"Wren\",\"Xenops\",\"Yellowjacket\",\"Accentor\",\"African Buffalo\",\"American Black Bear\",\"Anole\",\"Bird\",\"Bison\",\"Boa\",\"Brown Bear\",\"Chipmunk\",\"Common Genet\",\"Copperhead\",\"Coyote\",\"Deer Mouse\",\"Dormouse\",\"Elk\",\"Emu\",\"Fisher\",\"Fox\",\"Garter Snake\",\"Giant Panda\",\"Giant Tortoise\",\"Groundhog\",\"Grouse\",\"Guanaco\",\"Himalayan Tahr\",\"Kangaroo\",\"Koala\",\"Numbat\",\"Quoll\",\"Raccoon dog\",\"Tasmanian Devil\",\"Thornbill\",\"Turkey\",\"Vole\",\"Weasel\",\"Wildcat\",\"Wolf\",\"Wombat\",\"Woodchuck\",\"Woodpecker\"],\n          //list of farm animals comes from https://www.buzzle.com/articles/farm-animals-list.html\n          \"farm\" : [\"Alpaca\",\"Buffalo\",\"Banteng\",\"Cow\",\"Cat\",\"Chicken\",\"Carp\",\"Camel\",\"Donkey\",\"Dog\",\"Duck\",\"Emu\",\"Goat\",\"Gayal\",\"Guinea\",\"Goose\",\"Horse\",\"Honey\",\"Llama\",\"Pig\",\"Pigeon\",\"Rhea\",\"Rabbit\",\"Sheep\",\"Silkworm\",\"Turkey\",\"Yak\",\"Zebu\"],\n          //list of pet animals comes from https://www.dogbreedinfo.com/pets/pet.htm\n          \"pet\" : [\"Bearded Dragon\",\"Birds\",\"Burro\",\"Cats\",\"Chameleons\",\"Chickens\",\"Chinchillas\",\"Chinese Water Dragon\",\"Cows\",\"Dogs\",\"Donkey\",\"Ducks\",\"Ferrets\",\"Fish\",\"Geckos\",\"Geese\",\"Gerbils\",\"Goats\",\"Guinea Fowl\",\"Guinea Pigs\",\"Hamsters\",\"Hedgehogs\",\"Horses\",\"Iguanas\",\"Llamas\",\"Lizards\",\"Mice\",\"Mule\",\"Peafowl\",\"Pigs and Hogs\",\"Pigeons\",\"Ponies\",\"Pot Bellied Pig\",\"Rabbits\",\"Rats\",\"Sheep\",\"Skinks\",\"Snakes\",\"Stick Insects\",\"Sugar Gliders\",\"Tarantula\",\"Turkeys\",\"Turtles\"],\n          //list of zoo animals comes from https://bronxzoo.com/animals\n          \"zoo\" : [\"Aardvark\",\"African Wild Dog\",\"Aldabra Tortoise\",\"American Alligator\",\"American Bison\",\"Amur Tiger\",\"Anaconda\",\"Andean Condor\",\"Asian Elephant\",\"Baby Doll Sheep\",\"Bald Eagle\",\"Barred Owl\",\"Blue Iguana\",\"Boer Goat\",\"California Sea Lion\",\"Caribbean Flamingo\",\"Chinchilla\",\"Collared Lemur\",\"Coquerel's Sifaka\",\"Cuban Amazon Parrot\",\"Ebony Langur\",\"Fennec Fox\",\"Fossa\",\"Gelada\",\"Giant Anteater\",\"Giraffe\",\"Gorilla\",\"Grizzly Bear\",\"Henkel's Leaf-tailed Gecko\",\"Indian Gharial\",\"Indian Rhinoceros\",\"King Cobra\",\"King Vulture\",\"Komodo Dragon\",\"Linne's Two-toed Sloth\",\"Lion\",\"Little Penguin\",\"Madagascar Tree Boa\",\"Magellanic Penguin\",\"Malayan Tapir\",\"Malayan Tiger\",\"Matschies Tree Kangaroo\",\"Mini Donkey\",\"Monarch Butterfly\",\"Nile crocodile\",\"North American Porcupine\",\"Nubian Ibex\",\"Okapi\",\"Poison Dart Frog\",\"Polar Bear\",\"Pygmy Marmoset\",\"Radiated Tortoise\",\"Red Panda\",\"Red Ruffed Lemur\",\"Ring-tailed Lemur\",\"Ring-tailed Mongoose\",\"Rock Hyrax\",\"Small Clawed Asian Otter\",\"Snow Leopard\",\"Snowy Owl\",\"Southern White-faced Owl\",\"Southern White Rhinocerous\",\"Squirrel Monkey\",\"Tufted Puffin\",\"White Cheeked Gibbon\",\"White-throated Bee Eater\",\"Zebra\"]\n        },\n        primes: [\n            // 1230 first primes, i.e. all primes up to the first one greater than 10000, inclusive.\n            2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007\n        ],\n        emotions: [\n            \"love\",\n            \"joy\",\n            \"surprise\",\n            \"anger\",\n            \"sadness\",\n            \"fear\"\n        ],\n    };\n\n    var o_hasOwnProperty = Object.prototype.hasOwnProperty;\n    var o_keys = (Object.keys || function(obj) {\n      var result = [];\n      for (var key in obj) {\n        if (o_hasOwnProperty.call(obj, key)) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    });\n\n\n    function _copyObject(source, target) {\n      var keys = o_keys(source);\n      var key;\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        target[key] = source[key] || target[key];\n      }\n    }\n\n    function _copyArray(source, target) {\n      for (var i = 0, l = source.length; i < l; i++) {\n        target[i] = source[i];\n      }\n    }\n\n    function copyObject(source, _target) {\n        var isArray = Array.isArray(source);\n        var target = _target || (isArray ? new Array(source.length) : {});\n\n        if (isArray) {\n          _copyArray(source, target);\n        } else {\n          _copyObject(source, target);\n        }\n\n        return target;\n    }\n\n    /** Get the data based on key**/\n    Chance.prototype.get = function (name) {\n        return copyObject(data[name]);\n    };\n\n    // Mac Address\n    Chance.prototype.mac_address = function(options){\n        // typically mac addresses are separated by \":\"\n        // however they can also be separated by \"-\"\n        // the network variant uses a dot every fourth byte\n\n        options = initOptions(options);\n        if(!options.separator) {\n            options.separator =  options.networkVersion ? \".\" : \":\";\n        }\n\n        var mac_pool=\"ABCDEF1234567890\",\n            mac = \"\";\n        if(!options.networkVersion) {\n            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);\n        } else {\n            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);\n        }\n\n        return mac;\n    };\n\n    Chance.prototype.normal = function (options) {\n        options = initOptions(options, {mean : 0, dev : 1, pool : []});\n\n        testRange(\n            options.pool.constructor !== Array,\n            \"Chance: The pool option must be a valid array.\"\n        );\n        testRange(\n            typeof options.mean !== 'number',\n            \"Chance: Mean (mean) must be a number\"\n        );\n        testRange(\n            typeof options.dev !== 'number',\n            \"Chance: Standard deviation (dev) must be a number\"\n        );\n\n        // If a pool has been passed, then we are returning an item from that pool,\n        // using the normal distribution settings that were passed in\n        if (options.pool.length > 0) {\n            return this.normal_pool(options);\n        }\n\n        // The Marsaglia Polar method\n        var s, u, v, norm,\n            mean = options.mean,\n            dev = options.dev;\n\n        do {\n            // U and V are from the uniform distribution on (-1, 1)\n            u = this.random() * 2 - 1;\n            v = this.random() * 2 - 1;\n\n            s = u * u + v * v;\n        } while (s >= 1);\n\n        // Compute the standard normal variate\n        norm = u * Math.sqrt(-2 * Math.log(s) / s);\n\n        // Shape and scale\n        return dev * norm + mean;\n    };\n\n    Chance.prototype.normal_pool = function(options) {\n        var performanceCounter = 0;\n        do {\n            var idx = Math.round(this.normal({ mean: options.mean, dev: options.dev }));\n            if (idx < options.pool.length && idx >= 0) {\n                return options.pool[idx];\n            } else {\n                performanceCounter++;\n            }\n        } while(performanceCounter < 100);\n\n        throw new RangeError(\"Chance: Your pool is too small for the given mean and standard deviation. Please adjust.\");\n    };\n\n    Chance.prototype.radio = function (options) {\n        // Initial Letter (Typically Designated by Side of Mississippi River)\n        options = initOptions(options, {side : \"?\"});\n        var fl = \"\";\n        switch (options.side.toLowerCase()) {\n        case \"east\":\n        case \"e\":\n            fl = \"W\";\n            break;\n        case \"west\":\n        case \"w\":\n            fl = \"K\";\n            break;\n        default:\n            fl = this.character({pool: \"KW\"});\n            break;\n        }\n\n        return fl + this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"});\n    };\n\n    // Set the data as key and data or the data map\n    Chance.prototype.set = function (name, values) {\n        if (typeof name === \"string\") {\n            data[name] = values;\n        } else {\n            data = copyObject(name, data);\n        }\n    };\n\n    Chance.prototype.tv = function (options) {\n        return this.radio(options);\n    };\n\n    // ID number for Brazil companies\n    Chance.prototype.cnpj = function () {\n        var n = this.n(this.natural, 8, { max: 9 });\n        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10){\n            d1 = 0;\n        }\n        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10){\n            d2 = 0;\n        }\n        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;\n    };\n\n    Chance.prototype.emotion = function () {\n        return this.pick(this.get(\"emotions\"));\n    };\n\n    // -- End Miscellaneous --\n\n    Chance.prototype.mersenne_twister = function (seed) {\n        return new MersenneTwister(seed);\n    };\n\n    Chance.prototype.blueimp_md5 = function () {\n        return new BlueImpMD5();\n    };\n\n    // Mersenne Twister from https://gist.github.com/banksean/300494\n    /*\n       A C-program for MT19937, with initialization improved 2002/1/26.\n       Coded by Takuji Nishimura and Makoto Matsumoto.\n\n       Before using, initialize the state by using init_genrand(seed)\n       or init_by_array(init_key, key_length).\n\n       Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n       All rights reserved.\n\n       Redistribution and use in source and binary forms, with or without\n       modification, are permitted provided that the following conditions\n       are met:\n\n       1. Redistributions of source code must retain the above copyright\n       notice, this list of conditions and the following disclaimer.\n\n       2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n       3. The names of its contributors may not be used to endorse or promote\n       products derived from this software without specific prior written\n       permission.\n\n       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n       \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n       A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n       CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n       EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n       PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n       PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n       LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n       NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n       SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n       Any feedback is very welcome.\n       http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n       email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n     */\n    var MersenneTwister = function (seed) {\n        if (seed === undefined) {\n            // kept random number same size as time used previously to ensure no unexpected results downstream\n            seed = Math.floor(Math.random()*Math.pow(10,13));\n        }\n        /* Period parameters */\n        this.N = 624;\n        this.M = 397;\n        this.MATRIX_A = 0x9908b0df;   /* constant vector a */\n        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n        this.mt = new Array(this.N); /* the array for the state vector */\n        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\n\n        this.init_genrand(seed);\n    };\n\n    /* initializes mt[N] with a seed */\n    MersenneTwister.prototype.init_genrand = function (s) {\n        this.mt[0] = s >>> 0;\n        for (this.mti = 1; this.mti < this.N; this.mti++) {\n            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;\n            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n            /* In the previous versions, MSBs of the seed affect   */\n            /* only MSBs of the array mt[].                        */\n            /* 2002/01/09 modified by Makoto Matsumoto             */\n            this.mt[this.mti] >>>= 0;\n            /* for >32 bit machines */\n        }\n    };\n\n    /* initialize by an array with array-length */\n    /* init_key is the array for initializing keys */\n    /* key_length is its length */\n    /* slight change for C++, 2004/2/26 */\n    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {\n        var i = 1, j = 0, k, s;\n        this.init_genrand(19650218);\n        k = (this.N > key_length ? this.N : key_length);\n        for (; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            j++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n            if (j >= key_length) { j = 0; }\n        }\n        for (k = this.N - 1; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n        }\n\n        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n    };\n\n    /* generates a random number on [0,0xffffffff]-interval */\n    MersenneTwister.prototype.genrand_int32 = function () {\n        var y;\n        var mag01 = new Array(0x0, this.MATRIX_A);\n        /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n        if (this.mti >= this.N) { /* generate N words at one time */\n            var kk;\n\n            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */\n                this.init_genrand(5489); /* a default initial seed is used */\n            }\n            for (kk = 0; kk < this.N - this.M; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            for (;kk < this.N - 1; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n            this.mti = 0;\n        }\n\n        y = this.mt[this.mti++];\n\n        /* Tempering */\n        y ^= (y >>> 11);\n        y ^= (y << 7) & 0x9d2c5680;\n        y ^= (y << 15) & 0xefc60000;\n        y ^= (y >>> 18);\n\n        return y >>> 0;\n    };\n\n    /* generates a random number on [0,0x7fffffff]-interval */\n    MersenneTwister.prototype.genrand_int31 = function () {\n        return (this.genrand_int32() >>> 1);\n    };\n\n    /* generates a random number on [0,1]-real-interval */\n    MersenneTwister.prototype.genrand_real1 = function () {\n        return this.genrand_int32() * (1.0 / 4294967295.0);\n        /* divided by 2^32-1 */\n    };\n\n    /* generates a random number on [0,1)-real-interval */\n    MersenneTwister.prototype.random = function () {\n        return this.genrand_int32() * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on (0,1)-real-interval */\n    MersenneTwister.prototype.genrand_real3 = function () {\n        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on [0,1) with 53-bit resolution*/\n    MersenneTwister.prototype.genrand_res53 = function () {\n        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;\n        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n    };\n\n    // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5\n    var BlueImpMD5 = function () {};\n\n    BlueImpMD5.prototype.VERSION = '1.0.1';\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    BlueImpMD5.prototype.safe_add = function safe_add(x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    };\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    BlueImpMD5.prototype.bit_roll = function (num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    };\n\n    /*\n    * These functions implement the five basic operations the algorithm uses.\n    */\n    BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {\n        return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\n    };\n    BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    };\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    BlueImpMD5.prototype.binl_md5 = function (x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << (len % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var i, olda, oldb, oldc, oldd,\n            a =  1732584193,\n            b = -271733879,\n            c = -1732584194,\n            d =  271733878;\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a;\n            oldb = b;\n            oldc = c;\n            oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i],       7, -680876936);\n            d = this.md5_ff(d, a, b, c, x[i +  1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i +  2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i +  4],  7, -176418897);\n            d = this.md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i +  7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i +  1],  5, -165796510);\n            d = this.md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i + 11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i],      20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i +  5],  5, -701558691);\n            d = this.md5_gg(d, a, b, c, x[i + 10],  9,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i +  4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i +  9],  5,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i +  3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i +  2],  9, -51403784);\n            c = this.md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i +  5],  4, -378558);\n            d = this.md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i +  7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i + 13],  4,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i],      11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i +  3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i +  6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i +  9],  4, -640364487);\n            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i + 15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i +  2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i],       6, -198630844);\n            d = this.md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i +  5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i +  4],  6, -145523070);\n            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i +  2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i +  9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n        }\n        return [a, b, c, d];\n    };\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    BlueImpMD5.prototype.binl2rstr = function (input) {\n        var i,\n            output = '';\n        for (i = 0; i < input.length * 32; i += 8) {\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n        }\n        return output;\n    };\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    BlueImpMD5.prototype.rstr2binl = function (input) {\n        var i,\n            output = [];\n        output[(input.length >> 2) - 1] = undefined;\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0;\n        }\n        for (i = 0; i < input.length * 8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n        }\n        return output;\n    };\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    BlueImpMD5.prototype.rstr_md5 = function (s) {\n        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\n    };\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {\n        var i,\n            bkey = this.rstr2binl(key),\n            ipad = [],\n            opad = [],\n            hash;\n        ipad[15] = opad[15] = undefined;\n        if (bkey.length > 16) {\n            bkey = this.binl_md5(bkey, key.length * 8);\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\n        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\n    };\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    BlueImpMD5.prototype.rstr2hex = function (input) {\n        var hex_tab = '0123456789abcdef',\n            output = '',\n            x,\n            i;\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i);\n            output += hex_tab.charAt((x >>> 4) & 0x0F) +\n                hex_tab.charAt(x & 0x0F);\n        }\n        return output;\n    };\n\n    /*\n    * Encode a string as utf-8\n    */\n    BlueImpMD5.prototype.str2rstr_utf8 = function (input) {\n        return unescape(encodeURIComponent(input));\n    };\n\n    /*\n    * Take string arguments and return either raw or hex encoded strings\n    */\n    BlueImpMD5.prototype.raw_md5 = function (s) {\n        return this.rstr_md5(this.str2rstr_utf8(s));\n    };\n    BlueImpMD5.prototype.hex_md5 = function (s) {\n        return this.rstr2hex(this.raw_md5(s));\n    };\n    BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {\n        return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));\n    };\n    BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {\n        return this.rstr2hex(this.raw_hmac_md5(k, d));\n    };\n\n    BlueImpMD5.prototype.md5 = function (string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return this.hex_md5(string);\n            }\n\n            return this.raw_md5(string);\n        }\n\n        if (!raw) {\n            return this.hex_hmac_md5(key, string);\n        }\n\n        return this.raw_hmac_md5(key, string);\n    };\n\n    // CommonJS module\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = Chance;\n        }\n        exports.Chance = Chance;\n    }\n\n    // Register as an anonymous AMD module\n    if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return Chance;\n        });\n    }\n\n    // if there is a importsScrips object define chance for worker\n    // allows worker to use full Chance functionality with seed\n    if (typeof importScripts !== 'undefined') {\n        chance = new Chance();\n        self.Chance = Chance;\n    }\n\n    // If there is a window object, that at least has a document property,\n    // instantiate and define chance on the window\n    if (typeof window === \"object\" && typeof window.document === \"object\") {\n        window.Chance = Chance;\n        window.chance = new Chance();\n    }\n})();\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","import { Chance } from 'chance';\r\nimport { Mappable } from './CustomMap';\r\n\r\nconst type = new Chance();\r\n\r\nexport class Company implements Mappable {\r\n  companyName: string;\r\n  catchPhrase: string;\r\n  location: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  color: string = 'blue';\r\n\r\n  constructor() {\r\n    this.companyName = type.company();\r\n    this.catchPhrase = type.hashtag();\r\n    this.location = {\r\n      lat: type.latitude(),\r\n      lng: type.longitude()\r\n    };\r\n  }\r\n\r\n  markerContent(): string {\r\n    return `Company name: ${this.companyName}`;\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"index.b71e74eb.js.map","sourceRoot":"/__parcel_source_root/"}